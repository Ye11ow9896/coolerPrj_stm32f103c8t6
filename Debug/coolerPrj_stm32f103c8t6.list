
coolerPrj_stm32f103c8t6.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000039a8  08000110  08000110  00010110  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000298  08003ab8  08003ab8  00013ab8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08003d50  08003d50  000201d8  2**0
                  CONTENTS
  4 .ARM          00000000  08003d50  08003d50  000201d8  2**0
                  CONTENTS
  5 .preinit_array 00000000  08003d50  08003d50  000201d8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08003d50  08003d50  00013d50  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08003d54  08003d54  00013d54  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001d8  20000000  08003d58  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000058  200001d8  08003f30  000201d8  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000230  08003f30  00020230  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000201d8  2**0
                  CONTENTS, READONLY
 12 .debug_info   000045b3  00000000  00000000  00020201  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00000c4d  00000000  00000000  000247b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000178  00000000  00000000  00025408  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000100  00000000  00000000  00025580  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  000114ab  00000000  00000000  00025680  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00002c19  00000000  00000000  00036b2b  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    0005782d  00000000  00000000  00039744  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  00090f71  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000eb0  00000000  00000000  00090fec  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000110 <__do_global_dtors_aux>:
 8000110:	b510      	push	{r4, lr}
 8000112:	4c05      	ldr	r4, [pc, #20]	; (8000128 <__do_global_dtors_aux+0x18>)
 8000114:	7823      	ldrb	r3, [r4, #0]
 8000116:	b933      	cbnz	r3, 8000126 <__do_global_dtors_aux+0x16>
 8000118:	4b04      	ldr	r3, [pc, #16]	; (800012c <__do_global_dtors_aux+0x1c>)
 800011a:	b113      	cbz	r3, 8000122 <__do_global_dtors_aux+0x12>
 800011c:	4804      	ldr	r0, [pc, #16]	; (8000130 <__do_global_dtors_aux+0x20>)
 800011e:	f3af 8000 	nop.w
 8000122:	2301      	movs	r3, #1
 8000124:	7023      	strb	r3, [r4, #0]
 8000126:	bd10      	pop	{r4, pc}
 8000128:	200001d8 	.word	0x200001d8
 800012c:	00000000 	.word	0x00000000
 8000130:	08003aa0 	.word	0x08003aa0

08000134 <frame_dummy>:
 8000134:	b508      	push	{r3, lr}
 8000136:	4b03      	ldr	r3, [pc, #12]	; (8000144 <frame_dummy+0x10>)
 8000138:	b11b      	cbz	r3, 8000142 <frame_dummy+0xe>
 800013a:	4903      	ldr	r1, [pc, #12]	; (8000148 <frame_dummy+0x14>)
 800013c:	4803      	ldr	r0, [pc, #12]	; (800014c <frame_dummy+0x18>)
 800013e:	f3af 8000 	nop.w
 8000142:	bd08      	pop	{r3, pc}
 8000144:	00000000 	.word	0x00000000
 8000148:	200001dc 	.word	0x200001dc
 800014c:	08003aa0 	.word	0x08003aa0

08000150 <strlen>:
 8000150:	4603      	mov	r3, r0
 8000152:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000156:	2a00      	cmp	r2, #0
 8000158:	d1fb      	bne.n	8000152 <strlen+0x2>
 800015a:	1a18      	subs	r0, r3, r0
 800015c:	3801      	subs	r0, #1
 800015e:	4770      	bx	lr

08000160 <__aeabi_drsub>:
 8000160:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000164:	e002      	b.n	800016c <__adddf3>
 8000166:	bf00      	nop

08000168 <__aeabi_dsub>:
 8000168:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800016c <__adddf3>:
 800016c:	b530      	push	{r4, r5, lr}
 800016e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000172:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000176:	ea94 0f05 	teq	r4, r5
 800017a:	bf08      	it	eq
 800017c:	ea90 0f02 	teqeq	r0, r2
 8000180:	bf1f      	itttt	ne
 8000182:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000186:	ea55 0c02 	orrsne.w	ip, r5, r2
 800018a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800018e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000192:	f000 80e2 	beq.w	800035a <__adddf3+0x1ee>
 8000196:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800019a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800019e:	bfb8      	it	lt
 80001a0:	426d      	neglt	r5, r5
 80001a2:	dd0c      	ble.n	80001be <__adddf3+0x52>
 80001a4:	442c      	add	r4, r5
 80001a6:	ea80 0202 	eor.w	r2, r0, r2
 80001aa:	ea81 0303 	eor.w	r3, r1, r3
 80001ae:	ea82 0000 	eor.w	r0, r2, r0
 80001b2:	ea83 0101 	eor.w	r1, r3, r1
 80001b6:	ea80 0202 	eor.w	r2, r0, r2
 80001ba:	ea81 0303 	eor.w	r3, r1, r3
 80001be:	2d36      	cmp	r5, #54	; 0x36
 80001c0:	bf88      	it	hi
 80001c2:	bd30      	pophi	{r4, r5, pc}
 80001c4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80001c8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80001cc:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80001d0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80001d4:	d002      	beq.n	80001dc <__adddf3+0x70>
 80001d6:	4240      	negs	r0, r0
 80001d8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80001dc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 80001e0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80001e4:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80001e8:	d002      	beq.n	80001f0 <__adddf3+0x84>
 80001ea:	4252      	negs	r2, r2
 80001ec:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80001f0:	ea94 0f05 	teq	r4, r5
 80001f4:	f000 80a7 	beq.w	8000346 <__adddf3+0x1da>
 80001f8:	f1a4 0401 	sub.w	r4, r4, #1
 80001fc:	f1d5 0e20 	rsbs	lr, r5, #32
 8000200:	db0d      	blt.n	800021e <__adddf3+0xb2>
 8000202:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000206:	fa22 f205 	lsr.w	r2, r2, r5
 800020a:	1880      	adds	r0, r0, r2
 800020c:	f141 0100 	adc.w	r1, r1, #0
 8000210:	fa03 f20e 	lsl.w	r2, r3, lr
 8000214:	1880      	adds	r0, r0, r2
 8000216:	fa43 f305 	asr.w	r3, r3, r5
 800021a:	4159      	adcs	r1, r3
 800021c:	e00e      	b.n	800023c <__adddf3+0xd0>
 800021e:	f1a5 0520 	sub.w	r5, r5, #32
 8000222:	f10e 0e20 	add.w	lr, lr, #32
 8000226:	2a01      	cmp	r2, #1
 8000228:	fa03 fc0e 	lsl.w	ip, r3, lr
 800022c:	bf28      	it	cs
 800022e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000232:	fa43 f305 	asr.w	r3, r3, r5
 8000236:	18c0      	adds	r0, r0, r3
 8000238:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800023c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000240:	d507      	bpl.n	8000252 <__adddf3+0xe6>
 8000242:	f04f 0e00 	mov.w	lr, #0
 8000246:	f1dc 0c00 	rsbs	ip, ip, #0
 800024a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800024e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000252:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000256:	d31b      	bcc.n	8000290 <__adddf3+0x124>
 8000258:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800025c:	d30c      	bcc.n	8000278 <__adddf3+0x10c>
 800025e:	0849      	lsrs	r1, r1, #1
 8000260:	ea5f 0030 	movs.w	r0, r0, rrx
 8000264:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000268:	f104 0401 	add.w	r4, r4, #1
 800026c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000270:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000274:	f080 809a 	bcs.w	80003ac <__adddf3+0x240>
 8000278:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800027c:	bf08      	it	eq
 800027e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000282:	f150 0000 	adcs.w	r0, r0, #0
 8000286:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800028a:	ea41 0105 	orr.w	r1, r1, r5
 800028e:	bd30      	pop	{r4, r5, pc}
 8000290:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000294:	4140      	adcs	r0, r0
 8000296:	eb41 0101 	adc.w	r1, r1, r1
 800029a:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 800029e:	f1a4 0401 	sub.w	r4, r4, #1
 80002a2:	d1e9      	bne.n	8000278 <__adddf3+0x10c>
 80002a4:	f091 0f00 	teq	r1, #0
 80002a8:	bf04      	itt	eq
 80002aa:	4601      	moveq	r1, r0
 80002ac:	2000      	moveq	r0, #0
 80002ae:	fab1 f381 	clz	r3, r1
 80002b2:	bf08      	it	eq
 80002b4:	3320      	addeq	r3, #32
 80002b6:	f1a3 030b 	sub.w	r3, r3, #11
 80002ba:	f1b3 0220 	subs.w	r2, r3, #32
 80002be:	da0c      	bge.n	80002da <__adddf3+0x16e>
 80002c0:	320c      	adds	r2, #12
 80002c2:	dd08      	ble.n	80002d6 <__adddf3+0x16a>
 80002c4:	f102 0c14 	add.w	ip, r2, #20
 80002c8:	f1c2 020c 	rsb	r2, r2, #12
 80002cc:	fa01 f00c 	lsl.w	r0, r1, ip
 80002d0:	fa21 f102 	lsr.w	r1, r1, r2
 80002d4:	e00c      	b.n	80002f0 <__adddf3+0x184>
 80002d6:	f102 0214 	add.w	r2, r2, #20
 80002da:	bfd8      	it	le
 80002dc:	f1c2 0c20 	rsble	ip, r2, #32
 80002e0:	fa01 f102 	lsl.w	r1, r1, r2
 80002e4:	fa20 fc0c 	lsr.w	ip, r0, ip
 80002e8:	bfdc      	itt	le
 80002ea:	ea41 010c 	orrle.w	r1, r1, ip
 80002ee:	4090      	lslle	r0, r2
 80002f0:	1ae4      	subs	r4, r4, r3
 80002f2:	bfa2      	ittt	ge
 80002f4:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80002f8:	4329      	orrge	r1, r5
 80002fa:	bd30      	popge	{r4, r5, pc}
 80002fc:	ea6f 0404 	mvn.w	r4, r4
 8000300:	3c1f      	subs	r4, #31
 8000302:	da1c      	bge.n	800033e <__adddf3+0x1d2>
 8000304:	340c      	adds	r4, #12
 8000306:	dc0e      	bgt.n	8000326 <__adddf3+0x1ba>
 8000308:	f104 0414 	add.w	r4, r4, #20
 800030c:	f1c4 0220 	rsb	r2, r4, #32
 8000310:	fa20 f004 	lsr.w	r0, r0, r4
 8000314:	fa01 f302 	lsl.w	r3, r1, r2
 8000318:	ea40 0003 	orr.w	r0, r0, r3
 800031c:	fa21 f304 	lsr.w	r3, r1, r4
 8000320:	ea45 0103 	orr.w	r1, r5, r3
 8000324:	bd30      	pop	{r4, r5, pc}
 8000326:	f1c4 040c 	rsb	r4, r4, #12
 800032a:	f1c4 0220 	rsb	r2, r4, #32
 800032e:	fa20 f002 	lsr.w	r0, r0, r2
 8000332:	fa01 f304 	lsl.w	r3, r1, r4
 8000336:	ea40 0003 	orr.w	r0, r0, r3
 800033a:	4629      	mov	r1, r5
 800033c:	bd30      	pop	{r4, r5, pc}
 800033e:	fa21 f004 	lsr.w	r0, r1, r4
 8000342:	4629      	mov	r1, r5
 8000344:	bd30      	pop	{r4, r5, pc}
 8000346:	f094 0f00 	teq	r4, #0
 800034a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800034e:	bf06      	itte	eq
 8000350:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000354:	3401      	addeq	r4, #1
 8000356:	3d01      	subne	r5, #1
 8000358:	e74e      	b.n	80001f8 <__adddf3+0x8c>
 800035a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800035e:	bf18      	it	ne
 8000360:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000364:	d029      	beq.n	80003ba <__adddf3+0x24e>
 8000366:	ea94 0f05 	teq	r4, r5
 800036a:	bf08      	it	eq
 800036c:	ea90 0f02 	teqeq	r0, r2
 8000370:	d005      	beq.n	800037e <__adddf3+0x212>
 8000372:	ea54 0c00 	orrs.w	ip, r4, r0
 8000376:	bf04      	itt	eq
 8000378:	4619      	moveq	r1, r3
 800037a:	4610      	moveq	r0, r2
 800037c:	bd30      	pop	{r4, r5, pc}
 800037e:	ea91 0f03 	teq	r1, r3
 8000382:	bf1e      	ittt	ne
 8000384:	2100      	movne	r1, #0
 8000386:	2000      	movne	r0, #0
 8000388:	bd30      	popne	{r4, r5, pc}
 800038a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800038e:	d105      	bne.n	800039c <__adddf3+0x230>
 8000390:	0040      	lsls	r0, r0, #1
 8000392:	4149      	adcs	r1, r1
 8000394:	bf28      	it	cs
 8000396:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 800039a:	bd30      	pop	{r4, r5, pc}
 800039c:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80003a0:	bf3c      	itt	cc
 80003a2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80003a6:	bd30      	popcc	{r4, r5, pc}
 80003a8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80003ac:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80003b0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80003b4:	f04f 0000 	mov.w	r0, #0
 80003b8:	bd30      	pop	{r4, r5, pc}
 80003ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80003be:	bf1a      	itte	ne
 80003c0:	4619      	movne	r1, r3
 80003c2:	4610      	movne	r0, r2
 80003c4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80003c8:	bf1c      	itt	ne
 80003ca:	460b      	movne	r3, r1
 80003cc:	4602      	movne	r2, r0
 80003ce:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80003d2:	bf06      	itte	eq
 80003d4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80003d8:	ea91 0f03 	teqeq	r1, r3
 80003dc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 80003e0:	bd30      	pop	{r4, r5, pc}
 80003e2:	bf00      	nop

080003e4 <__aeabi_ui2d>:
 80003e4:	f090 0f00 	teq	r0, #0
 80003e8:	bf04      	itt	eq
 80003ea:	2100      	moveq	r1, #0
 80003ec:	4770      	bxeq	lr
 80003ee:	b530      	push	{r4, r5, lr}
 80003f0:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80003f4:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80003f8:	f04f 0500 	mov.w	r5, #0
 80003fc:	f04f 0100 	mov.w	r1, #0
 8000400:	e750      	b.n	80002a4 <__adddf3+0x138>
 8000402:	bf00      	nop

08000404 <__aeabi_i2d>:
 8000404:	f090 0f00 	teq	r0, #0
 8000408:	bf04      	itt	eq
 800040a:	2100      	moveq	r1, #0
 800040c:	4770      	bxeq	lr
 800040e:	b530      	push	{r4, r5, lr}
 8000410:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000414:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000418:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800041c:	bf48      	it	mi
 800041e:	4240      	negmi	r0, r0
 8000420:	f04f 0100 	mov.w	r1, #0
 8000424:	e73e      	b.n	80002a4 <__adddf3+0x138>
 8000426:	bf00      	nop

08000428 <__aeabi_f2d>:
 8000428:	0042      	lsls	r2, r0, #1
 800042a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800042e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000432:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000436:	bf1f      	itttt	ne
 8000438:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800043c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000440:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000444:	4770      	bxne	lr
 8000446:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800044a:	bf08      	it	eq
 800044c:	4770      	bxeq	lr
 800044e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000452:	bf04      	itt	eq
 8000454:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000458:	4770      	bxeq	lr
 800045a:	b530      	push	{r4, r5, lr}
 800045c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000460:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000464:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000468:	e71c      	b.n	80002a4 <__adddf3+0x138>
 800046a:	bf00      	nop

0800046c <__aeabi_ul2d>:
 800046c:	ea50 0201 	orrs.w	r2, r0, r1
 8000470:	bf08      	it	eq
 8000472:	4770      	bxeq	lr
 8000474:	b530      	push	{r4, r5, lr}
 8000476:	f04f 0500 	mov.w	r5, #0
 800047a:	e00a      	b.n	8000492 <__aeabi_l2d+0x16>

0800047c <__aeabi_l2d>:
 800047c:	ea50 0201 	orrs.w	r2, r0, r1
 8000480:	bf08      	it	eq
 8000482:	4770      	bxeq	lr
 8000484:	b530      	push	{r4, r5, lr}
 8000486:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 800048a:	d502      	bpl.n	8000492 <__aeabi_l2d+0x16>
 800048c:	4240      	negs	r0, r0
 800048e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000492:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000496:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800049a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800049e:	f43f aed8 	beq.w	8000252 <__adddf3+0xe6>
 80004a2:	f04f 0203 	mov.w	r2, #3
 80004a6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004aa:	bf18      	it	ne
 80004ac:	3203      	addne	r2, #3
 80004ae:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004b2:	bf18      	it	ne
 80004b4:	3203      	addne	r2, #3
 80004b6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80004ba:	f1c2 0320 	rsb	r3, r2, #32
 80004be:	fa00 fc03 	lsl.w	ip, r0, r3
 80004c2:	fa20 f002 	lsr.w	r0, r0, r2
 80004c6:	fa01 fe03 	lsl.w	lr, r1, r3
 80004ca:	ea40 000e 	orr.w	r0, r0, lr
 80004ce:	fa21 f102 	lsr.w	r1, r1, r2
 80004d2:	4414      	add	r4, r2
 80004d4:	e6bd      	b.n	8000252 <__adddf3+0xe6>
 80004d6:	bf00      	nop

080004d8 <__aeabi_dmul>:
 80004d8:	b570      	push	{r4, r5, r6, lr}
 80004da:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80004de:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80004e2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80004e6:	bf1d      	ittte	ne
 80004e8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80004ec:	ea94 0f0c 	teqne	r4, ip
 80004f0:	ea95 0f0c 	teqne	r5, ip
 80004f4:	f000 f8de 	bleq	80006b4 <__aeabi_dmul+0x1dc>
 80004f8:	442c      	add	r4, r5
 80004fa:	ea81 0603 	eor.w	r6, r1, r3
 80004fe:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000502:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000506:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800050a:	bf18      	it	ne
 800050c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000510:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000514:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000518:	d038      	beq.n	800058c <__aeabi_dmul+0xb4>
 800051a:	fba0 ce02 	umull	ip, lr, r0, r2
 800051e:	f04f 0500 	mov.w	r5, #0
 8000522:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000526:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800052a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800052e:	f04f 0600 	mov.w	r6, #0
 8000532:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000536:	f09c 0f00 	teq	ip, #0
 800053a:	bf18      	it	ne
 800053c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000540:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000544:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000548:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800054c:	d204      	bcs.n	8000558 <__aeabi_dmul+0x80>
 800054e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000552:	416d      	adcs	r5, r5
 8000554:	eb46 0606 	adc.w	r6, r6, r6
 8000558:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800055c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000560:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000564:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000568:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800056c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000570:	bf88      	it	hi
 8000572:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000576:	d81e      	bhi.n	80005b6 <__aeabi_dmul+0xde>
 8000578:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 800057c:	bf08      	it	eq
 800057e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 8000582:	f150 0000 	adcs.w	r0, r0, #0
 8000586:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800058a:	bd70      	pop	{r4, r5, r6, pc}
 800058c:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000590:	ea46 0101 	orr.w	r1, r6, r1
 8000594:	ea40 0002 	orr.w	r0, r0, r2
 8000598:	ea81 0103 	eor.w	r1, r1, r3
 800059c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80005a0:	bfc2      	ittt	gt
 80005a2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80005a6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80005aa:	bd70      	popgt	{r4, r5, r6, pc}
 80005ac:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80005b0:	f04f 0e00 	mov.w	lr, #0
 80005b4:	3c01      	subs	r4, #1
 80005b6:	f300 80ab 	bgt.w	8000710 <__aeabi_dmul+0x238>
 80005ba:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80005be:	bfde      	ittt	le
 80005c0:	2000      	movle	r0, #0
 80005c2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80005c6:	bd70      	pople	{r4, r5, r6, pc}
 80005c8:	f1c4 0400 	rsb	r4, r4, #0
 80005cc:	3c20      	subs	r4, #32
 80005ce:	da35      	bge.n	800063c <__aeabi_dmul+0x164>
 80005d0:	340c      	adds	r4, #12
 80005d2:	dc1b      	bgt.n	800060c <__aeabi_dmul+0x134>
 80005d4:	f104 0414 	add.w	r4, r4, #20
 80005d8:	f1c4 0520 	rsb	r5, r4, #32
 80005dc:	fa00 f305 	lsl.w	r3, r0, r5
 80005e0:	fa20 f004 	lsr.w	r0, r0, r4
 80005e4:	fa01 f205 	lsl.w	r2, r1, r5
 80005e8:	ea40 0002 	orr.w	r0, r0, r2
 80005ec:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 80005f0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005f4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80005f8:	fa21 f604 	lsr.w	r6, r1, r4
 80005fc:	eb42 0106 	adc.w	r1, r2, r6
 8000600:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000604:	bf08      	it	eq
 8000606:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800060a:	bd70      	pop	{r4, r5, r6, pc}
 800060c:	f1c4 040c 	rsb	r4, r4, #12
 8000610:	f1c4 0520 	rsb	r5, r4, #32
 8000614:	fa00 f304 	lsl.w	r3, r0, r4
 8000618:	fa20 f005 	lsr.w	r0, r0, r5
 800061c:	fa01 f204 	lsl.w	r2, r1, r4
 8000620:	ea40 0002 	orr.w	r0, r0, r2
 8000624:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000628:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800062c:	f141 0100 	adc.w	r1, r1, #0
 8000630:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000634:	bf08      	it	eq
 8000636:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800063a:	bd70      	pop	{r4, r5, r6, pc}
 800063c:	f1c4 0520 	rsb	r5, r4, #32
 8000640:	fa00 f205 	lsl.w	r2, r0, r5
 8000644:	ea4e 0e02 	orr.w	lr, lr, r2
 8000648:	fa20 f304 	lsr.w	r3, r0, r4
 800064c:	fa01 f205 	lsl.w	r2, r1, r5
 8000650:	ea43 0302 	orr.w	r3, r3, r2
 8000654:	fa21 f004 	lsr.w	r0, r1, r4
 8000658:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800065c:	fa21 f204 	lsr.w	r2, r1, r4
 8000660:	ea20 0002 	bic.w	r0, r0, r2
 8000664:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000668:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800066c:	bf08      	it	eq
 800066e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000672:	bd70      	pop	{r4, r5, r6, pc}
 8000674:	f094 0f00 	teq	r4, #0
 8000678:	d10f      	bne.n	800069a <__aeabi_dmul+0x1c2>
 800067a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 800067e:	0040      	lsls	r0, r0, #1
 8000680:	eb41 0101 	adc.w	r1, r1, r1
 8000684:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000688:	bf08      	it	eq
 800068a:	3c01      	subeq	r4, #1
 800068c:	d0f7      	beq.n	800067e <__aeabi_dmul+0x1a6>
 800068e:	ea41 0106 	orr.w	r1, r1, r6
 8000692:	f095 0f00 	teq	r5, #0
 8000696:	bf18      	it	ne
 8000698:	4770      	bxne	lr
 800069a:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 800069e:	0052      	lsls	r2, r2, #1
 80006a0:	eb43 0303 	adc.w	r3, r3, r3
 80006a4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80006a8:	bf08      	it	eq
 80006aa:	3d01      	subeq	r5, #1
 80006ac:	d0f7      	beq.n	800069e <__aeabi_dmul+0x1c6>
 80006ae:	ea43 0306 	orr.w	r3, r3, r6
 80006b2:	4770      	bx	lr
 80006b4:	ea94 0f0c 	teq	r4, ip
 80006b8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80006bc:	bf18      	it	ne
 80006be:	ea95 0f0c 	teqne	r5, ip
 80006c2:	d00c      	beq.n	80006de <__aeabi_dmul+0x206>
 80006c4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006c8:	bf18      	it	ne
 80006ca:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006ce:	d1d1      	bne.n	8000674 <__aeabi_dmul+0x19c>
 80006d0:	ea81 0103 	eor.w	r1, r1, r3
 80006d4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80006d8:	f04f 0000 	mov.w	r0, #0
 80006dc:	bd70      	pop	{r4, r5, r6, pc}
 80006de:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006e2:	bf06      	itte	eq
 80006e4:	4610      	moveq	r0, r2
 80006e6:	4619      	moveq	r1, r3
 80006e8:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006ec:	d019      	beq.n	8000722 <__aeabi_dmul+0x24a>
 80006ee:	ea94 0f0c 	teq	r4, ip
 80006f2:	d102      	bne.n	80006fa <__aeabi_dmul+0x222>
 80006f4:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80006f8:	d113      	bne.n	8000722 <__aeabi_dmul+0x24a>
 80006fa:	ea95 0f0c 	teq	r5, ip
 80006fe:	d105      	bne.n	800070c <__aeabi_dmul+0x234>
 8000700:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000704:	bf1c      	itt	ne
 8000706:	4610      	movne	r0, r2
 8000708:	4619      	movne	r1, r3
 800070a:	d10a      	bne.n	8000722 <__aeabi_dmul+0x24a>
 800070c:	ea81 0103 	eor.w	r1, r1, r3
 8000710:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000714:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000718:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800071c:	f04f 0000 	mov.w	r0, #0
 8000720:	bd70      	pop	{r4, r5, r6, pc}
 8000722:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000726:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800072a:	bd70      	pop	{r4, r5, r6, pc}

0800072c <__aeabi_ddiv>:
 800072c:	b570      	push	{r4, r5, r6, lr}
 800072e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000732:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000736:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800073a:	bf1d      	ittte	ne
 800073c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000740:	ea94 0f0c 	teqne	r4, ip
 8000744:	ea95 0f0c 	teqne	r5, ip
 8000748:	f000 f8a7 	bleq	800089a <__aeabi_ddiv+0x16e>
 800074c:	eba4 0405 	sub.w	r4, r4, r5
 8000750:	ea81 0e03 	eor.w	lr, r1, r3
 8000754:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000758:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800075c:	f000 8088 	beq.w	8000870 <__aeabi_ddiv+0x144>
 8000760:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000764:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000768:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800076c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000770:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000774:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000778:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800077c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000780:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 8000784:	429d      	cmp	r5, r3
 8000786:	bf08      	it	eq
 8000788:	4296      	cmpeq	r6, r2
 800078a:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 800078e:	f504 7440 	add.w	r4, r4, #768	; 0x300
 8000792:	d202      	bcs.n	800079a <__aeabi_ddiv+0x6e>
 8000794:	085b      	lsrs	r3, r3, #1
 8000796:	ea4f 0232 	mov.w	r2, r2, rrx
 800079a:	1ab6      	subs	r6, r6, r2
 800079c:	eb65 0503 	sbc.w	r5, r5, r3
 80007a0:	085b      	lsrs	r3, r3, #1
 80007a2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007a6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80007aa:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80007ae:	ebb6 0e02 	subs.w	lr, r6, r2
 80007b2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007b6:	bf22      	ittt	cs
 80007b8:	1ab6      	subcs	r6, r6, r2
 80007ba:	4675      	movcs	r5, lr
 80007bc:	ea40 000c 	orrcs.w	r0, r0, ip
 80007c0:	085b      	lsrs	r3, r3, #1
 80007c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007c6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007ca:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007ce:	bf22      	ittt	cs
 80007d0:	1ab6      	subcs	r6, r6, r2
 80007d2:	4675      	movcs	r5, lr
 80007d4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80007d8:	085b      	lsrs	r3, r3, #1
 80007da:	ea4f 0232 	mov.w	r2, r2, rrx
 80007de:	ebb6 0e02 	subs.w	lr, r6, r2
 80007e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007e6:	bf22      	ittt	cs
 80007e8:	1ab6      	subcs	r6, r6, r2
 80007ea:	4675      	movcs	r5, lr
 80007ec:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 80007f0:	085b      	lsrs	r3, r3, #1
 80007f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007fe:	bf22      	ittt	cs
 8000800:	1ab6      	subcs	r6, r6, r2
 8000802:	4675      	movcs	r5, lr
 8000804:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000808:	ea55 0e06 	orrs.w	lr, r5, r6
 800080c:	d018      	beq.n	8000840 <__aeabi_ddiv+0x114>
 800080e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000812:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000816:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800081a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800081e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000822:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000826:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800082a:	d1c0      	bne.n	80007ae <__aeabi_ddiv+0x82>
 800082c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000830:	d10b      	bne.n	800084a <__aeabi_ddiv+0x11e>
 8000832:	ea41 0100 	orr.w	r1, r1, r0
 8000836:	f04f 0000 	mov.w	r0, #0
 800083a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800083e:	e7b6      	b.n	80007ae <__aeabi_ddiv+0x82>
 8000840:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000844:	bf04      	itt	eq
 8000846:	4301      	orreq	r1, r0
 8000848:	2000      	moveq	r0, #0
 800084a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800084e:	bf88      	it	hi
 8000850:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000854:	f63f aeaf 	bhi.w	80005b6 <__aeabi_dmul+0xde>
 8000858:	ebb5 0c03 	subs.w	ip, r5, r3
 800085c:	bf04      	itt	eq
 800085e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000862:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000866:	f150 0000 	adcs.w	r0, r0, #0
 800086a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800086e:	bd70      	pop	{r4, r5, r6, pc}
 8000870:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000874:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000878:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800087c:	bfc2      	ittt	gt
 800087e:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000882:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000886:	bd70      	popgt	{r4, r5, r6, pc}
 8000888:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800088c:	f04f 0e00 	mov.w	lr, #0
 8000890:	3c01      	subs	r4, #1
 8000892:	e690      	b.n	80005b6 <__aeabi_dmul+0xde>
 8000894:	ea45 0e06 	orr.w	lr, r5, r6
 8000898:	e68d      	b.n	80005b6 <__aeabi_dmul+0xde>
 800089a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800089e:	ea94 0f0c 	teq	r4, ip
 80008a2:	bf08      	it	eq
 80008a4:	ea95 0f0c 	teqeq	r5, ip
 80008a8:	f43f af3b 	beq.w	8000722 <__aeabi_dmul+0x24a>
 80008ac:	ea94 0f0c 	teq	r4, ip
 80008b0:	d10a      	bne.n	80008c8 <__aeabi_ddiv+0x19c>
 80008b2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80008b6:	f47f af34 	bne.w	8000722 <__aeabi_dmul+0x24a>
 80008ba:	ea95 0f0c 	teq	r5, ip
 80008be:	f47f af25 	bne.w	800070c <__aeabi_dmul+0x234>
 80008c2:	4610      	mov	r0, r2
 80008c4:	4619      	mov	r1, r3
 80008c6:	e72c      	b.n	8000722 <__aeabi_dmul+0x24a>
 80008c8:	ea95 0f0c 	teq	r5, ip
 80008cc:	d106      	bne.n	80008dc <__aeabi_ddiv+0x1b0>
 80008ce:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008d2:	f43f aefd 	beq.w	80006d0 <__aeabi_dmul+0x1f8>
 80008d6:	4610      	mov	r0, r2
 80008d8:	4619      	mov	r1, r3
 80008da:	e722      	b.n	8000722 <__aeabi_dmul+0x24a>
 80008dc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80008e0:	bf18      	it	ne
 80008e2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80008e6:	f47f aec5 	bne.w	8000674 <__aeabi_dmul+0x19c>
 80008ea:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 80008ee:	f47f af0d 	bne.w	800070c <__aeabi_dmul+0x234>
 80008f2:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 80008f6:	f47f aeeb 	bne.w	80006d0 <__aeabi_dmul+0x1f8>
 80008fa:	e712      	b.n	8000722 <__aeabi_dmul+0x24a>

080008fc <__gedf2>:
 80008fc:	f04f 3cff 	mov.w	ip, #4294967295
 8000900:	e006      	b.n	8000910 <__cmpdf2+0x4>
 8000902:	bf00      	nop

08000904 <__ledf2>:
 8000904:	f04f 0c01 	mov.w	ip, #1
 8000908:	e002      	b.n	8000910 <__cmpdf2+0x4>
 800090a:	bf00      	nop

0800090c <__cmpdf2>:
 800090c:	f04f 0c01 	mov.w	ip, #1
 8000910:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000914:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000918:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 800091c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000920:	bf18      	it	ne
 8000922:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000926:	d01b      	beq.n	8000960 <__cmpdf2+0x54>
 8000928:	b001      	add	sp, #4
 800092a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 800092e:	bf0c      	ite	eq
 8000930:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000934:	ea91 0f03 	teqne	r1, r3
 8000938:	bf02      	ittt	eq
 800093a:	ea90 0f02 	teqeq	r0, r2
 800093e:	2000      	moveq	r0, #0
 8000940:	4770      	bxeq	lr
 8000942:	f110 0f00 	cmn.w	r0, #0
 8000946:	ea91 0f03 	teq	r1, r3
 800094a:	bf58      	it	pl
 800094c:	4299      	cmppl	r1, r3
 800094e:	bf08      	it	eq
 8000950:	4290      	cmpeq	r0, r2
 8000952:	bf2c      	ite	cs
 8000954:	17d8      	asrcs	r0, r3, #31
 8000956:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 800095a:	f040 0001 	orr.w	r0, r0, #1
 800095e:	4770      	bx	lr
 8000960:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000964:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000968:	d102      	bne.n	8000970 <__cmpdf2+0x64>
 800096a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 800096e:	d107      	bne.n	8000980 <__cmpdf2+0x74>
 8000970:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000974:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000978:	d1d6      	bne.n	8000928 <__cmpdf2+0x1c>
 800097a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 800097e:	d0d3      	beq.n	8000928 <__cmpdf2+0x1c>
 8000980:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000984:	4770      	bx	lr
 8000986:	bf00      	nop

08000988 <__aeabi_cdrcmple>:
 8000988:	4684      	mov	ip, r0
 800098a:	4610      	mov	r0, r2
 800098c:	4662      	mov	r2, ip
 800098e:	468c      	mov	ip, r1
 8000990:	4619      	mov	r1, r3
 8000992:	4663      	mov	r3, ip
 8000994:	e000      	b.n	8000998 <__aeabi_cdcmpeq>
 8000996:	bf00      	nop

08000998 <__aeabi_cdcmpeq>:
 8000998:	b501      	push	{r0, lr}
 800099a:	f7ff ffb7 	bl	800090c <__cmpdf2>
 800099e:	2800      	cmp	r0, #0
 80009a0:	bf48      	it	mi
 80009a2:	f110 0f00 	cmnmi.w	r0, #0
 80009a6:	bd01      	pop	{r0, pc}

080009a8 <__aeabi_dcmpeq>:
 80009a8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009ac:	f7ff fff4 	bl	8000998 <__aeabi_cdcmpeq>
 80009b0:	bf0c      	ite	eq
 80009b2:	2001      	moveq	r0, #1
 80009b4:	2000      	movne	r0, #0
 80009b6:	f85d fb08 	ldr.w	pc, [sp], #8
 80009ba:	bf00      	nop

080009bc <__aeabi_dcmplt>:
 80009bc:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009c0:	f7ff ffea 	bl	8000998 <__aeabi_cdcmpeq>
 80009c4:	bf34      	ite	cc
 80009c6:	2001      	movcc	r0, #1
 80009c8:	2000      	movcs	r0, #0
 80009ca:	f85d fb08 	ldr.w	pc, [sp], #8
 80009ce:	bf00      	nop

080009d0 <__aeabi_dcmple>:
 80009d0:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009d4:	f7ff ffe0 	bl	8000998 <__aeabi_cdcmpeq>
 80009d8:	bf94      	ite	ls
 80009da:	2001      	movls	r0, #1
 80009dc:	2000      	movhi	r0, #0
 80009de:	f85d fb08 	ldr.w	pc, [sp], #8
 80009e2:	bf00      	nop

080009e4 <__aeabi_dcmpge>:
 80009e4:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009e8:	f7ff ffce 	bl	8000988 <__aeabi_cdrcmple>
 80009ec:	bf94      	ite	ls
 80009ee:	2001      	movls	r0, #1
 80009f0:	2000      	movhi	r0, #0
 80009f2:	f85d fb08 	ldr.w	pc, [sp], #8
 80009f6:	bf00      	nop

080009f8 <__aeabi_dcmpgt>:
 80009f8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009fc:	f7ff ffc4 	bl	8000988 <__aeabi_cdrcmple>
 8000a00:	bf34      	ite	cc
 8000a02:	2001      	movcc	r0, #1
 8000a04:	2000      	movcs	r0, #0
 8000a06:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a0a:	bf00      	nop

08000a0c <__aeabi_dcmpun>:
 8000a0c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a10:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a14:	d102      	bne.n	8000a1c <__aeabi_dcmpun+0x10>
 8000a16:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a1a:	d10a      	bne.n	8000a32 <__aeabi_dcmpun+0x26>
 8000a1c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a20:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a24:	d102      	bne.n	8000a2c <__aeabi_dcmpun+0x20>
 8000a26:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a2a:	d102      	bne.n	8000a32 <__aeabi_dcmpun+0x26>
 8000a2c:	f04f 0000 	mov.w	r0, #0
 8000a30:	4770      	bx	lr
 8000a32:	f04f 0001 	mov.w	r0, #1
 8000a36:	4770      	bx	lr

08000a38 <__aeabi_d2iz>:
 8000a38:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a3c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000a40:	d215      	bcs.n	8000a6e <__aeabi_d2iz+0x36>
 8000a42:	d511      	bpl.n	8000a68 <__aeabi_d2iz+0x30>
 8000a44:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000a48:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000a4c:	d912      	bls.n	8000a74 <__aeabi_d2iz+0x3c>
 8000a4e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000a52:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000a56:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000a5a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000a5e:	fa23 f002 	lsr.w	r0, r3, r2
 8000a62:	bf18      	it	ne
 8000a64:	4240      	negne	r0, r0
 8000a66:	4770      	bx	lr
 8000a68:	f04f 0000 	mov.w	r0, #0
 8000a6c:	4770      	bx	lr
 8000a6e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000a72:	d105      	bne.n	8000a80 <__aeabi_d2iz+0x48>
 8000a74:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000a78:	bf08      	it	eq
 8000a7a:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000a7e:	4770      	bx	lr
 8000a80:	f04f 0000 	mov.w	r0, #0
 8000a84:	4770      	bx	lr
 8000a86:	bf00      	nop

08000a88 <__aeabi_d2f>:
 8000a88:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a8c:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000a90:	bf24      	itt	cs
 8000a92:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000a96:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000a9a:	d90d      	bls.n	8000ab8 <__aeabi_d2f+0x30>
 8000a9c:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000aa0:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000aa4:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000aa8:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000aac:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000ab0:	bf08      	it	eq
 8000ab2:	f020 0001 	biceq.w	r0, r0, #1
 8000ab6:	4770      	bx	lr
 8000ab8:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000abc:	d121      	bne.n	8000b02 <__aeabi_d2f+0x7a>
 8000abe:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000ac2:	bfbc      	itt	lt
 8000ac4:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000ac8:	4770      	bxlt	lr
 8000aca:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000ace:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000ad2:	f1c2 0218 	rsb	r2, r2, #24
 8000ad6:	f1c2 0c20 	rsb	ip, r2, #32
 8000ada:	fa10 f30c 	lsls.w	r3, r0, ip
 8000ade:	fa20 f002 	lsr.w	r0, r0, r2
 8000ae2:	bf18      	it	ne
 8000ae4:	f040 0001 	orrne.w	r0, r0, #1
 8000ae8:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000aec:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000af0:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000af4:	ea40 000c 	orr.w	r0, r0, ip
 8000af8:	fa23 f302 	lsr.w	r3, r3, r2
 8000afc:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000b00:	e7cc      	b.n	8000a9c <__aeabi_d2f+0x14>
 8000b02:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000b06:	d107      	bne.n	8000b18 <__aeabi_d2f+0x90>
 8000b08:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000b0c:	bf1e      	ittt	ne
 8000b0e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000b12:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000b16:	4770      	bxne	lr
 8000b18:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000b1c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000b20:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000b24:	4770      	bx	lr
 8000b26:	bf00      	nop

08000b28 <__aeabi_frsub>:
 8000b28:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
 8000b2c:	e002      	b.n	8000b34 <__addsf3>
 8000b2e:	bf00      	nop

08000b30 <__aeabi_fsub>:
 8000b30:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

08000b34 <__addsf3>:
 8000b34:	0042      	lsls	r2, r0, #1
 8000b36:	bf1f      	itttt	ne
 8000b38:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8000b3c:	ea92 0f03 	teqne	r2, r3
 8000b40:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8000b44:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000b48:	d06a      	beq.n	8000c20 <__addsf3+0xec>
 8000b4a:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8000b4e:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8000b52:	bfc1      	itttt	gt
 8000b54:	18d2      	addgt	r2, r2, r3
 8000b56:	4041      	eorgt	r1, r0
 8000b58:	4048      	eorgt	r0, r1
 8000b5a:	4041      	eorgt	r1, r0
 8000b5c:	bfb8      	it	lt
 8000b5e:	425b      	neglt	r3, r3
 8000b60:	2b19      	cmp	r3, #25
 8000b62:	bf88      	it	hi
 8000b64:	4770      	bxhi	lr
 8000b66:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8000b6a:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000b6e:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 8000b72:	bf18      	it	ne
 8000b74:	4240      	negne	r0, r0
 8000b76:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b7a:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8000b7e:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 8000b82:	bf18      	it	ne
 8000b84:	4249      	negne	r1, r1
 8000b86:	ea92 0f03 	teq	r2, r3
 8000b8a:	d03f      	beq.n	8000c0c <__addsf3+0xd8>
 8000b8c:	f1a2 0201 	sub.w	r2, r2, #1
 8000b90:	fa41 fc03 	asr.w	ip, r1, r3
 8000b94:	eb10 000c 	adds.w	r0, r0, ip
 8000b98:	f1c3 0320 	rsb	r3, r3, #32
 8000b9c:	fa01 f103 	lsl.w	r1, r1, r3
 8000ba0:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8000ba4:	d502      	bpl.n	8000bac <__addsf3+0x78>
 8000ba6:	4249      	negs	r1, r1
 8000ba8:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8000bac:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
 8000bb0:	d313      	bcc.n	8000bda <__addsf3+0xa6>
 8000bb2:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 8000bb6:	d306      	bcc.n	8000bc6 <__addsf3+0x92>
 8000bb8:	0840      	lsrs	r0, r0, #1
 8000bba:	ea4f 0131 	mov.w	r1, r1, rrx
 8000bbe:	f102 0201 	add.w	r2, r2, #1
 8000bc2:	2afe      	cmp	r2, #254	; 0xfe
 8000bc4:	d251      	bcs.n	8000c6a <__addsf3+0x136>
 8000bc6:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
 8000bca:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000bce:	bf08      	it	eq
 8000bd0:	f020 0001 	biceq.w	r0, r0, #1
 8000bd4:	ea40 0003 	orr.w	r0, r0, r3
 8000bd8:	4770      	bx	lr
 8000bda:	0049      	lsls	r1, r1, #1
 8000bdc:	eb40 0000 	adc.w	r0, r0, r0
 8000be0:	f410 0f00 	tst.w	r0, #8388608	; 0x800000
 8000be4:	f1a2 0201 	sub.w	r2, r2, #1
 8000be8:	d1ed      	bne.n	8000bc6 <__addsf3+0x92>
 8000bea:	fab0 fc80 	clz	ip, r0
 8000bee:	f1ac 0c08 	sub.w	ip, ip, #8
 8000bf2:	ebb2 020c 	subs.w	r2, r2, ip
 8000bf6:	fa00 f00c 	lsl.w	r0, r0, ip
 8000bfa:	bfaa      	itet	ge
 8000bfc:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8000c00:	4252      	neglt	r2, r2
 8000c02:	4318      	orrge	r0, r3
 8000c04:	bfbc      	itt	lt
 8000c06:	40d0      	lsrlt	r0, r2
 8000c08:	4318      	orrlt	r0, r3
 8000c0a:	4770      	bx	lr
 8000c0c:	f092 0f00 	teq	r2, #0
 8000c10:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
 8000c14:	bf06      	itte	eq
 8000c16:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
 8000c1a:	3201      	addeq	r2, #1
 8000c1c:	3b01      	subne	r3, #1
 8000c1e:	e7b5      	b.n	8000b8c <__addsf3+0x58>
 8000c20:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000c24:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000c28:	bf18      	it	ne
 8000c2a:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000c2e:	d021      	beq.n	8000c74 <__addsf3+0x140>
 8000c30:	ea92 0f03 	teq	r2, r3
 8000c34:	d004      	beq.n	8000c40 <__addsf3+0x10c>
 8000c36:	f092 0f00 	teq	r2, #0
 8000c3a:	bf08      	it	eq
 8000c3c:	4608      	moveq	r0, r1
 8000c3e:	4770      	bx	lr
 8000c40:	ea90 0f01 	teq	r0, r1
 8000c44:	bf1c      	itt	ne
 8000c46:	2000      	movne	r0, #0
 8000c48:	4770      	bxne	lr
 8000c4a:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
 8000c4e:	d104      	bne.n	8000c5a <__addsf3+0x126>
 8000c50:	0040      	lsls	r0, r0, #1
 8000c52:	bf28      	it	cs
 8000c54:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
 8000c58:	4770      	bx	lr
 8000c5a:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
 8000c5e:	bf3c      	itt	cc
 8000c60:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
 8000c64:	4770      	bxcc	lr
 8000c66:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8000c6a:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
 8000c6e:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000c72:	4770      	bx	lr
 8000c74:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8000c78:	bf16      	itet	ne
 8000c7a:	4608      	movne	r0, r1
 8000c7c:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8000c80:	4601      	movne	r1, r0
 8000c82:	0242      	lsls	r2, r0, #9
 8000c84:	bf06      	itte	eq
 8000c86:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8000c8a:	ea90 0f01 	teqeq	r0, r1
 8000c8e:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
 8000c92:	4770      	bx	lr

08000c94 <__aeabi_ui2f>:
 8000c94:	f04f 0300 	mov.w	r3, #0
 8000c98:	e004      	b.n	8000ca4 <__aeabi_i2f+0x8>
 8000c9a:	bf00      	nop

08000c9c <__aeabi_i2f>:
 8000c9c:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
 8000ca0:	bf48      	it	mi
 8000ca2:	4240      	negmi	r0, r0
 8000ca4:	ea5f 0c00 	movs.w	ip, r0
 8000ca8:	bf08      	it	eq
 8000caa:	4770      	bxeq	lr
 8000cac:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
 8000cb0:	4601      	mov	r1, r0
 8000cb2:	f04f 0000 	mov.w	r0, #0
 8000cb6:	e01c      	b.n	8000cf2 <__aeabi_l2f+0x2a>

08000cb8 <__aeabi_ul2f>:
 8000cb8:	ea50 0201 	orrs.w	r2, r0, r1
 8000cbc:	bf08      	it	eq
 8000cbe:	4770      	bxeq	lr
 8000cc0:	f04f 0300 	mov.w	r3, #0
 8000cc4:	e00a      	b.n	8000cdc <__aeabi_l2f+0x14>
 8000cc6:	bf00      	nop

08000cc8 <__aeabi_l2f>:
 8000cc8:	ea50 0201 	orrs.w	r2, r0, r1
 8000ccc:	bf08      	it	eq
 8000cce:	4770      	bxeq	lr
 8000cd0:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
 8000cd4:	d502      	bpl.n	8000cdc <__aeabi_l2f+0x14>
 8000cd6:	4240      	negs	r0, r0
 8000cd8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000cdc:	ea5f 0c01 	movs.w	ip, r1
 8000ce0:	bf02      	ittt	eq
 8000ce2:	4684      	moveq	ip, r0
 8000ce4:	4601      	moveq	r1, r0
 8000ce6:	2000      	moveq	r0, #0
 8000ce8:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
 8000cec:	bf08      	it	eq
 8000cee:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
 8000cf2:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
 8000cf6:	fabc f28c 	clz	r2, ip
 8000cfa:	3a08      	subs	r2, #8
 8000cfc:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8000d00:	db10      	blt.n	8000d24 <__aeabi_l2f+0x5c>
 8000d02:	fa01 fc02 	lsl.w	ip, r1, r2
 8000d06:	4463      	add	r3, ip
 8000d08:	fa00 fc02 	lsl.w	ip, r0, r2
 8000d0c:	f1c2 0220 	rsb	r2, r2, #32
 8000d10:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8000d14:	fa20 f202 	lsr.w	r2, r0, r2
 8000d18:	eb43 0002 	adc.w	r0, r3, r2
 8000d1c:	bf08      	it	eq
 8000d1e:	f020 0001 	biceq.w	r0, r0, #1
 8000d22:	4770      	bx	lr
 8000d24:	f102 0220 	add.w	r2, r2, #32
 8000d28:	fa01 fc02 	lsl.w	ip, r1, r2
 8000d2c:	f1c2 0220 	rsb	r2, r2, #32
 8000d30:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8000d34:	fa21 f202 	lsr.w	r2, r1, r2
 8000d38:	eb43 0002 	adc.w	r0, r3, r2
 8000d3c:	bf08      	it	eq
 8000d3e:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000d42:	4770      	bx	lr

08000d44 <__aeabi_fmul>:
 8000d44:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000d48:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000d4c:	bf1e      	ittt	ne
 8000d4e:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000d52:	ea92 0f0c 	teqne	r2, ip
 8000d56:	ea93 0f0c 	teqne	r3, ip
 8000d5a:	d06f      	beq.n	8000e3c <__aeabi_fmul+0xf8>
 8000d5c:	441a      	add	r2, r3
 8000d5e:	ea80 0c01 	eor.w	ip, r0, r1
 8000d62:	0240      	lsls	r0, r0, #9
 8000d64:	bf18      	it	ne
 8000d66:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 8000d6a:	d01e      	beq.n	8000daa <__aeabi_fmul+0x66>
 8000d6c:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8000d70:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 8000d74:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 8000d78:	fba0 3101 	umull	r3, r1, r0, r1
 8000d7c:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8000d80:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 8000d84:	bf3e      	ittt	cc
 8000d86:	0049      	lslcc	r1, r1, #1
 8000d88:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 8000d8c:	005b      	lslcc	r3, r3, #1
 8000d8e:	ea40 0001 	orr.w	r0, r0, r1
 8000d92:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
 8000d96:	2afd      	cmp	r2, #253	; 0xfd
 8000d98:	d81d      	bhi.n	8000dd6 <__aeabi_fmul+0x92>
 8000d9a:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8000d9e:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000da2:	bf08      	it	eq
 8000da4:	f020 0001 	biceq.w	r0, r0, #1
 8000da8:	4770      	bx	lr
 8000daa:	f090 0f00 	teq	r0, #0
 8000dae:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8000db2:	bf08      	it	eq
 8000db4:	0249      	lsleq	r1, r1, #9
 8000db6:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000dba:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 8000dbe:	3a7f      	subs	r2, #127	; 0x7f
 8000dc0:	bfc2      	ittt	gt
 8000dc2:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8000dc6:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000dca:	4770      	bxgt	lr
 8000dcc:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000dd0:	f04f 0300 	mov.w	r3, #0
 8000dd4:	3a01      	subs	r2, #1
 8000dd6:	dc5d      	bgt.n	8000e94 <__aeabi_fmul+0x150>
 8000dd8:	f112 0f19 	cmn.w	r2, #25
 8000ddc:	bfdc      	itt	le
 8000dde:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
 8000de2:	4770      	bxle	lr
 8000de4:	f1c2 0200 	rsb	r2, r2, #0
 8000de8:	0041      	lsls	r1, r0, #1
 8000dea:	fa21 f102 	lsr.w	r1, r1, r2
 8000dee:	f1c2 0220 	rsb	r2, r2, #32
 8000df2:	fa00 fc02 	lsl.w	ip, r0, r2
 8000df6:	ea5f 0031 	movs.w	r0, r1, rrx
 8000dfa:	f140 0000 	adc.w	r0, r0, #0
 8000dfe:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 8000e02:	bf08      	it	eq
 8000e04:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000e08:	4770      	bx	lr
 8000e0a:	f092 0f00 	teq	r2, #0
 8000e0e:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8000e12:	bf02      	ittt	eq
 8000e14:	0040      	lsleq	r0, r0, #1
 8000e16:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8000e1a:	3a01      	subeq	r2, #1
 8000e1c:	d0f9      	beq.n	8000e12 <__aeabi_fmul+0xce>
 8000e1e:	ea40 000c 	orr.w	r0, r0, ip
 8000e22:	f093 0f00 	teq	r3, #0
 8000e26:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000e2a:	bf02      	ittt	eq
 8000e2c:	0049      	lsleq	r1, r1, #1
 8000e2e:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8000e32:	3b01      	subeq	r3, #1
 8000e34:	d0f9      	beq.n	8000e2a <__aeabi_fmul+0xe6>
 8000e36:	ea41 010c 	orr.w	r1, r1, ip
 8000e3a:	e78f      	b.n	8000d5c <__aeabi_fmul+0x18>
 8000e3c:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000e40:	ea92 0f0c 	teq	r2, ip
 8000e44:	bf18      	it	ne
 8000e46:	ea93 0f0c 	teqne	r3, ip
 8000e4a:	d00a      	beq.n	8000e62 <__aeabi_fmul+0x11e>
 8000e4c:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8000e50:	bf18      	it	ne
 8000e52:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8000e56:	d1d8      	bne.n	8000e0a <__aeabi_fmul+0xc6>
 8000e58:	ea80 0001 	eor.w	r0, r0, r1
 8000e5c:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8000e60:	4770      	bx	lr
 8000e62:	f090 0f00 	teq	r0, #0
 8000e66:	bf17      	itett	ne
 8000e68:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
 8000e6c:	4608      	moveq	r0, r1
 8000e6e:	f091 0f00 	teqne	r1, #0
 8000e72:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
 8000e76:	d014      	beq.n	8000ea2 <__aeabi_fmul+0x15e>
 8000e78:	ea92 0f0c 	teq	r2, ip
 8000e7c:	d101      	bne.n	8000e82 <__aeabi_fmul+0x13e>
 8000e7e:	0242      	lsls	r2, r0, #9
 8000e80:	d10f      	bne.n	8000ea2 <__aeabi_fmul+0x15e>
 8000e82:	ea93 0f0c 	teq	r3, ip
 8000e86:	d103      	bne.n	8000e90 <__aeabi_fmul+0x14c>
 8000e88:	024b      	lsls	r3, r1, #9
 8000e8a:	bf18      	it	ne
 8000e8c:	4608      	movne	r0, r1
 8000e8e:	d108      	bne.n	8000ea2 <__aeabi_fmul+0x15e>
 8000e90:	ea80 0001 	eor.w	r0, r0, r1
 8000e94:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8000e98:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000e9c:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000ea0:	4770      	bx	lr
 8000ea2:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000ea6:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
 8000eaa:	4770      	bx	lr

08000eac <__aeabi_fdiv>:
 8000eac:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000eb0:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000eb4:	bf1e      	ittt	ne
 8000eb6:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000eba:	ea92 0f0c 	teqne	r2, ip
 8000ebe:	ea93 0f0c 	teqne	r3, ip
 8000ec2:	d069      	beq.n	8000f98 <__aeabi_fdiv+0xec>
 8000ec4:	eba2 0203 	sub.w	r2, r2, r3
 8000ec8:	ea80 0c01 	eor.w	ip, r0, r1
 8000ecc:	0249      	lsls	r1, r1, #9
 8000ece:	ea4f 2040 	mov.w	r0, r0, lsl #9
 8000ed2:	d037      	beq.n	8000f44 <__aeabi_fdiv+0x98>
 8000ed4:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8000ed8:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
 8000edc:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 8000ee0:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8000ee4:	428b      	cmp	r3, r1
 8000ee6:	bf38      	it	cc
 8000ee8:	005b      	lslcc	r3, r3, #1
 8000eea:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
 8000eee:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
 8000ef2:	428b      	cmp	r3, r1
 8000ef4:	bf24      	itt	cs
 8000ef6:	1a5b      	subcs	r3, r3, r1
 8000ef8:	ea40 000c 	orrcs.w	r0, r0, ip
 8000efc:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
 8000f00:	bf24      	itt	cs
 8000f02:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
 8000f06:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000f0a:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 8000f0e:	bf24      	itt	cs
 8000f10:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
 8000f14:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000f18:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
 8000f1c:	bf24      	itt	cs
 8000f1e:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
 8000f22:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000f26:	011b      	lsls	r3, r3, #4
 8000f28:	bf18      	it	ne
 8000f2a:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
 8000f2e:	d1e0      	bne.n	8000ef2 <__aeabi_fdiv+0x46>
 8000f30:	2afd      	cmp	r2, #253	; 0xfd
 8000f32:	f63f af50 	bhi.w	8000dd6 <__aeabi_fmul+0x92>
 8000f36:	428b      	cmp	r3, r1
 8000f38:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000f3c:	bf08      	it	eq
 8000f3e:	f020 0001 	biceq.w	r0, r0, #1
 8000f42:	4770      	bx	lr
 8000f44:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8000f48:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000f4c:	327f      	adds	r2, #127	; 0x7f
 8000f4e:	bfc2      	ittt	gt
 8000f50:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8000f54:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000f58:	4770      	bxgt	lr
 8000f5a:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000f5e:	f04f 0300 	mov.w	r3, #0
 8000f62:	3a01      	subs	r2, #1
 8000f64:	e737      	b.n	8000dd6 <__aeabi_fmul+0x92>
 8000f66:	f092 0f00 	teq	r2, #0
 8000f6a:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8000f6e:	bf02      	ittt	eq
 8000f70:	0040      	lsleq	r0, r0, #1
 8000f72:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8000f76:	3a01      	subeq	r2, #1
 8000f78:	d0f9      	beq.n	8000f6e <__aeabi_fdiv+0xc2>
 8000f7a:	ea40 000c 	orr.w	r0, r0, ip
 8000f7e:	f093 0f00 	teq	r3, #0
 8000f82:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000f86:	bf02      	ittt	eq
 8000f88:	0049      	lsleq	r1, r1, #1
 8000f8a:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8000f8e:	3b01      	subeq	r3, #1
 8000f90:	d0f9      	beq.n	8000f86 <__aeabi_fdiv+0xda>
 8000f92:	ea41 010c 	orr.w	r1, r1, ip
 8000f96:	e795      	b.n	8000ec4 <__aeabi_fdiv+0x18>
 8000f98:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000f9c:	ea92 0f0c 	teq	r2, ip
 8000fa0:	d108      	bne.n	8000fb4 <__aeabi_fdiv+0x108>
 8000fa2:	0242      	lsls	r2, r0, #9
 8000fa4:	f47f af7d 	bne.w	8000ea2 <__aeabi_fmul+0x15e>
 8000fa8:	ea93 0f0c 	teq	r3, ip
 8000fac:	f47f af70 	bne.w	8000e90 <__aeabi_fmul+0x14c>
 8000fb0:	4608      	mov	r0, r1
 8000fb2:	e776      	b.n	8000ea2 <__aeabi_fmul+0x15e>
 8000fb4:	ea93 0f0c 	teq	r3, ip
 8000fb8:	d104      	bne.n	8000fc4 <__aeabi_fdiv+0x118>
 8000fba:	024b      	lsls	r3, r1, #9
 8000fbc:	f43f af4c 	beq.w	8000e58 <__aeabi_fmul+0x114>
 8000fc0:	4608      	mov	r0, r1
 8000fc2:	e76e      	b.n	8000ea2 <__aeabi_fmul+0x15e>
 8000fc4:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8000fc8:	bf18      	it	ne
 8000fca:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8000fce:	d1ca      	bne.n	8000f66 <__aeabi_fdiv+0xba>
 8000fd0:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
 8000fd4:	f47f af5c 	bne.w	8000e90 <__aeabi_fmul+0x14c>
 8000fd8:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
 8000fdc:	f47f af3c 	bne.w	8000e58 <__aeabi_fmul+0x114>
 8000fe0:	e75f      	b.n	8000ea2 <__aeabi_fmul+0x15e>
 8000fe2:	bf00      	nop

08000fe4 <__aeabi_f2uiz>:
 8000fe4:	0042      	lsls	r2, r0, #1
 8000fe6:	d20e      	bcs.n	8001006 <__aeabi_f2uiz+0x22>
 8000fe8:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 8000fec:	d30b      	bcc.n	8001006 <__aeabi_f2uiz+0x22>
 8000fee:	f04f 039e 	mov.w	r3, #158	; 0x9e
 8000ff2:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 8000ff6:	d409      	bmi.n	800100c <__aeabi_f2uiz+0x28>
 8000ff8:	ea4f 2300 	mov.w	r3, r0, lsl #8
 8000ffc:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8001000:	fa23 f002 	lsr.w	r0, r3, r2
 8001004:	4770      	bx	lr
 8001006:	f04f 0000 	mov.w	r0, #0
 800100a:	4770      	bx	lr
 800100c:	f112 0f61 	cmn.w	r2, #97	; 0x61
 8001010:	d101      	bne.n	8001016 <__aeabi_f2uiz+0x32>
 8001012:	0242      	lsls	r2, r0, #9
 8001014:	d102      	bne.n	800101c <__aeabi_f2uiz+0x38>
 8001016:	f04f 30ff 	mov.w	r0, #4294967295
 800101a:	4770      	bx	lr
 800101c:	f04f 0000 	mov.w	r0, #0
 8001020:	4770      	bx	lr
 8001022:	bf00      	nop

08001024 <SystemInit>:
  * @note   This function should be used only after reset.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 8001024:	b480      	push	{r7}
 8001026:	af00      	add	r7, sp, #0
  /* Reset the RCC clock configuration to the default reset state(for debug purpose) */
  /* Set HSION bit */
  RCC->CR |= 0x00000001U;
 8001028:	4b15      	ldr	r3, [pc, #84]	; (8001080 <SystemInit+0x5c>)
 800102a:	681b      	ldr	r3, [r3, #0]
 800102c:	4a14      	ldr	r2, [pc, #80]	; (8001080 <SystemInit+0x5c>)
 800102e:	f043 0301 	orr.w	r3, r3, #1
 8001032:	6013      	str	r3, [r2, #0]

  /* Reset SW, HPRE, PPRE1, PPRE2, ADCPRE and MCO bits */
#if !defined(STM32F105xC) && !defined(STM32F107xC)
  RCC->CFGR &= 0xF8FF0000U;
 8001034:	4b12      	ldr	r3, [pc, #72]	; (8001080 <SystemInit+0x5c>)
 8001036:	685a      	ldr	r2, [r3, #4]
 8001038:	4911      	ldr	r1, [pc, #68]	; (8001080 <SystemInit+0x5c>)
 800103a:	4b12      	ldr	r3, [pc, #72]	; (8001084 <SystemInit+0x60>)
 800103c:	4013      	ands	r3, r2
 800103e:	604b      	str	r3, [r1, #4]
#else
  RCC->CFGR &= 0xF0FF0000U;
#endif /* STM32F105xC */   
  
  /* Reset HSEON, CSSON and PLLON bits */
  RCC->CR &= 0xFEF6FFFFU;
 8001040:	4b0f      	ldr	r3, [pc, #60]	; (8001080 <SystemInit+0x5c>)
 8001042:	681b      	ldr	r3, [r3, #0]
 8001044:	4a0e      	ldr	r2, [pc, #56]	; (8001080 <SystemInit+0x5c>)
 8001046:	f023 7384 	bic.w	r3, r3, #17301504	; 0x1080000
 800104a:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800104e:	6013      	str	r3, [r2, #0]

  /* Reset HSEBYP bit */
  RCC->CR &= 0xFFFBFFFFU;
 8001050:	4b0b      	ldr	r3, [pc, #44]	; (8001080 <SystemInit+0x5c>)
 8001052:	681b      	ldr	r3, [r3, #0]
 8001054:	4a0a      	ldr	r2, [pc, #40]	; (8001080 <SystemInit+0x5c>)
 8001056:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800105a:	6013      	str	r3, [r2, #0]

  /* Reset PLLSRC, PLLXTPRE, PLLMUL and USBPRE/OTGFSPRE bits */
  RCC->CFGR &= 0xFF80FFFFU;
 800105c:	4b08      	ldr	r3, [pc, #32]	; (8001080 <SystemInit+0x5c>)
 800105e:	685b      	ldr	r3, [r3, #4]
 8001060:	4a07      	ldr	r2, [pc, #28]	; (8001080 <SystemInit+0x5c>)
 8001062:	f423 03fe 	bic.w	r3, r3, #8323072	; 0x7f0000
 8001066:	6053      	str	r3, [r2, #4]

  /* Reset CFGR2 register */
  RCC->CFGR2 = 0x00000000U;      
#else
  /* Disable all interrupts and clear pending bits  */
  RCC->CIR = 0x009F0000U;
 8001068:	4b05      	ldr	r3, [pc, #20]	; (8001080 <SystemInit+0x5c>)
 800106a:	f44f 021f 	mov.w	r2, #10420224	; 0x9f0000
 800106e:	609a      	str	r2, [r3, #8]
#endif 

#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH. */
 8001070:	4b05      	ldr	r3, [pc, #20]	; (8001088 <SystemInit+0x64>)
 8001072:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8001076:	609a      	str	r2, [r3, #8]
#endif 
}
 8001078:	bf00      	nop
 800107a:	46bd      	mov	sp, r7
 800107c:	bc80      	pop	{r7}
 800107e:	4770      	bx	lr
 8001080:	40021000 	.word	0x40021000
 8001084:	f8ff0000 	.word	0xf8ff0000
 8001088:	e000ed00 	.word	0xe000ed00

0800108c <InitADC_1>:
/*******************************END Variables******************************/
/*========================================================================*/
/********************************Functions*********************************/

void InitADC_1(void)
	{
 800108c:	b480      	push	{r7}
 800108e:	af00      	add	r7, sp, #0

		RCC->APB2ENR |= RCC_APB2ENR_IOPAEN;
 8001090:	4b2c      	ldr	r3, [pc, #176]	; (8001144 <InitADC_1+0xb8>)
 8001092:	699b      	ldr	r3, [r3, #24]
 8001094:	4a2b      	ldr	r2, [pc, #172]	; (8001144 <InitADC_1+0xb8>)
 8001096:	f043 0304 	orr.w	r3, r3, #4
 800109a:	6193      	str	r3, [r2, #24]
		RCC->APB2ENR |= RCC_APB2ENR_AFIOEN;
 800109c:	4b29      	ldr	r3, [pc, #164]	; (8001144 <InitADC_1+0xb8>)
 800109e:	699b      	ldr	r3, [r3, #24]
 80010a0:	4a28      	ldr	r2, [pc, #160]	; (8001144 <InitADC_1+0xb8>)
 80010a2:	f043 0301 	orr.w	r3, r3, #1
 80010a6:	6193      	str	r3, [r2, #24]

		GPIOA->CRL &= ~GPIO_CRL_CNF0;
 80010a8:	4b27      	ldr	r3, [pc, #156]	; (8001148 <InitADC_1+0xbc>)
 80010aa:	681b      	ldr	r3, [r3, #0]
 80010ac:	4a26      	ldr	r2, [pc, #152]	; (8001148 <InitADC_1+0xbc>)
 80010ae:	f023 030c 	bic.w	r3, r3, #12
 80010b2:	6013      	str	r3, [r2, #0]
		GPIOA->CRL &= ~GPIO_CRL_MODE0;
 80010b4:	4b24      	ldr	r3, [pc, #144]	; (8001148 <InitADC_1+0xbc>)
 80010b6:	681b      	ldr	r3, [r3, #0]
 80010b8:	4a23      	ldr	r2, [pc, #140]	; (8001148 <InitADC_1+0xbc>)
 80010ba:	f023 0303 	bic.w	r3, r3, #3
 80010be:	6013      	str	r3, [r2, #0]

		RCC->APB2ENR |= RCC_APB2ENR_ADC1EN;
 80010c0:	4b20      	ldr	r3, [pc, #128]	; (8001144 <InitADC_1+0xb8>)
 80010c2:	699b      	ldr	r3, [r3, #24]
 80010c4:	4a1f      	ldr	r2, [pc, #124]	; (8001144 <InitADC_1+0xb8>)
 80010c6:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80010ca:	6193      	str	r3, [r2, #24]
		RCC->APB2ENR |= RCC_CFGR_ADCPRE_DIV6;					// Prescalet 6. 72MHz/6 = 12MHz
 80010cc:	4b1d      	ldr	r3, [pc, #116]	; (8001144 <InitADC_1+0xb8>)
 80010ce:	699b      	ldr	r3, [r3, #24]
 80010d0:	4a1c      	ldr	r2, [pc, #112]	; (8001144 <InitADC_1+0xb8>)
 80010d2:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80010d6:	6193      	str	r3, [r2, #24]

		ADC1->CR2 |= ADC_CR2_CAL; 								// start calibration
 80010d8:	4b1c      	ldr	r3, [pc, #112]	; (800114c <InitADC_1+0xc0>)
 80010da:	689b      	ldr	r3, [r3, #8]
 80010dc:	4a1b      	ldr	r2, [pc, #108]	; (800114c <InitADC_1+0xc0>)
 80010de:	f043 0304 	orr.w	r3, r3, #4
 80010e2:	6093      	str	r3, [r2, #8]
		while (!(ADC1->CR2 & ADC_CR2_CAL));                		// waiting end calibration
 80010e4:	bf00      	nop
 80010e6:	4b19      	ldr	r3, [pc, #100]	; (800114c <InitADC_1+0xc0>)
 80010e8:	689b      	ldr	r3, [r3, #8]
 80010ea:	f003 0304 	and.w	r3, r3, #4
 80010ee:	2b00      	cmp	r3, #0
 80010f0:	d0f9      	beq.n	80010e6 <InitADC_1+0x5a>

		ADC1->CR2 |= ADC_CR2_ADON;     							// enable ADC
 80010f2:	4b16      	ldr	r3, [pc, #88]	; (800114c <InitADC_1+0xc0>)
 80010f4:	689b      	ldr	r3, [r3, #8]
 80010f6:	4a15      	ldr	r2, [pc, #84]	; (800114c <InitADC_1+0xc0>)
 80010f8:	f043 0301 	orr.w	r3, r3, #1
 80010fc:	6093      	str	r3, [r2, #8]
		ADC1->CR2 &= ~ADC_CR2_CONT;								// 0 - single conversion, 1 - continuous conversion
 80010fe:	4b13      	ldr	r3, [pc, #76]	; (800114c <InitADC_1+0xc0>)
 8001100:	689b      	ldr	r3, [r3, #8]
 8001102:	4a12      	ldr	r2, [pc, #72]	; (800114c <InitADC_1+0xc0>)
 8001104:	f023 0302 	bic.w	r3, r3, #2
 8001108:	6093      	str	r3, [r2, #8]
		ADC1->CR2 |= ADC_CR2_EXTSEL;      						// event start conversion SWSTART
 800110a:	4b10      	ldr	r3, [pc, #64]	; (800114c <InitADC_1+0xc0>)
 800110c:	689b      	ldr	r3, [r3, #8]
 800110e:	4a0f      	ldr	r2, [pc, #60]	; (800114c <InitADC_1+0xc0>)
 8001110:	f443 2360 	orr.w	r3, r3, #917504	; 0xe0000
 8001114:	6093      	str	r3, [r2, #8]
		ADC1->CR2 |= ADC_CR2_EXTTRIG;                       	// enable start conversion external signal
 8001116:	4b0d      	ldr	r3, [pc, #52]	; (800114c <InitADC_1+0xc0>)
 8001118:	689b      	ldr	r3, [r3, #8]
 800111a:	4a0c      	ldr	r2, [pc, #48]	; (800114c <InitADC_1+0xc0>)
 800111c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8001120:	6093      	str	r3, [r2, #8]
		ADC1->SMPR1 |= ADC_SMPR1_SMP16; 						// sempling 239.5 cycle
 8001122:	4b0a      	ldr	r3, [pc, #40]	; (800114c <InitADC_1+0xc0>)
 8001124:	68db      	ldr	r3, [r3, #12]
 8001126:	4a09      	ldr	r2, [pc, #36]	; (800114c <InitADC_1+0xc0>)
 8001128:	f443 13e0 	orr.w	r3, r3, #1835008	; 0x1c0000
 800112c:	60d3      	str	r3, [r2, #12]
		ADC1->SQR3 &= ~ADC_SQR3_SQ1;    						// selection channel 0
 800112e:	4b07      	ldr	r3, [pc, #28]	; (800114c <InitADC_1+0xc0>)
 8001130:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8001132:	4a06      	ldr	r2, [pc, #24]	; (800114c <InitADC_1+0xc0>)
 8001134:	f023 031f 	bic.w	r3, r3, #31
 8001138:	6353      	str	r3, [r2, #52]	; 0x34

	}
 800113a:	bf00      	nop
 800113c:	46bd      	mov	sp, r7
 800113e:	bc80      	pop	{r7}
 8001140:	4770      	bx	lr
 8001142:	bf00      	nop
 8001144:	40021000 	.word	0x40021000
 8001148:	40010800 	.word	0x40010800
 800114c:	40012400 	.word	0x40012400

08001150 <GetValueADC>:

float GetValueADC(uint8_t numberOfSample)
	{
 8001150:	b580      	push	{r7, lr}
 8001152:	b084      	sub	sp, #16
 8001154:	af00      	add	r7, sp, #0
 8001156:	4603      	mov	r3, r0
 8001158:	71fb      	strb	r3, [r7, #7]

		uint8_t couter = numberOfSample;
 800115a:	79fb      	ldrb	r3, [r7, #7]
 800115c:	73fb      	strb	r3, [r7, #15]
		float averageValueADC = 0;
 800115e:	f04f 0300 	mov.w	r3, #0
 8001162:	60bb      	str	r3, [r7, #8]

		ADC1->CR2 |= ADC_CR2_SWSTART;							// ADC start
 8001164:	4b17      	ldr	r3, [pc, #92]	; (80011c4 <GetValueADC+0x74>)
 8001166:	689b      	ldr	r3, [r3, #8]
 8001168:	4a16      	ldr	r2, [pc, #88]	; (80011c4 <GetValueADC+0x74>)
 800116a:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 800116e:	6093      	str	r3, [r2, #8]
		while (!(ADC1->SR & ADC_SR_EOC));						// Wait for End Of Convertation
 8001170:	bf00      	nop
 8001172:	4b14      	ldr	r3, [pc, #80]	; (80011c4 <GetValueADC+0x74>)
 8001174:	681b      	ldr	r3, [r3, #0]
 8001176:	f003 0302 	and.w	r3, r3, #2
 800117a:	2b00      	cmp	r3, #0
 800117c:	d0f9      	beq.n	8001172 <GetValueADC+0x22>

		while(couter)											// Calculate arithmetic mean
 800117e:	e00e      	b.n	800119e <GetValueADC+0x4e>
			{
				averageValueADC += (ADC1->DR);
 8001180:	4b10      	ldr	r3, [pc, #64]	; (80011c4 <GetValueADC+0x74>)
 8001182:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8001184:	4618      	mov	r0, r3
 8001186:	f7ff fd85 	bl	8000c94 <__aeabi_ui2f>
 800118a:	4603      	mov	r3, r0
 800118c:	4619      	mov	r1, r3
 800118e:	68b8      	ldr	r0, [r7, #8]
 8001190:	f7ff fcd0 	bl	8000b34 <__addsf3>
 8001194:	4603      	mov	r3, r0
 8001196:	60bb      	str	r3, [r7, #8]
				couter--;
 8001198:	7bfb      	ldrb	r3, [r7, #15]
 800119a:	3b01      	subs	r3, #1
 800119c:	73fb      	strb	r3, [r7, #15]
		while(couter)											// Calculate arithmetic mean
 800119e:	7bfb      	ldrb	r3, [r7, #15]
 80011a0:	2b00      	cmp	r3, #0
 80011a2:	d1ed      	bne.n	8001180 <GetValueADC+0x30>
			}
		averageValueADC = averageValueADC/numberOfSample;
 80011a4:	79fb      	ldrb	r3, [r7, #7]
 80011a6:	4618      	mov	r0, r3
 80011a8:	f7ff fd78 	bl	8000c9c <__aeabi_i2f>
 80011ac:	4603      	mov	r3, r0
 80011ae:	4619      	mov	r1, r3
 80011b0:	68b8      	ldr	r0, [r7, #8]
 80011b2:	f7ff fe7b 	bl	8000eac <__aeabi_fdiv>
 80011b6:	4603      	mov	r3, r0
 80011b8:	60bb      	str	r3, [r7, #8]

		return averageValueADC;									// Return arithmetic mean
 80011ba:	68bb      	ldr	r3, [r7, #8]

	}
 80011bc:	4618      	mov	r0, r3
 80011be:	3710      	adds	r7, #16
 80011c0:	46bd      	mov	sp, r7
 80011c2:	bd80      	pop	{r7, pc}
 80011c4:	40012400 	.word	0x40012400

080011c8 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 80011c8:	b480      	push	{r7}
 80011ca:	b083      	sub	sp, #12
 80011cc:	af00      	add	r7, sp, #0
 80011ce:	4603      	mov	r3, r0
 80011d0:	6039      	str	r1, [r7, #0]
 80011d2:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80011d4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80011d8:	2b00      	cmp	r3, #0
 80011da:	db0a      	blt.n	80011f2 <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80011dc:	683b      	ldr	r3, [r7, #0]
 80011de:	b2da      	uxtb	r2, r3
 80011e0:	490c      	ldr	r1, [pc, #48]	; (8001214 <__NVIC_SetPriority+0x4c>)
 80011e2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80011e6:	0112      	lsls	r2, r2, #4
 80011e8:	b2d2      	uxtb	r2, r2
 80011ea:	440b      	add	r3, r1
 80011ec:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 80011f0:	e00a      	b.n	8001208 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80011f2:	683b      	ldr	r3, [r7, #0]
 80011f4:	b2da      	uxtb	r2, r3
 80011f6:	4908      	ldr	r1, [pc, #32]	; (8001218 <__NVIC_SetPriority+0x50>)
 80011f8:	79fb      	ldrb	r3, [r7, #7]
 80011fa:	f003 030f 	and.w	r3, r3, #15
 80011fe:	3b04      	subs	r3, #4
 8001200:	0112      	lsls	r2, r2, #4
 8001202:	b2d2      	uxtb	r2, r2
 8001204:	440b      	add	r3, r1
 8001206:	761a      	strb	r2, [r3, #24]
}
 8001208:	bf00      	nop
 800120a:	370c      	adds	r7, #12
 800120c:	46bd      	mov	sp, r7
 800120e:	bc80      	pop	{r7}
 8001210:	4770      	bx	lr
 8001212:	bf00      	nop
 8001214:	e000e100 	.word	0xe000e100
 8001218:	e000ed00 	.word	0xe000ed00

0800121c <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 800121c:	b580      	push	{r7, lr}
 800121e:	b082      	sub	sp, #8
 8001220:	af00      	add	r7, sp, #0
 8001222:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8001224:	687b      	ldr	r3, [r7, #4]
 8001226:	3b01      	subs	r3, #1
 8001228:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800122c:	d301      	bcc.n	8001232 <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 800122e:	2301      	movs	r3, #1
 8001230:	e00f      	b.n	8001252 <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8001232:	4a0a      	ldr	r2, [pc, #40]	; (800125c <SysTick_Config+0x40>)
 8001234:	687b      	ldr	r3, [r7, #4]
 8001236:	3b01      	subs	r3, #1
 8001238:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 800123a:	210f      	movs	r1, #15
 800123c:	f04f 30ff 	mov.w	r0, #4294967295
 8001240:	f7ff ffc2 	bl	80011c8 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8001244:	4b05      	ldr	r3, [pc, #20]	; (800125c <SysTick_Config+0x40>)
 8001246:	2200      	movs	r2, #0
 8001248:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 800124a:	4b04      	ldr	r3, [pc, #16]	; (800125c <SysTick_Config+0x40>)
 800124c:	2207      	movs	r2, #7
 800124e:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8001250:	2300      	movs	r3, #0
}
 8001252:	4618      	mov	r0, r3
 8001254:	3708      	adds	r7, #8
 8001256:	46bd      	mov	sp, r7
 8001258:	bd80      	pop	{r7, pc}
 800125a:	bf00      	nop
 800125c:	e000e010 	.word	0xe000e010

08001260 <main>:
/******************************END Prototypes******************************/
/*========================================================================*/
/***********************************MAIN***********************************/

int main(void)
	{
 8001260:	b590      	push	{r4, r7, lr}
 8001262:	b085      	sub	sp, #20
 8001264:	af02      	add	r7, sp, #8

/******************************Initialization******************************/

		SysTick_Config(SystemCoreClock/1000);			// Time between 2 interrupts = 1 ms
 8001266:	4b4f      	ldr	r3, [pc, #316]	; (80013a4 <main+0x144>)
 8001268:	681b      	ldr	r3, [r3, #0]
 800126a:	4a4f      	ldr	r2, [pc, #316]	; (80013a8 <main+0x148>)
 800126c:	fba2 2303 	umull	r2, r3, r2, r3
 8001270:	099b      	lsrs	r3, r3, #6
 8001272:	4618      	mov	r0, r3
 8001274:	f7ff ffd2 	bl	800121c <SysTick_Config>
		InitRCC();										// SysClock - 72MHz
 8001278:	f000 fa4e 	bl	8001718 <InitRCC>
		InitGPIO();										// PC13 - internal LED
 800127c:	f000 fab4 	bl	80017e8 <InitGPIO>
		InitUSART_1();
 8001280:	f000 faea 	bl	8001858 <InitUSART_1>
		InitPWM();
 8001284:	f000 f9d4 	bl	8001630 <InitPWM>
		InitADC_1();
 8001288:	f7ff ff00 	bl	800108c <InitADC_1>
/***************************END initialization*****************************/


		while(1)
		{
			uint16_t PidValue = 0;
 800128c:	2300      	movs	r3, #0
 800128e:	80fb      	strh	r3, [r7, #6]

			/*Get values from functions*/

			ADCVal =  GetValueADC(20);
 8001290:	2014      	movs	r0, #20
 8001292:	f7ff ff5d 	bl	8001150 <GetValueADC>
 8001296:	4602      	mov	r2, r0
 8001298:	4b44      	ldr	r3, [pc, #272]	; (80013ac <main+0x14c>)
 800129a:	601a      	str	r2, [r3, #0]
			VoltageVal = GetVoltageFromSensor(20, ADCVal);
 800129c:	4b43      	ldr	r3, [pc, #268]	; (80013ac <main+0x14c>)
 800129e:	681b      	ldr	r3, [r3, #0]
 80012a0:	4619      	mov	r1, r3
 80012a2:	2014      	movs	r0, #20
 80012a4:	f000 f89c 	bl	80013e0 <GetVoltageFromSensor>
 80012a8:	4602      	mov	r2, r0
 80012aa:	4b41      	ldr	r3, [pc, #260]	; (80013b0 <main+0x150>)
 80012ac:	601a      	str	r2, [r3, #0]
			TempValue = GetTemperatureFromSensor(5, VoltageVal);
 80012ae:	4b40      	ldr	r3, [pc, #256]	; (80013b0 <main+0x150>)
 80012b0:	681b      	ldr	r3, [r3, #0]
 80012b2:	4619      	mov	r1, r3
 80012b4:	2005      	movs	r0, #5
 80012b6:	f000 f8df 	bl	8001478 <GetTemperatureFromSensor>
 80012ba:	4602      	mov	r2, r0
 80012bc:	4b3d      	ldr	r3, [pc, #244]	; (80013b4 <main+0x154>)
 80012be:	601a      	str	r2, [r3, #0]
			PidValue = PID_Regulation(100, 50, 50,
 80012c0:	2014      	movs	r0, #20
 80012c2:	f7ff ff45 	bl	8001150 <GetValueADC>
 80012c6:	4603      	mov	r3, r0
 80012c8:	4619      	mov	r1, r3
 80012ca:	2014      	movs	r0, #20
 80012cc:	f000 f8d4 	bl	8001478 <GetTemperatureFromSensor>
 80012d0:	4604      	mov	r4, r0
 80012d2:	4b39      	ldr	r3, [pc, #228]	; (80013b8 <main+0x158>)
 80012d4:	781b      	ldrb	r3, [r3, #0]
 80012d6:	4618      	mov	r0, r3
 80012d8:	f7ff fcdc 	bl	8000c94 <__aeabi_ui2f>
 80012dc:	4603      	mov	r3, r0
 80012de:	9300      	str	r3, [sp, #0]
 80012e0:	4623      	mov	r3, r4
 80012e2:	4a36      	ldr	r2, [pc, #216]	; (80013bc <main+0x15c>)
 80012e4:	4935      	ldr	r1, [pc, #212]	; (80013bc <main+0x15c>)
 80012e6:	4836      	ldr	r0, [pc, #216]	; (80013c0 <main+0x160>)
 80012e8:	f000 f928 	bl	800153c <PID_Regulation>
 80012ec:	4603      	mov	r3, r0
 80012ee:	4618      	mov	r0, r3
 80012f0:	f7ff fe78 	bl	8000fe4 <__aeabi_f2uiz>
 80012f4:	4603      	mov	r3, r0
 80012f6:	80fb      	strh	r3, [r7, #6]
				GetTemperatureFromSensor(20, GetValueADC(20)), reqTemp);

			if(PidValue >= 300 && PidValue >= 5000)
 80012f8:	88fb      	ldrh	r3, [r7, #6]
 80012fa:	f5b3 7f96 	cmp.w	r3, #300	; 0x12c
 80012fe:	d30a      	bcc.n	8001316 <main+0xb6>
 8001300:	88fb      	ldrh	r3, [r7, #6]
 8001302:	f241 3287 	movw	r2, #4999	; 0x1387
 8001306:	4293      	cmp	r3, r2
 8001308:	d905      	bls.n	8001316 <main+0xb6>
				PidValue = PidValue/50;
 800130a:	88fb      	ldrh	r3, [r7, #6]
 800130c:	4a2d      	ldr	r2, [pc, #180]	; (80013c4 <main+0x164>)
 800130e:	fba2 2303 	umull	r2, r3, r2, r3
 8001312:	091b      	lsrs	r3, r3, #4
 8001314:	80fb      	strh	r3, [r7, #6]

			SetFillFactorPWM(PidValue);            		// Send formated PidValue to PWM
 8001316:	88fb      	ldrh	r3, [r7, #6]
 8001318:	4618      	mov	r0, r3
 800131a:	f000 f9ef 	bl	80016fc <SetFillFactorPWM>

/***************************Send DATA to USART****************************/

						sprintf (tempArr , "%0.2f", TempValue);
 800131e:	4b25      	ldr	r3, [pc, #148]	; (80013b4 <main+0x154>)
 8001320:	681b      	ldr	r3, [r3, #0]
 8001322:	4618      	mov	r0, r3
 8001324:	f7ff f880 	bl	8000428 <__aeabi_f2d>
 8001328:	4603      	mov	r3, r0
 800132a:	460c      	mov	r4, r1
 800132c:	461a      	mov	r2, r3
 800132e:	4623      	mov	r3, r4
 8001330:	4925      	ldr	r1, [pc, #148]	; (80013c8 <main+0x168>)
 8001332:	4826      	ldr	r0, [pc, #152]	; (80013cc <main+0x16c>)
 8001334:	f000 ffba 	bl	80022ac <siprintf>
						SendStringUSART_1("TMP result = ");
 8001338:	4825      	ldr	r0, [pc, #148]	; (80013d0 <main+0x170>)
 800133a:	f000 faf9 	bl	8001930 <SendStringUSART_1>
						SendStringUSART_1(tempArr);
 800133e:	4823      	ldr	r0, [pc, #140]	; (80013cc <main+0x16c>)
 8001340:	f000 faf6 	bl	8001930 <SendStringUSART_1>
						SendStringUSART_1("\r");
 8001344:	4823      	ldr	r0, [pc, #140]	; (80013d4 <main+0x174>)
 8001346:	f000 faf3 	bl	8001930 <SendStringUSART_1>

						sprintf (tempArr , "%0.2f", ADCVal);
 800134a:	4b18      	ldr	r3, [pc, #96]	; (80013ac <main+0x14c>)
 800134c:	681b      	ldr	r3, [r3, #0]
 800134e:	4618      	mov	r0, r3
 8001350:	f7ff f86a 	bl	8000428 <__aeabi_f2d>
 8001354:	4603      	mov	r3, r0
 8001356:	460c      	mov	r4, r1
 8001358:	461a      	mov	r2, r3
 800135a:	4623      	mov	r3, r4
 800135c:	491a      	ldr	r1, [pc, #104]	; (80013c8 <main+0x168>)
 800135e:	481b      	ldr	r0, [pc, #108]	; (80013cc <main+0x16c>)
 8001360:	f000 ffa4 	bl	80022ac <siprintf>
						SendStringUSART_1("ADC result = ");
 8001364:	481c      	ldr	r0, [pc, #112]	; (80013d8 <main+0x178>)
 8001366:	f000 fae3 	bl	8001930 <SendStringUSART_1>
						SendStringUSART_1(tempArr);
 800136a:	4818      	ldr	r0, [pc, #96]	; (80013cc <main+0x16c>)
 800136c:	f000 fae0 	bl	8001930 <SendStringUSART_1>
						SendStringUSART_1("\r");
 8001370:	4818      	ldr	r0, [pc, #96]	; (80013d4 <main+0x174>)
 8001372:	f000 fadd 	bl	8001930 <SendStringUSART_1>

						sprintf (tempArr , "%0.2f", VoltageVal);
 8001376:	4b0e      	ldr	r3, [pc, #56]	; (80013b0 <main+0x150>)
 8001378:	681b      	ldr	r3, [r3, #0]
 800137a:	4618      	mov	r0, r3
 800137c:	f7ff f854 	bl	8000428 <__aeabi_f2d>
 8001380:	4603      	mov	r3, r0
 8001382:	460c      	mov	r4, r1
 8001384:	461a      	mov	r2, r3
 8001386:	4623      	mov	r3, r4
 8001388:	490f      	ldr	r1, [pc, #60]	; (80013c8 <main+0x168>)
 800138a:	4810      	ldr	r0, [pc, #64]	; (80013cc <main+0x16c>)
 800138c:	f000 ff8e 	bl	80022ac <siprintf>
						SendStringUSART_1("Voltage result = ");
 8001390:	4812      	ldr	r0, [pc, #72]	; (80013dc <main+0x17c>)
 8001392:	f000 facd 	bl	8001930 <SendStringUSART_1>
						SendStringUSART_1(tempArr);
 8001396:	480d      	ldr	r0, [pc, #52]	; (80013cc <main+0x16c>)
 8001398:	f000 faca 	bl	8001930 <SendStringUSART_1>
						SendStringUSART_1("\r");
 800139c:	480d      	ldr	r0, [pc, #52]	; (80013d4 <main+0x174>)
 800139e:	f000 fac7 	bl	8001930 <SendStringUSART_1>
		{
 80013a2:	e773      	b.n	800128c <main+0x2c>
 80013a4:	20000000 	.word	0x20000000
 80013a8:	10624dd3 	.word	0x10624dd3
 80013ac:	20000204 	.word	0x20000204
 80013b0:	2000020c 	.word	0x2000020c
 80013b4:	20000208 	.word	0x20000208
 80013b8:	20000004 	.word	0x20000004
 80013bc:	42480000 	.word	0x42480000
 80013c0:	42c80000 	.word	0x42c80000
 80013c4:	51eb851f 	.word	0x51eb851f
 80013c8:	08003ab8 	.word	0x08003ab8
 80013cc:	20000210 	.word	0x20000210
 80013d0:	08003ac0 	.word	0x08003ac0
 80013d4:	08003ad0 	.word	0x08003ad0
 80013d8:	08003ad4 	.word	0x08003ad4
 80013dc:	08003ae4 	.word	0x08003ae4

080013e0 <GetVoltageFromSensor>:
 *  - ValueADC. You should to use function GetValueADC(). Where is you should to set
 *  numberOfSample also as argument in that function.
 *
 * */
float GetVoltageFromSensor(uint8_t numberOfSample, float ValueADC)
	{
 80013e0:	b590      	push	{r4, r7, lr}
 80013e2:	b087      	sub	sp, #28
 80013e4:	af00      	add	r7, sp, #0
 80013e6:	4603      	mov	r3, r0
 80013e8:	6039      	str	r1, [r7, #0]
 80013ea:	71fb      	strb	r3, [r7, #7]

		uint8_t couter = numberOfSample;
 80013ec:	79fb      	ldrb	r3, [r7, #7]
 80013ee:	75fb      	strb	r3, [r7, #23]

		float voltage = 0;
 80013f0:	f04f 0300 	mov.w	r3, #0
 80013f4:	60fb      	str	r3, [r7, #12]
		float averageValueVoltage=0;
 80013f6:	f04f 0300 	mov.w	r3, #0
 80013fa:	613b      	str	r3, [r7, #16]

/******************Calculate arithmetic mean of voltage********************/

		voltage = (3.3*ValueADC)/4095;						// ADC = (Vin * 2^n)/Vref
 80013fc:	6838      	ldr	r0, [r7, #0]
 80013fe:	f7ff f813 	bl	8000428 <__aeabi_f2d>
 8001402:	a319      	add	r3, pc, #100	; (adr r3, 8001468 <GetVoltageFromSensor+0x88>)
 8001404:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001408:	f7ff f866 	bl	80004d8 <__aeabi_dmul>
 800140c:	4603      	mov	r3, r0
 800140e:	460c      	mov	r4, r1
 8001410:	4618      	mov	r0, r3
 8001412:	4621      	mov	r1, r4
 8001414:	a316      	add	r3, pc, #88	; (adr r3, 8001470 <GetVoltageFromSensor+0x90>)
 8001416:	e9d3 2300 	ldrd	r2, r3, [r3]
 800141a:	f7ff f987 	bl	800072c <__aeabi_ddiv>
 800141e:	4603      	mov	r3, r0
 8001420:	460c      	mov	r4, r1
 8001422:	4618      	mov	r0, r3
 8001424:	4621      	mov	r1, r4
 8001426:	f7ff fb2f 	bl	8000a88 <__aeabi_d2f>
 800142a:	4603      	mov	r3, r0
 800142c:	60fb      	str	r3, [r7, #12]

		while(couter)
 800142e:	e008      	b.n	8001442 <GetVoltageFromSensor+0x62>
			{
				averageValueVoltage += voltage;
 8001430:	68f9      	ldr	r1, [r7, #12]
 8001432:	6938      	ldr	r0, [r7, #16]
 8001434:	f7ff fb7e 	bl	8000b34 <__addsf3>
 8001438:	4603      	mov	r3, r0
 800143a:	613b      	str	r3, [r7, #16]
				couter--;
 800143c:	7dfb      	ldrb	r3, [r7, #23]
 800143e:	3b01      	subs	r3, #1
 8001440:	75fb      	strb	r3, [r7, #23]
		while(couter)
 8001442:	7dfb      	ldrb	r3, [r7, #23]
 8001444:	2b00      	cmp	r3, #0
 8001446:	d1f3      	bne.n	8001430 <GetVoltageFromSensor+0x50>
			}

		averageValueVoltage = averageValueVoltage/numberOfSample;
 8001448:	79fb      	ldrb	r3, [r7, #7]
 800144a:	4618      	mov	r0, r3
 800144c:	f7ff fc26 	bl	8000c9c <__aeabi_i2f>
 8001450:	4603      	mov	r3, r0
 8001452:	4619      	mov	r1, r3
 8001454:	6938      	ldr	r0, [r7, #16]
 8001456:	f7ff fd29 	bl	8000eac <__aeabi_fdiv>
 800145a:	4603      	mov	r3, r0
 800145c:	613b      	str	r3, [r7, #16]

		return averageValueVoltage;
 800145e:	693b      	ldr	r3, [r7, #16]
	}
 8001460:	4618      	mov	r0, r3
 8001462:	371c      	adds	r7, #28
 8001464:	46bd      	mov	sp, r7
 8001466:	bd90      	pop	{r4, r7, pc}
 8001468:	66666666 	.word	0x66666666
 800146c:	400a6666 	.word	0x400a6666
 8001470:	00000000 	.word	0x00000000
 8001474:	40affe00 	.word	0x40affe00

08001478 <GetTemperatureFromSensor>:
 *  - ValtageValue. You should to use function GetVoltageFromSensor(). Where is you should to set
 *  numberOfSample also as argument in that function.
 *
 * */
float GetTemperatureFromSensor(uint8_t numberOfSample, float ValtageValue)
	{
 8001478:	b590      	push	{r4, r7, lr}
 800147a:	b087      	sub	sp, #28
 800147c:	af00      	add	r7, sp, #0
 800147e:	4603      	mov	r3, r0
 8001480:	6039      	str	r1, [r7, #0]
 8001482:	71fb      	strb	r3, [r7, #7]

		uint8_t couter = numberOfSample;
 8001484:	79fb      	ldrb	r3, [r7, #7]
 8001486:	75fb      	strb	r3, [r7, #23]
		float temp = 0;
 8001488:	f04f 0300 	mov.w	r3, #0
 800148c:	60fb      	str	r3, [r7, #12]
		float avarageTemp = 0;
 800148e:	f04f 0300 	mov.w	r3, #0
 8001492:	613b      	str	r3, [r7, #16]

		temp = ValtageValue / 0.03;							//	In manual 10mV/C, but chose an experimental number
 8001494:	6838      	ldr	r0, [r7, #0]
 8001496:	f7fe ffc7 	bl	8000428 <__aeabi_f2d>
 800149a:	a315      	add	r3, pc, #84	; (adr r3, 80014f0 <GetTemperatureFromSensor+0x78>)
 800149c:	e9d3 2300 	ldrd	r2, r3, [r3]
 80014a0:	f7ff f944 	bl	800072c <__aeabi_ddiv>
 80014a4:	4603      	mov	r3, r0
 80014a6:	460c      	mov	r4, r1
 80014a8:	4618      	mov	r0, r3
 80014aa:	4621      	mov	r1, r4
 80014ac:	f7ff faec 	bl	8000a88 <__aeabi_d2f>
 80014b0:	4603      	mov	r3, r0
 80014b2:	60fb      	str	r3, [r7, #12]

/******************Calculate arithmetic mean of temperature*****************/
		while(couter)
 80014b4:	e008      	b.n	80014c8 <GetTemperatureFromSensor+0x50>
			{
				avarageTemp += temp;
 80014b6:	68f9      	ldr	r1, [r7, #12]
 80014b8:	6938      	ldr	r0, [r7, #16]
 80014ba:	f7ff fb3b 	bl	8000b34 <__addsf3>
 80014be:	4603      	mov	r3, r0
 80014c0:	613b      	str	r3, [r7, #16]
				couter--;
 80014c2:	7dfb      	ldrb	r3, [r7, #23]
 80014c4:	3b01      	subs	r3, #1
 80014c6:	75fb      	strb	r3, [r7, #23]
		while(couter)
 80014c8:	7dfb      	ldrb	r3, [r7, #23]
 80014ca:	2b00      	cmp	r3, #0
 80014cc:	d1f3      	bne.n	80014b6 <GetTemperatureFromSensor+0x3e>
			}

		avarageTemp = avarageTemp/numberOfSample;
 80014ce:	79fb      	ldrb	r3, [r7, #7]
 80014d0:	4618      	mov	r0, r3
 80014d2:	f7ff fbe3 	bl	8000c9c <__aeabi_i2f>
 80014d6:	4603      	mov	r3, r0
 80014d8:	4619      	mov	r1, r3
 80014da:	6938      	ldr	r0, [r7, #16]
 80014dc:	f7ff fce6 	bl	8000eac <__aeabi_fdiv>
 80014e0:	4603      	mov	r3, r0
 80014e2:	613b      	str	r3, [r7, #16]
		return avarageTemp;
 80014e4:	693b      	ldr	r3, [r7, #16]

	}
 80014e6:	4618      	mov	r0, r3
 80014e8:	371c      	adds	r7, #28
 80014ea:	46bd      	mov	sp, r7
 80014ec:	bd90      	pop	{r4, r7, pc}
 80014ee:	bf00      	nop
 80014f0:	eb851eb8 	.word	0xeb851eb8
 80014f4:	3f9eb851 	.word	0x3f9eb851

080014f8 <SysTick_Handler>:

/******************************END Functions********************************/
/*=========================================================================*/
/********************************Interrupts**********************************/
void SysTick_Handler(void)
{
 80014f8:	b480      	push	{r7}
 80014fa:	af00      	add	r7, sp, #0
	msTick++;
 80014fc:	4b04      	ldr	r3, [pc, #16]	; (8001510 <SysTick_Handler+0x18>)
 80014fe:	681b      	ldr	r3, [r3, #0]
 8001500:	3301      	adds	r3, #1
 8001502:	4a03      	ldr	r2, [pc, #12]	; (8001510 <SysTick_Handler+0x18>)
 8001504:	6013      	str	r3, [r2, #0]
}
 8001506:	bf00      	nop
 8001508:	46bd      	mov	sp, r7
 800150a:	bc80      	pop	{r7}
 800150c:	4770      	bx	lr
 800150e:	bf00      	nop
 8001510:	20000200 	.word	0x20000200

08001514 <USART1_IRQHandler>:

void USART1_IRQHandler (void){
 8001514:	b480      	push	{r7}
 8001516:	af00      	add	r7, sp, #0

	if (USART1->SR & USART_CR1_RXNEIE){
 8001518:	4b07      	ldr	r3, [pc, #28]	; (8001538 <USART1_IRQHandler+0x24>)
 800151a:	681b      	ldr	r3, [r3, #0]
 800151c:	f003 0320 	and.w	r3, r3, #32
 8001520:	2b00      	cmp	r3, #0
 8001522:	d005      	beq.n	8001530 <USART1_IRQHandler+0x1c>

		USART1->SR &= ~USART_CR1_RXNEIE;
 8001524:	4b04      	ldr	r3, [pc, #16]	; (8001538 <USART1_IRQHandler+0x24>)
 8001526:	681b      	ldr	r3, [r3, #0]
 8001528:	4a03      	ldr	r2, [pc, #12]	; (8001538 <USART1_IRQHandler+0x24>)
 800152a:	f023 0320 	bic.w	r3, r3, #32
 800152e:	6013      	str	r3, [r2, #0]

	}

}
 8001530:	bf00      	nop
 8001532:	46bd      	mov	sp, r7
 8001534:	bc80      	pop	{r7}
 8001536:	4770      	bx	lr
 8001538:	40013800 	.word	0x40013800

0800153c <PID_Regulation>:
/*******************************END Variables******************************/
/*========================================================================*/
/********************************Functions*********************************/

float PID_Regulation(float coefP, float coefI, float coefD, float currValue, float reqValue)
{
 800153c:	b580      	push	{r7, lr}
 800153e:	b084      	sub	sp, #16
 8001540:	af00      	add	r7, sp, #0
 8001542:	60f8      	str	r0, [r7, #12]
 8001544:	60b9      	str	r1, [r7, #8]
 8001546:	607a      	str	r2, [r7, #4]
 8001548:	603b      	str	r3, [r7, #0]

	lastError = error;
 800154a:	4b33      	ldr	r3, [pc, #204]	; (8001618 <PID_Regulation+0xdc>)
 800154c:	681b      	ldr	r3, [r3, #0]
 800154e:	4a33      	ldr	r2, [pc, #204]	; (800161c <PID_Regulation+0xe0>)
 8001550:	6013      	str	r3, [r2, #0]
	error = currValue - reqValue;								// Calculate curr error
 8001552:	69b9      	ldr	r1, [r7, #24]
 8001554:	6838      	ldr	r0, [r7, #0]
 8001556:	f7ff faeb 	bl	8000b30 <__aeabi_fsub>
 800155a:	4603      	mov	r3, r0
 800155c:	461a      	mov	r2, r3
 800155e:	4b2e      	ldr	r3, [pc, #184]	; (8001618 <PID_Regulation+0xdc>)
 8001560:	601a      	str	r2, [r3, #0]
	Int = Int + (error + lastError)/2; 							// Integral
 8001562:	4b2d      	ldr	r3, [pc, #180]	; (8001618 <PID_Regulation+0xdc>)
 8001564:	681a      	ldr	r2, [r3, #0]
 8001566:	4b2d      	ldr	r3, [pc, #180]	; (800161c <PID_Regulation+0xe0>)
 8001568:	681b      	ldr	r3, [r3, #0]
 800156a:	4619      	mov	r1, r3
 800156c:	4610      	mov	r0, r2
 800156e:	f7ff fae1 	bl	8000b34 <__addsf3>
 8001572:	4603      	mov	r3, r0
 8001574:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 8001578:	4618      	mov	r0, r3
 800157a:	f7ff fc97 	bl	8000eac <__aeabi_fdiv>
 800157e:	4603      	mov	r3, r0
 8001580:	461a      	mov	r2, r3
 8001582:	4b27      	ldr	r3, [pc, #156]	; (8001620 <PID_Regulation+0xe4>)
 8001584:	681b      	ldr	r3, [r3, #0]
 8001586:	4619      	mov	r1, r3
 8001588:	4610      	mov	r0, r2
 800158a:	f7ff fad3 	bl	8000b34 <__addsf3>
 800158e:	4603      	mov	r3, r0
 8001590:	461a      	mov	r2, r3
 8001592:	4b23      	ldr	r3, [pc, #140]	; (8001620 <PID_Regulation+0xe4>)
 8001594:	601a      	str	r2, [r3, #0]
	calcInt = Int*(1/coefI); 									// Calculate integral
 8001596:	68b9      	ldr	r1, [r7, #8]
 8001598:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
 800159c:	f7ff fc86 	bl	8000eac <__aeabi_fdiv>
 80015a0:	4603      	mov	r3, r0
 80015a2:	461a      	mov	r2, r3
 80015a4:	4b1e      	ldr	r3, [pc, #120]	; (8001620 <PID_Regulation+0xe4>)
 80015a6:	681b      	ldr	r3, [r3, #0]
 80015a8:	4619      	mov	r1, r3
 80015aa:	4610      	mov	r0, r2
 80015ac:	f7ff fbca 	bl	8000d44 <__aeabi_fmul>
 80015b0:	4603      	mov	r3, r0
 80015b2:	461a      	mov	r2, r3
 80015b4:	4b1b      	ldr	r3, [pc, #108]	; (8001624 <PID_Regulation+0xe8>)
 80015b6:	601a      	str	r2, [r3, #0]

	calcDif = coefD*(error-lastError); 							// Calculate deffirincial
 80015b8:	4b17      	ldr	r3, [pc, #92]	; (8001618 <PID_Regulation+0xdc>)
 80015ba:	681a      	ldr	r2, [r3, #0]
 80015bc:	4b17      	ldr	r3, [pc, #92]	; (800161c <PID_Regulation+0xe0>)
 80015be:	681b      	ldr	r3, [r3, #0]
 80015c0:	4619      	mov	r1, r3
 80015c2:	4610      	mov	r0, r2
 80015c4:	f7ff fab4 	bl	8000b30 <__aeabi_fsub>
 80015c8:	4603      	mov	r3, r0
 80015ca:	6879      	ldr	r1, [r7, #4]
 80015cc:	4618      	mov	r0, r3
 80015ce:	f7ff fbb9 	bl	8000d44 <__aeabi_fmul>
 80015d2:	4603      	mov	r3, r0
 80015d4:	461a      	mov	r2, r3
 80015d6:	4b14      	ldr	r3, [pc, #80]	; (8001628 <PID_Regulation+0xec>)
 80015d8:	601a      	str	r2, [r3, #0]

	return PID = (coefP * error + calcInt + calcDif);			// Output PID value
 80015da:	4b0f      	ldr	r3, [pc, #60]	; (8001618 <PID_Regulation+0xdc>)
 80015dc:	681b      	ldr	r3, [r3, #0]
 80015de:	68f9      	ldr	r1, [r7, #12]
 80015e0:	4618      	mov	r0, r3
 80015e2:	f7ff fbaf 	bl	8000d44 <__aeabi_fmul>
 80015e6:	4603      	mov	r3, r0
 80015e8:	461a      	mov	r2, r3
 80015ea:	4b0e      	ldr	r3, [pc, #56]	; (8001624 <PID_Regulation+0xe8>)
 80015ec:	681b      	ldr	r3, [r3, #0]
 80015ee:	4619      	mov	r1, r3
 80015f0:	4610      	mov	r0, r2
 80015f2:	f7ff fa9f 	bl	8000b34 <__addsf3>
 80015f6:	4603      	mov	r3, r0
 80015f8:	461a      	mov	r2, r3
 80015fa:	4b0b      	ldr	r3, [pc, #44]	; (8001628 <PID_Regulation+0xec>)
 80015fc:	681b      	ldr	r3, [r3, #0]
 80015fe:	4619      	mov	r1, r3
 8001600:	4610      	mov	r0, r2
 8001602:	f7ff fa97 	bl	8000b34 <__addsf3>
 8001606:	4603      	mov	r3, r0
 8001608:	461a      	mov	r2, r3
 800160a:	4b08      	ldr	r3, [pc, #32]	; (800162c <PID_Regulation+0xf0>)
 800160c:	601a      	str	r2, [r3, #0]
 800160e:	4613      	mov	r3, r2

}
 8001610:	4618      	mov	r0, r3
 8001612:	3710      	adds	r7, #16
 8001614:	46bd      	mov	sp, r7
 8001616:	bd80      	pop	{r7, pc}
 8001618:	20000228 	.word	0x20000228
 800161c:	20000220 	.word	0x20000220
 8001620:	20000224 	.word	0x20000224
 8001624:	2000021c 	.word	0x2000021c
 8001628:	20000218 	.word	0x20000218
 800162c:	20000214 	.word	0x20000214

08001630 <InitPWM>:
/*******************************END Variables******************************/
/*========================================================================*/
/********************************Functions*********************************/

void InitPWM(void)
{
 8001630:	b480      	push	{r7}
 8001632:	af00      	add	r7, sp, #0

	RCC->APB2ENR |= RCC_APB2ENR_IOPAEN								// Port A clock enable
 8001634:	4b2e      	ldr	r3, [pc, #184]	; (80016f0 <InitPWM+0xc0>)
 8001636:	699b      	ldr	r3, [r3, #24]
 8001638:	4a2d      	ldr	r2, [pc, #180]	; (80016f0 <InitPWM+0xc0>)
 800163a:	f043 0305 	orr.w	r3, r3, #5
 800163e:	6193      	str	r3, [r2, #24]
				 |  RCC_APB2ENR_AFIOEN;								// AF is enable
	RCC->APB1ENR |= RCC_APB1ENR_TIM2EN;								// TIM2 click is enable
 8001640:	4b2b      	ldr	r3, [pc, #172]	; (80016f0 <InitPWM+0xc0>)
 8001642:	69db      	ldr	r3, [r3, #28]
 8001644:	4a2a      	ldr	r2, [pc, #168]	; (80016f0 <InitPWM+0xc0>)
 8001646:	f043 0301 	orr.w	r3, r3, #1
 800164a:	61d3      	str	r3, [r2, #28]

	//RCC->CFGR |= RCC_CFGR_PPRE1_DIV2;								// APB1 prescaler is 2. 72MHz/2 = 36 MHz (is max clock for APB1)

	GPIOA->CRL &= ~GPIO_CRL_CNF1;									// Clear reg
 800164c:	4b29      	ldr	r3, [pc, #164]	; (80016f4 <InitPWM+0xc4>)
 800164e:	681b      	ldr	r3, [r3, #0]
 8001650:	4a28      	ldr	r2, [pc, #160]	; (80016f4 <InitPWM+0xc4>)
 8001652:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 8001656:	6013      	str	r3, [r2, #0]
	GPIOA->CRL &= ~GPIO_CRL_MODE1;
 8001658:	4b26      	ldr	r3, [pc, #152]	; (80016f4 <InitPWM+0xc4>)
 800165a:	681b      	ldr	r3, [r3, #0]
 800165c:	4a25      	ldr	r2, [pc, #148]	; (80016f4 <InitPWM+0xc4>)
 800165e:	f023 0330 	bic.w	r3, r3, #48	; 0x30
 8001662:	6013      	str	r3, [r2, #0]

	GPIOA->CRL |= GPIO_CRL_CNF1_1									// PA1 AF mode
 8001664:	4b23      	ldr	r3, [pc, #140]	; (80016f4 <InitPWM+0xc4>)
 8001666:	681b      	ldr	r3, [r3, #0]
 8001668:	4a22      	ldr	r2, [pc, #136]	; (80016f4 <InitPWM+0xc4>)
 800166a:	f043 03b0 	orr.w	r3, r3, #176	; 0xb0
 800166e:	6013      	str	r3, [r2, #0]
			   |  GPIO_CRL_MODE1;

	TIM2->PSC = 7200-1;												// Prescaler value
 8001670:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001674:	f641 421f 	movw	r2, #7199	; 0x1c1f
 8001678:	629a      	str	r2, [r3, #40]	; 0x28
	TIM2->ARR = 100;												// Value to autoreload
 800167a:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800167e:	2264      	movs	r2, #100	; 0x64
 8001680:	62da      	str	r2, [r3, #44]	; 0x2c
	TIM2->CCR2 = 100;												// fill factor
 8001682:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001686:	2264      	movs	r2, #100	; 0x64
 8001688:	639a      	str	r2, [r3, #56]	; 0x38

	TIM1->BDTR |= TIM_BDTR_MOE;										//Main Output enable
 800168a:	4b1b      	ldr	r3, [pc, #108]	; (80016f8 <InitPWM+0xc8>)
 800168c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800168e:	4a1a      	ldr	r2, [pc, #104]	; (80016f8 <InitPWM+0xc8>)
 8001690:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8001694:	6453      	str	r3, [r2, #68]	; 0x44

	TIM2->CCMR1 |= TIM_CCMR1_OC2M_1									// PWM mode 1
 8001696:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800169a:	699b      	ldr	r3, [r3, #24]
 800169c:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80016a0:	f443 43c0 	orr.w	r3, r3, #24576	; 0x6000
 80016a4:	6193      	str	r3, [r2, #24]
			   |  TIM_CCMR1_OC2M_2;

	TIM2->CCER |= TIM_CCER_CC2E;									// Capture/Compare 2 output enable
 80016a6:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80016aa:	6a1b      	ldr	r3, [r3, #32]
 80016ac:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80016b0:	f043 0310 	orr.w	r3, r3, #16
 80016b4:	6213      	str	r3, [r2, #32]
	TIM2->CCER &= ~TIM_CCER_CC2P;									// Capture/Compare 2 output Polarity - disable
 80016b6:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80016ba:	6a1b      	ldr	r3, [r3, #32]
 80016bc:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80016c0:	f023 0320 	bic.w	r3, r3, #32
 80016c4:	6213      	str	r3, [r2, #32]
	TIM2->CR1 &= ~TIM_CR1_DIR;										// Count direction
 80016c6:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80016ca:	681b      	ldr	r3, [r3, #0]
 80016cc:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80016d0:	f023 0310 	bic.w	r3, r3, #16
 80016d4:	6013      	str	r3, [r2, #0]
	TIM2->CR1 |= TIM_CR1_CEN;										// Counter enable
 80016d6:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80016da:	681b      	ldr	r3, [r3, #0]
 80016dc:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80016e0:	f043 0301 	orr.w	r3, r3, #1
 80016e4:	6013      	str	r3, [r2, #0]
}
 80016e6:	bf00      	nop
 80016e8:	46bd      	mov	sp, r7
 80016ea:	bc80      	pop	{r7}
 80016ec:	4770      	bx	lr
 80016ee:	bf00      	nop
 80016f0:	40021000 	.word	0x40021000
 80016f4:	40010800 	.word	0x40010800
 80016f8:	40012c00 	.word	0x40012c00

080016fc <SetFillFactorPWM>:

void SetFillFactorPWM(int ValCCR2)
{
 80016fc:	b480      	push	{r7}
 80016fe:	b083      	sub	sp, #12
 8001700:	af00      	add	r7, sp, #0
 8001702:	6078      	str	r0, [r7, #4]

	TIM2->CCR2 = ValCCR2;											// fill factor
 8001704:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001708:	687b      	ldr	r3, [r7, #4]
 800170a:	6393      	str	r3, [r2, #56]	; 0x38

}
 800170c:	bf00      	nop
 800170e:	370c      	adds	r7, #12
 8001710:	46bd      	mov	sp, r7
 8001712:	bc80      	pop	{r7}
 8001714:	4770      	bx	lr
	...

08001718 <InitRCC>:
#include "sysInit.h"
/*******************************END Includes*******************************/
/*========================================================================*/
/********************************Functions**********************************/
void InitRCC(void)
{
 8001718:	b480      	push	{r7}
 800171a:	af00      	add	r7, sp, #0

	RCC->CR |= (uint32_t)RCC_CR_HSEON;						//source freq is HSE
 800171c:	4b30      	ldr	r3, [pc, #192]	; (80017e0 <InitRCC+0xc8>)
 800171e:	681b      	ldr	r3, [r3, #0]
 8001720:	4a2f      	ldr	r2, [pc, #188]	; (80017e0 <InitRCC+0xc8>)
 8001722:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001726:	6013      	str	r3, [r2, #0]
	while(!(RCC->CR & RCC_CR_HSERDY));						//we wait for sourse freq change. Default - HSI, but we have activated HSE
 8001728:	bf00      	nop
 800172a:	4b2d      	ldr	r3, [pc, #180]	; (80017e0 <InitRCC+0xc8>)
 800172c:	681b      	ldr	r3, [r3, #0]
 800172e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001732:	2b00      	cmp	r3, #0
 8001734:	d0f9      	beq.n	800172a <InitRCC+0x12>

	FLASH->ACR = FLASH_ACR_PRFTBE | FLASH_ACR_LATENCY;		//clock flash memory
 8001736:	4b2b      	ldr	r3, [pc, #172]	; (80017e4 <InitRCC+0xcc>)
 8001738:	2217      	movs	r2, #23
 800173a:	601a      	str	r2, [r3, #0]

	RCC->CFGR |= RCC_CFGR_HPRE_DIV1;						//AHB = SYSCLK/1
 800173c:	4b28      	ldr	r3, [pc, #160]	; (80017e0 <InitRCC+0xc8>)
 800173e:	4a28      	ldr	r2, [pc, #160]	; (80017e0 <InitRCC+0xc8>)
 8001740:	685b      	ldr	r3, [r3, #4]
 8001742:	6053      	str	r3, [r2, #4]
	RCC->CFGR |= RCC_CFGR_PPRE1_DIV1;						//APB1 = HCLK/1
 8001744:	4b26      	ldr	r3, [pc, #152]	; (80017e0 <InitRCC+0xc8>)
 8001746:	4a26      	ldr	r2, [pc, #152]	; (80017e0 <InitRCC+0xc8>)
 8001748:	685b      	ldr	r3, [r3, #4]
 800174a:	6053      	str	r3, [r2, #4]
	RCC->CFGR |= RCC_CFGR_PPRE2_DIV1;                       //APB2 = HCLK/1
 800174c:	4b24      	ldr	r3, [pc, #144]	; (80017e0 <InitRCC+0xc8>)
 800174e:	4a24      	ldr	r2, [pc, #144]	; (80017e0 <InitRCC+0xc8>)
 8001750:	685b      	ldr	r3, [r3, #4]
 8001752:	6053      	str	r3, [r2, #4]

	RCC->CFGR &= ~RCC_CFGR_PLLMULL;	                        //CLEAR REGISTERS
 8001754:	4b22      	ldr	r3, [pc, #136]	; (80017e0 <InitRCC+0xc8>)
 8001756:	685b      	ldr	r3, [r3, #4]
 8001758:	4a21      	ldr	r2, [pc, #132]	; (80017e0 <InitRCC+0xc8>)
 800175a:	f423 1370 	bic.w	r3, r3, #3932160	; 0x3c0000
 800175e:	6053      	str	r3, [r2, #4]
	RCC->CFGR &= ~RCC_CFGR_PLLSRC;                          //CLEAR REGISTERS
 8001760:	4b1f      	ldr	r3, [pc, #124]	; (80017e0 <InitRCC+0xc8>)
 8001762:	685b      	ldr	r3, [r3, #4]
 8001764:	4a1e      	ldr	r2, [pc, #120]	; (80017e0 <InitRCC+0xc8>)
 8001766:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800176a:	6053      	str	r3, [r2, #4]
	RCC->CFGR &= ~RCC_CFGR_PLLXTPRE;                        //CLEAR REGISTERS
 800176c:	4b1c      	ldr	r3, [pc, #112]	; (80017e0 <InitRCC+0xc8>)
 800176e:	685b      	ldr	r3, [r3, #4]
 8001770:	4a1b      	ldr	r2, [pc, #108]	; (80017e0 <InitRCC+0xc8>)
 8001772:	f423 3300 	bic.w	r3, r3, #131072	; 0x20000
 8001776:	6053      	str	r3, [r2, #4]

	RCC->CFGR |= RCC_CFGR_PLLSRC;							//Clock from PREDIV1 selected as PLL input clock
 8001778:	4b19      	ldr	r3, [pc, #100]	; (80017e0 <InitRCC+0xc8>)
 800177a:	685b      	ldr	r3, [r3, #4]
 800177c:	4a18      	ldr	r2, [pc, #96]	; (80017e0 <InitRCC+0xc8>)
 800177e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001782:	6053      	str	r3, [r2, #4]
	RCC->CFGR |= RCC_CFGR_PLLXTPRE_HSE ;						//Config predivision
 8001784:	4b16      	ldr	r3, [pc, #88]	; (80017e0 <InitRCC+0xc8>)
 8001786:	4a16      	ldr	r2, [pc, #88]	; (80017e0 <InitRCC+0xc8>)
 8001788:	685b      	ldr	r3, [r3, #4]
 800178a:	6053      	str	r3, [r2, #4]
	RCC->CFGR |= RCC_CFGR_PLLMULL9;							//PLLx9. 8 MHz * 9 = 72 MHz
 800178c:	4b14      	ldr	r3, [pc, #80]	; (80017e0 <InitRCC+0xc8>)
 800178e:	685b      	ldr	r3, [r3, #4]
 8001790:	4a13      	ldr	r2, [pc, #76]	; (80017e0 <InitRCC+0xc8>)
 8001792:	f443 13e0 	orr.w	r3, r3, #1835008	; 0x1c0000
 8001796:	6053      	str	r3, [r2, #4]

	RCC->CR |= RCC_CR_PLLON;								//PLL enable
 8001798:	4b11      	ldr	r3, [pc, #68]	; (80017e0 <InitRCC+0xc8>)
 800179a:	681b      	ldr	r3, [r3, #0]
 800179c:	4a10      	ldr	r2, [pc, #64]	; (80017e0 <InitRCC+0xc8>)
 800179e:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80017a2:	6013      	str	r3, [r2, #0]
	while((RCC->CR & RCC_CR_PLLRDY) == 0) {}				//we are waiting for PLL enable
 80017a4:	bf00      	nop
 80017a6:	4b0e      	ldr	r3, [pc, #56]	; (80017e0 <InitRCC+0xc8>)
 80017a8:	681b      	ldr	r3, [r3, #0]
 80017aa:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80017ae:	2b00      	cmp	r3, #0
 80017b0:	d0f9      	beq.n	80017a6 <InitRCC+0x8e>

	RCC->CFGR &= ~RCC_CFGR_SW;								//CLEAR_BIT SW bits
 80017b2:	4b0b      	ldr	r3, [pc, #44]	; (80017e0 <InitRCC+0xc8>)
 80017b4:	685b      	ldr	r3, [r3, #4]
 80017b6:	4a0a      	ldr	r2, [pc, #40]	; (80017e0 <InitRCC+0xc8>)
 80017b8:	f023 0303 	bic.w	r3, r3, #3
 80017bc:	6053      	str	r3, [r2, #4]
	RCC->CFGR |= RCC_CFGR_SW_PLL;							//select source SYSCLK = PLL
 80017be:	4b08      	ldr	r3, [pc, #32]	; (80017e0 <InitRCC+0xc8>)
 80017c0:	685b      	ldr	r3, [r3, #4]
 80017c2:	4a07      	ldr	r2, [pc, #28]	; (80017e0 <InitRCC+0xc8>)
 80017c4:	f043 0302 	orr.w	r3, r3, #2
 80017c8:	6053      	str	r3, [r2, #4]
	while((RCC->CFGR & RCC_CFGR_SWS) != RCC_CFGR_SWS_1) {}	//wait till PLL is used
 80017ca:	bf00      	nop
 80017cc:	4b04      	ldr	r3, [pc, #16]	; (80017e0 <InitRCC+0xc8>)
 80017ce:	685b      	ldr	r3, [r3, #4]
 80017d0:	f003 030c 	and.w	r3, r3, #12
 80017d4:	2b08      	cmp	r3, #8
 80017d6:	d1f9      	bne.n	80017cc <InitRCC+0xb4>

}
 80017d8:	bf00      	nop
 80017da:	46bd      	mov	sp, r7
 80017dc:	bc80      	pop	{r7}
 80017de:	4770      	bx	lr
 80017e0:	40021000 	.word	0x40021000
 80017e4:	40022000 	.word	0x40022000

080017e8 <InitGPIO>:

void InitGPIO(void)
{
 80017e8:	b480      	push	{r7}
 80017ea:	af00      	add	r7, sp, #0
		RCC->APB2ENR |= RCC_APB2ENR_IOPCEN;						//enable clock for PORT C
 80017ec:	4b0a      	ldr	r3, [pc, #40]	; (8001818 <InitGPIO+0x30>)
 80017ee:	699b      	ldr	r3, [r3, #24]
 80017f0:	4a09      	ldr	r2, [pc, #36]	; (8001818 <InitGPIO+0x30>)
 80017f2:	f043 0310 	orr.w	r3, r3, #16
 80017f6:	6193      	str	r3, [r2, #24]

		GPIOC->CRH &= ~GPIO_CRH_CNF13;
 80017f8:	4b08      	ldr	r3, [pc, #32]	; (800181c <InitGPIO+0x34>)
 80017fa:	685b      	ldr	r3, [r3, #4]
 80017fc:	4a07      	ldr	r2, [pc, #28]	; (800181c <InitGPIO+0x34>)
 80017fe:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 8001802:	6053      	str	r3, [r2, #4]
		GPIOC->CRH |=  GPIO_CRH_MODE13;
 8001804:	4b05      	ldr	r3, [pc, #20]	; (800181c <InitGPIO+0x34>)
 8001806:	685b      	ldr	r3, [r3, #4]
 8001808:	4a04      	ldr	r2, [pc, #16]	; (800181c <InitGPIO+0x34>)
 800180a:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 800180e:	6053      	str	r3, [r2, #4]
}
 8001810:	bf00      	nop
 8001812:	46bd      	mov	sp, r7
 8001814:	bc80      	pop	{r7}
 8001816:	4770      	bx	lr
 8001818:	40021000 	.word	0x40021000
 800181c:	40011000 	.word	0x40011000

08001820 <__NVIC_EnableIRQ>:
{
 8001820:	b480      	push	{r7}
 8001822:	b083      	sub	sp, #12
 8001824:	af00      	add	r7, sp, #0
 8001826:	4603      	mov	r3, r0
 8001828:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800182a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800182e:	2b00      	cmp	r3, #0
 8001830:	db0b      	blt.n	800184a <__NVIC_EnableIRQ+0x2a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001832:	79fb      	ldrb	r3, [r7, #7]
 8001834:	f003 021f 	and.w	r2, r3, #31
 8001838:	4906      	ldr	r1, [pc, #24]	; (8001854 <__NVIC_EnableIRQ+0x34>)
 800183a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800183e:	095b      	lsrs	r3, r3, #5
 8001840:	2001      	movs	r0, #1
 8001842:	fa00 f202 	lsl.w	r2, r0, r2
 8001846:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 800184a:	bf00      	nop
 800184c:	370c      	adds	r7, #12
 800184e:	46bd      	mov	sp, r7
 8001850:	bc80      	pop	{r7}
 8001852:	4770      	bx	lr
 8001854:	e000e100 	.word	0xe000e100

08001858 <InitUSART_1>:
/*******************************END Variables******************************/
/*========================================================================*/
/********************************Functions*********************************/

void InitUSART_1(void)
{
 8001858:	b580      	push	{r7, lr}
 800185a:	af00      	add	r7, sp, #0

		RCC->APB2ENR |= RCC_APB2ENR_USART1EN;					// Clock UART is enable
 800185c:	4b26      	ldr	r3, [pc, #152]	; (80018f8 <InitUSART_1+0xa0>)
 800185e:	699b      	ldr	r3, [r3, #24]
 8001860:	4a25      	ldr	r2, [pc, #148]	; (80018f8 <InitUSART_1+0xa0>)
 8001862:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8001866:	6193      	str	r3, [r2, #24]
		RCC->APB2ENR |= RCC_APB2ENR_IOPAEN;						// Clock port A is enable
 8001868:	4b23      	ldr	r3, [pc, #140]	; (80018f8 <InitUSART_1+0xa0>)
 800186a:	699b      	ldr	r3, [r3, #24]
 800186c:	4a22      	ldr	r2, [pc, #136]	; (80018f8 <InitUSART_1+0xa0>)
 800186e:	f043 0304 	orr.w	r3, r3, #4
 8001872:	6193      	str	r3, [r2, #24]
		RCC->APB2ENR |= RCC_APB2ENR_AFIOEN;						// Alternative funct clock is enable
 8001874:	4b20      	ldr	r3, [pc, #128]	; (80018f8 <InitUSART_1+0xa0>)
 8001876:	699b      	ldr	r3, [r3, #24]
 8001878:	4a1f      	ldr	r2, [pc, #124]	; (80018f8 <InitUSART_1+0xa0>)
 800187a:	f043 0301 	orr.w	r3, r3, #1
 800187e:	6193      	str	r3, [r2, #24]

		/*Setting PIN9 PORTA - TX*/
		GPIOA->CRH &= ~GPIO_CRH_CNF9;							// Clear bits
 8001880:	4b1e      	ldr	r3, [pc, #120]	; (80018fc <InitUSART_1+0xa4>)
 8001882:	685b      	ldr	r3, [r3, #4]
 8001884:	4a1d      	ldr	r2, [pc, #116]	; (80018fc <InitUSART_1+0xa4>)
 8001886:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 800188a:	6053      	str	r3, [r2, #4]
		GPIOA->CRH &= ~GPIO_CRH_MODE9;						// Clear bits
 800188c:	4b1b      	ldr	r3, [pc, #108]	; (80018fc <InitUSART_1+0xa4>)
 800188e:	685b      	ldr	r3, [r3, #4]
 8001890:	4a1a      	ldr	r2, [pc, #104]	; (80018fc <InitUSART_1+0xa4>)
 8001892:	f023 0330 	bic.w	r3, r3, #48	; 0x30
 8001896:	6053      	str	r3, [r2, #4]
		GPIOA->CRH |= GPIO_CRH_MODE9_0 							// Output mode, 10 MHz.
 8001898:	4b18      	ldr	r3, [pc, #96]	; (80018fc <InitUSART_1+0xa4>)
 800189a:	685b      	ldr	r3, [r3, #4]
 800189c:	4a17      	ldr	r2, [pc, #92]	; (80018fc <InitUSART_1+0xa4>)
 800189e:	f043 0390 	orr.w	r3, r3, #144	; 0x90
 80018a2:	6053      	str	r3, [r2, #4]
				   |  GPIO_CRH_CNF9_1;							// Setting AF Push-Pull output (TX)

		/*Setting PIN10 PORTA - RX*/
		GPIOA->CRH &= ~GPIO_CRH_CNF10;							// Clear bits
 80018a4:	4b15      	ldr	r3, [pc, #84]	; (80018fc <InitUSART_1+0xa4>)
 80018a6:	685b      	ldr	r3, [r3, #4]
 80018a8:	4a14      	ldr	r2, [pc, #80]	; (80018fc <InitUSART_1+0xa4>)
 80018aa:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
 80018ae:	6053      	str	r3, [r2, #4]
		GPIOA->CRH &= ~GPIO_CRH_MODE10;						// Clear bits also use mode Input
 80018b0:	4b12      	ldr	r3, [pc, #72]	; (80018fc <InitUSART_1+0xa4>)
 80018b2:	685b      	ldr	r3, [r3, #4]
 80018b4:	4a11      	ldr	r2, [pc, #68]	; (80018fc <InitUSART_1+0xa4>)
 80018b6:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80018ba:	6053      	str	r3, [r2, #4]
		GPIOA->CRH |=  GPIO_CRH_CNF10_1;						// Setting Push-Up input (RX)
 80018bc:	4b0f      	ldr	r3, [pc, #60]	; (80018fc <InitUSART_1+0xa4>)
 80018be:	685b      	ldr	r3, [r3, #4]
 80018c0:	4a0e      	ldr	r2, [pc, #56]	; (80018fc <InitUSART_1+0xa4>)
 80018c2:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 80018c6:	6053      	str	r3, [r2, #4]
		GPIOA->BSRR |= GPIO_ODR_ODR10;
 80018c8:	4b0c      	ldr	r3, [pc, #48]	; (80018fc <InitUSART_1+0xa4>)
 80018ca:	691b      	ldr	r3, [r3, #16]
 80018cc:	4a0b      	ldr	r2, [pc, #44]	; (80018fc <InitUSART_1+0xa4>)
 80018ce:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80018d2:	6113      	str	r3, [r2, #16]

		USART1->BRR = 0x1D4D;									//Speed is 9600 baud
 80018d4:	4b0a      	ldr	r3, [pc, #40]	; (8001900 <InitUSART_1+0xa8>)
 80018d6:	f641 524d 	movw	r2, #7501	; 0x1d4d
 80018da:	609a      	str	r2, [r3, #8]

		USART1->CR1 |= USART_CR1_TE 							// Transmitter enable
 80018dc:	4b08      	ldr	r3, [pc, #32]	; (8001900 <InitUSART_1+0xa8>)
 80018de:	68db      	ldr	r3, [r3, #12]
 80018e0:	4a07      	ldr	r2, [pc, #28]	; (8001900 <InitUSART_1+0xa8>)
 80018e2:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80018e6:	f043 032c 	orr.w	r3, r3, #44	; 0x2c
 80018ea:	60d3      	str	r3, [r2, #12]
					|  USART_CR1_RE 							// Receiver enable
					|  USART_CR1_UE 							// USART1 enable
					|  USART_CR1_RXNEIE;						// Interrupt for receive enable

		NVIC_EnableIRQ(USART1_IRQn);							// Enable a device specific interrupt in the NVIC interrupt controller.
 80018ec:	2025      	movs	r0, #37	; 0x25
 80018ee:	f7ff ff97 	bl	8001820 <__NVIC_EnableIRQ>

}
 80018f2:	bf00      	nop
 80018f4:	bd80      	pop	{r7, pc}
 80018f6:	bf00      	nop
 80018f8:	40021000 	.word	0x40021000
 80018fc:	40010800 	.word	0x40010800
 8001900:	40013800 	.word	0x40013800

08001904 <TransmitUSART_1>:

void TransmitUSART_1(char chr)
{
 8001904:	b480      	push	{r7}
 8001906:	b083      	sub	sp, #12
 8001908:	af00      	add	r7, sp, #0
 800190a:	4603      	mov	r3, r0
 800190c:	71fb      	strb	r3, [r7, #7]

	while (!(USART1->SR & USART_SR_TC));						// Wait for transmission copleting
 800190e:	bf00      	nop
 8001910:	4b06      	ldr	r3, [pc, #24]	; (800192c <TransmitUSART_1+0x28>)
 8001912:	681b      	ldr	r3, [r3, #0]
 8001914:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8001918:	2b00      	cmp	r3, #0
 800191a:	d0f9      	beq.n	8001910 <TransmitUSART_1+0xc>
	USART1->DR = chr;											// Transfer data to DR (data registr)
 800191c:	4a03      	ldr	r2, [pc, #12]	; (800192c <TransmitUSART_1+0x28>)
 800191e:	79fb      	ldrb	r3, [r7, #7]
 8001920:	6053      	str	r3, [r2, #4]

}
 8001922:	bf00      	nop
 8001924:	370c      	adds	r7, #12
 8001926:	46bd      	mov	sp, r7
 8001928:	bc80      	pop	{r7}
 800192a:	4770      	bx	lr
 800192c:	40013800 	.word	0x40013800

08001930 <SendStringUSART_1>:

void SendStringUSART_1(char* str)
{
 8001930:	b580      	push	{r7, lr}
 8001932:	b084      	sub	sp, #16
 8001934:	af00      	add	r7, sp, #0
 8001936:	6078      	str	r0, [r7, #4]
	uint8_t i = 0;
 8001938:	2300      	movs	r3, #0
 800193a:	73fb      	strb	r3, [r7, #15]

	while(str[i])
 800193c:	e009      	b.n	8001952 <SendStringUSART_1+0x22>
		TransmitUSART_1(str[i++]);
 800193e:	7bfb      	ldrb	r3, [r7, #15]
 8001940:	1c5a      	adds	r2, r3, #1
 8001942:	73fa      	strb	r2, [r7, #15]
 8001944:	461a      	mov	r2, r3
 8001946:	687b      	ldr	r3, [r7, #4]
 8001948:	4413      	add	r3, r2
 800194a:	781b      	ldrb	r3, [r3, #0]
 800194c:	4618      	mov	r0, r3
 800194e:	f7ff ffd9 	bl	8001904 <TransmitUSART_1>
	while(str[i])
 8001952:	7bfb      	ldrb	r3, [r7, #15]
 8001954:	687a      	ldr	r2, [r7, #4]
 8001956:	4413      	add	r3, r2
 8001958:	781b      	ldrb	r3, [r3, #0]
 800195a:	2b00      	cmp	r3, #0
 800195c:	d1ef      	bne.n	800193e <SendStringUSART_1+0xe>
}
 800195e:	bf00      	nop
 8001960:	3710      	adds	r7, #16
 8001962:	46bd      	mov	sp, r7
 8001964:	bd80      	pop	{r7, pc}
	...

08001968 <Reset_Handler>:
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:

/* Copy the data segment initializers from flash to SRAM */
  movs r1, #0
 8001968:	2100      	movs	r1, #0
  b LoopCopyDataInit
 800196a:	e003      	b.n	8001974 <LoopCopyDataInit>

0800196c <CopyDataInit>:

CopyDataInit:
  ldr r3, =_sidata
 800196c:	4b0b      	ldr	r3, [pc, #44]	; (800199c <LoopFillZerobss+0x14>)
  ldr r3, [r3, r1]
 800196e:	585b      	ldr	r3, [r3, r1]
  str r3, [r0, r1]
 8001970:	5043      	str	r3, [r0, r1]
  adds r1, r1, #4
 8001972:	3104      	adds	r1, #4

08001974 <LoopCopyDataInit>:

LoopCopyDataInit:
  ldr r0, =_sdata
 8001974:	480a      	ldr	r0, [pc, #40]	; (80019a0 <LoopFillZerobss+0x18>)
  ldr r3, =_edata
 8001976:	4b0b      	ldr	r3, [pc, #44]	; (80019a4 <LoopFillZerobss+0x1c>)
  adds r2, r0, r1
 8001978:	1842      	adds	r2, r0, r1
  cmp r2, r3
 800197a:	429a      	cmp	r2, r3
  bcc CopyDataInit
 800197c:	d3f6      	bcc.n	800196c <CopyDataInit>
  ldr r2, =_sbss
 800197e:	4a0a      	ldr	r2, [pc, #40]	; (80019a8 <LoopFillZerobss+0x20>)
  b LoopFillZerobss
 8001980:	e002      	b.n	8001988 <LoopFillZerobss>

08001982 <FillZerobss>:
/* Zero fill the bss segment. */
FillZerobss:
  movs r3, #0
 8001982:	2300      	movs	r3, #0
  str r3, [r2], #4
 8001984:	f842 3b04 	str.w	r3, [r2], #4

08001988 <LoopFillZerobss>:

LoopFillZerobss:
  ldr r3, = _ebss
 8001988:	4b08      	ldr	r3, [pc, #32]	; (80019ac <LoopFillZerobss+0x24>)
  cmp r2, r3
 800198a:	429a      	cmp	r2, r3
  bcc FillZerobss
 800198c:	d3f9      	bcc.n	8001982 <FillZerobss>

/* Call the clock system intitialization function.*/
    bl  SystemInit
 800198e:	f7ff fb49 	bl	8001024 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8001992:	f000 f80f 	bl	80019b4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8001996:	f7ff fc63 	bl	8001260 <main>
  bx lr
 800199a:	4770      	bx	lr
  ldr r3, =_sidata
 800199c:	08003d58 	.word	0x08003d58
  ldr r0, =_sdata
 80019a0:	20000000 	.word	0x20000000
  ldr r3, =_edata
 80019a4:	200001d8 	.word	0x200001d8
  ldr r2, =_sbss
 80019a8:	200001d8 	.word	0x200001d8
  ldr r3, = _ebss
 80019ac:	20000230 	.word	0x20000230

080019b0 <ADC1_2_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80019b0:	e7fe      	b.n	80019b0 <ADC1_2_IRQHandler>
	...

080019b4 <__libc_init_array>:
 80019b4:	b570      	push	{r4, r5, r6, lr}
 80019b6:	2500      	movs	r5, #0
 80019b8:	4e0c      	ldr	r6, [pc, #48]	; (80019ec <__libc_init_array+0x38>)
 80019ba:	4c0d      	ldr	r4, [pc, #52]	; (80019f0 <__libc_init_array+0x3c>)
 80019bc:	1ba4      	subs	r4, r4, r6
 80019be:	10a4      	asrs	r4, r4, #2
 80019c0:	42a5      	cmp	r5, r4
 80019c2:	d109      	bne.n	80019d8 <__libc_init_array+0x24>
 80019c4:	f002 f86c 	bl	8003aa0 <_init>
 80019c8:	2500      	movs	r5, #0
 80019ca:	4e0a      	ldr	r6, [pc, #40]	; (80019f4 <__libc_init_array+0x40>)
 80019cc:	4c0a      	ldr	r4, [pc, #40]	; (80019f8 <__libc_init_array+0x44>)
 80019ce:	1ba4      	subs	r4, r4, r6
 80019d0:	10a4      	asrs	r4, r4, #2
 80019d2:	42a5      	cmp	r5, r4
 80019d4:	d105      	bne.n	80019e2 <__libc_init_array+0x2e>
 80019d6:	bd70      	pop	{r4, r5, r6, pc}
 80019d8:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80019dc:	4798      	blx	r3
 80019de:	3501      	adds	r5, #1
 80019e0:	e7ee      	b.n	80019c0 <__libc_init_array+0xc>
 80019e2:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80019e6:	4798      	blx	r3
 80019e8:	3501      	adds	r5, #1
 80019ea:	e7f2      	b.n	80019d2 <__libc_init_array+0x1e>
 80019ec:	08003d50 	.word	0x08003d50
 80019f0:	08003d50 	.word	0x08003d50
 80019f4:	08003d50 	.word	0x08003d50
 80019f8:	08003d54 	.word	0x08003d54

080019fc <memset>:
 80019fc:	4603      	mov	r3, r0
 80019fe:	4402      	add	r2, r0
 8001a00:	4293      	cmp	r3, r2
 8001a02:	d100      	bne.n	8001a06 <memset+0xa>
 8001a04:	4770      	bx	lr
 8001a06:	f803 1b01 	strb.w	r1, [r3], #1
 8001a0a:	e7f9      	b.n	8001a00 <memset+0x4>

08001a0c <__cvt>:
 8001a0c:	2b00      	cmp	r3, #0
 8001a0e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001a12:	461e      	mov	r6, r3
 8001a14:	bfbb      	ittet	lt
 8001a16:	f103 4300 	addlt.w	r3, r3, #2147483648	; 0x80000000
 8001a1a:	461e      	movlt	r6, r3
 8001a1c:	2300      	movge	r3, #0
 8001a1e:	232d      	movlt	r3, #45	; 0x2d
 8001a20:	b088      	sub	sp, #32
 8001a22:	9f14      	ldr	r7, [sp, #80]	; 0x50
 8001a24:	e9dd 1a12 	ldrd	r1, sl, [sp, #72]	; 0x48
 8001a28:	f027 0720 	bic.w	r7, r7, #32
 8001a2c:	2f46      	cmp	r7, #70	; 0x46
 8001a2e:	4614      	mov	r4, r2
 8001a30:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8001a32:	700b      	strb	r3, [r1, #0]
 8001a34:	d004      	beq.n	8001a40 <__cvt+0x34>
 8001a36:	2f45      	cmp	r7, #69	; 0x45
 8001a38:	d100      	bne.n	8001a3c <__cvt+0x30>
 8001a3a:	3501      	adds	r5, #1
 8001a3c:	2302      	movs	r3, #2
 8001a3e:	e000      	b.n	8001a42 <__cvt+0x36>
 8001a40:	2303      	movs	r3, #3
 8001a42:	aa07      	add	r2, sp, #28
 8001a44:	9204      	str	r2, [sp, #16]
 8001a46:	aa06      	add	r2, sp, #24
 8001a48:	e9cd a202 	strd	sl, r2, [sp, #8]
 8001a4c:	e9cd 3500 	strd	r3, r5, [sp]
 8001a50:	4622      	mov	r2, r4
 8001a52:	4633      	mov	r3, r6
 8001a54:	f000 fcd8 	bl	8002408 <_dtoa_r>
 8001a58:	2f47      	cmp	r7, #71	; 0x47
 8001a5a:	4680      	mov	r8, r0
 8001a5c:	d102      	bne.n	8001a64 <__cvt+0x58>
 8001a5e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8001a60:	07db      	lsls	r3, r3, #31
 8001a62:	d526      	bpl.n	8001ab2 <__cvt+0xa6>
 8001a64:	2f46      	cmp	r7, #70	; 0x46
 8001a66:	eb08 0905 	add.w	r9, r8, r5
 8001a6a:	d111      	bne.n	8001a90 <__cvt+0x84>
 8001a6c:	f898 3000 	ldrb.w	r3, [r8]
 8001a70:	2b30      	cmp	r3, #48	; 0x30
 8001a72:	d10a      	bne.n	8001a8a <__cvt+0x7e>
 8001a74:	2200      	movs	r2, #0
 8001a76:	2300      	movs	r3, #0
 8001a78:	4620      	mov	r0, r4
 8001a7a:	4631      	mov	r1, r6
 8001a7c:	f7fe ff94 	bl	80009a8 <__aeabi_dcmpeq>
 8001a80:	b918      	cbnz	r0, 8001a8a <__cvt+0x7e>
 8001a82:	f1c5 0501 	rsb	r5, r5, #1
 8001a86:	f8ca 5000 	str.w	r5, [sl]
 8001a8a:	f8da 3000 	ldr.w	r3, [sl]
 8001a8e:	4499      	add	r9, r3
 8001a90:	2200      	movs	r2, #0
 8001a92:	2300      	movs	r3, #0
 8001a94:	4620      	mov	r0, r4
 8001a96:	4631      	mov	r1, r6
 8001a98:	f7fe ff86 	bl	80009a8 <__aeabi_dcmpeq>
 8001a9c:	b938      	cbnz	r0, 8001aae <__cvt+0xa2>
 8001a9e:	2230      	movs	r2, #48	; 0x30
 8001aa0:	9b07      	ldr	r3, [sp, #28]
 8001aa2:	454b      	cmp	r3, r9
 8001aa4:	d205      	bcs.n	8001ab2 <__cvt+0xa6>
 8001aa6:	1c59      	adds	r1, r3, #1
 8001aa8:	9107      	str	r1, [sp, #28]
 8001aaa:	701a      	strb	r2, [r3, #0]
 8001aac:	e7f8      	b.n	8001aa0 <__cvt+0x94>
 8001aae:	f8cd 901c 	str.w	r9, [sp, #28]
 8001ab2:	4640      	mov	r0, r8
 8001ab4:	9b07      	ldr	r3, [sp, #28]
 8001ab6:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8001ab8:	eba3 0308 	sub.w	r3, r3, r8
 8001abc:	6013      	str	r3, [r2, #0]
 8001abe:	b008      	add	sp, #32
 8001ac0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08001ac4 <__exponent>:
 8001ac4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001ac6:	2900      	cmp	r1, #0
 8001ac8:	bfb4      	ite	lt
 8001aca:	232d      	movlt	r3, #45	; 0x2d
 8001acc:	232b      	movge	r3, #43	; 0x2b
 8001ace:	4604      	mov	r4, r0
 8001ad0:	bfb8      	it	lt
 8001ad2:	4249      	neglt	r1, r1
 8001ad4:	2909      	cmp	r1, #9
 8001ad6:	f804 2b02 	strb.w	r2, [r4], #2
 8001ada:	7043      	strb	r3, [r0, #1]
 8001adc:	dd21      	ble.n	8001b22 <__exponent+0x5e>
 8001ade:	f10d 0307 	add.w	r3, sp, #7
 8001ae2:	461f      	mov	r7, r3
 8001ae4:	260a      	movs	r6, #10
 8001ae6:	fb91 f5f6 	sdiv	r5, r1, r6
 8001aea:	fb06 1115 	mls	r1, r6, r5, r1
 8001aee:	2d09      	cmp	r5, #9
 8001af0:	f101 0130 	add.w	r1, r1, #48	; 0x30
 8001af4:	f803 1c01 	strb.w	r1, [r3, #-1]
 8001af8:	f103 32ff 	add.w	r2, r3, #4294967295
 8001afc:	4629      	mov	r1, r5
 8001afe:	dc09      	bgt.n	8001b14 <__exponent+0x50>
 8001b00:	3130      	adds	r1, #48	; 0x30
 8001b02:	3b02      	subs	r3, #2
 8001b04:	f802 1c01 	strb.w	r1, [r2, #-1]
 8001b08:	42bb      	cmp	r3, r7
 8001b0a:	4622      	mov	r2, r4
 8001b0c:	d304      	bcc.n	8001b18 <__exponent+0x54>
 8001b0e:	1a10      	subs	r0, r2, r0
 8001b10:	b003      	add	sp, #12
 8001b12:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001b14:	4613      	mov	r3, r2
 8001b16:	e7e6      	b.n	8001ae6 <__exponent+0x22>
 8001b18:	f813 2b01 	ldrb.w	r2, [r3], #1
 8001b1c:	f804 2b01 	strb.w	r2, [r4], #1
 8001b20:	e7f2      	b.n	8001b08 <__exponent+0x44>
 8001b22:	2330      	movs	r3, #48	; 0x30
 8001b24:	4419      	add	r1, r3
 8001b26:	7083      	strb	r3, [r0, #2]
 8001b28:	1d02      	adds	r2, r0, #4
 8001b2a:	70c1      	strb	r1, [r0, #3]
 8001b2c:	e7ef      	b.n	8001b0e <__exponent+0x4a>
	...

08001b30 <_printf_float>:
 8001b30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001b34:	b091      	sub	sp, #68	; 0x44
 8001b36:	460c      	mov	r4, r1
 8001b38:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 8001b3a:	4693      	mov	fp, r2
 8001b3c:	461e      	mov	r6, r3
 8001b3e:	4605      	mov	r5, r0
 8001b40:	f001 fa16 	bl	8002f70 <_localeconv_r>
 8001b44:	6803      	ldr	r3, [r0, #0]
 8001b46:	4618      	mov	r0, r3
 8001b48:	9309      	str	r3, [sp, #36]	; 0x24
 8001b4a:	f7fe fb01 	bl	8000150 <strlen>
 8001b4e:	2300      	movs	r3, #0
 8001b50:	930e      	str	r3, [sp, #56]	; 0x38
 8001b52:	683b      	ldr	r3, [r7, #0]
 8001b54:	900a      	str	r0, [sp, #40]	; 0x28
 8001b56:	3307      	adds	r3, #7
 8001b58:	f023 0307 	bic.w	r3, r3, #7
 8001b5c:	f103 0208 	add.w	r2, r3, #8
 8001b60:	f894 8018 	ldrb.w	r8, [r4, #24]
 8001b64:	f8d4 a000 	ldr.w	sl, [r4]
 8001b68:	603a      	str	r2, [r7, #0]
 8001b6a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001b6e:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 8001b72:	e9d4 7912 	ldrd	r7, r9, [r4, #72]	; 0x48
 8001b76:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8001b7a:	930b      	str	r3, [sp, #44]	; 0x2c
 8001b7c:	f04f 32ff 	mov.w	r2, #4294967295
 8001b80:	4ba6      	ldr	r3, [pc, #664]	; (8001e1c <_printf_float+0x2ec>)
 8001b82:	4638      	mov	r0, r7
 8001b84:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8001b86:	f7fe ff41 	bl	8000a0c <__aeabi_dcmpun>
 8001b8a:	bb68      	cbnz	r0, 8001be8 <_printf_float+0xb8>
 8001b8c:	f04f 32ff 	mov.w	r2, #4294967295
 8001b90:	4ba2      	ldr	r3, [pc, #648]	; (8001e1c <_printf_float+0x2ec>)
 8001b92:	4638      	mov	r0, r7
 8001b94:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8001b96:	f7fe ff1b 	bl	80009d0 <__aeabi_dcmple>
 8001b9a:	bb28      	cbnz	r0, 8001be8 <_printf_float+0xb8>
 8001b9c:	2200      	movs	r2, #0
 8001b9e:	2300      	movs	r3, #0
 8001ba0:	4638      	mov	r0, r7
 8001ba2:	4649      	mov	r1, r9
 8001ba4:	f7fe ff0a 	bl	80009bc <__aeabi_dcmplt>
 8001ba8:	b110      	cbz	r0, 8001bb0 <_printf_float+0x80>
 8001baa:	232d      	movs	r3, #45	; 0x2d
 8001bac:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001bb0:	4f9b      	ldr	r7, [pc, #620]	; (8001e20 <_printf_float+0x2f0>)
 8001bb2:	4b9c      	ldr	r3, [pc, #624]	; (8001e24 <_printf_float+0x2f4>)
 8001bb4:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 8001bb8:	bf98      	it	ls
 8001bba:	461f      	movls	r7, r3
 8001bbc:	2303      	movs	r3, #3
 8001bbe:	f04f 0900 	mov.w	r9, #0
 8001bc2:	6123      	str	r3, [r4, #16]
 8001bc4:	f02a 0304 	bic.w	r3, sl, #4
 8001bc8:	6023      	str	r3, [r4, #0]
 8001bca:	9600      	str	r6, [sp, #0]
 8001bcc:	465b      	mov	r3, fp
 8001bce:	aa0f      	add	r2, sp, #60	; 0x3c
 8001bd0:	4621      	mov	r1, r4
 8001bd2:	4628      	mov	r0, r5
 8001bd4:	f000 f9e2 	bl	8001f9c <_printf_common>
 8001bd8:	3001      	adds	r0, #1
 8001bda:	f040 8090 	bne.w	8001cfe <_printf_float+0x1ce>
 8001bde:	f04f 30ff 	mov.w	r0, #4294967295
 8001be2:	b011      	add	sp, #68	; 0x44
 8001be4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001be8:	463a      	mov	r2, r7
 8001bea:	464b      	mov	r3, r9
 8001bec:	4638      	mov	r0, r7
 8001bee:	4649      	mov	r1, r9
 8001bf0:	f7fe ff0c 	bl	8000a0c <__aeabi_dcmpun>
 8001bf4:	b110      	cbz	r0, 8001bfc <_printf_float+0xcc>
 8001bf6:	4f8c      	ldr	r7, [pc, #560]	; (8001e28 <_printf_float+0x2f8>)
 8001bf8:	4b8c      	ldr	r3, [pc, #560]	; (8001e2c <_printf_float+0x2fc>)
 8001bfa:	e7db      	b.n	8001bb4 <_printf_float+0x84>
 8001bfc:	6863      	ldr	r3, [r4, #4]
 8001bfe:	f44a 6280 	orr.w	r2, sl, #1024	; 0x400
 8001c02:	1c59      	adds	r1, r3, #1
 8001c04:	a80d      	add	r0, sp, #52	; 0x34
 8001c06:	a90e      	add	r1, sp, #56	; 0x38
 8001c08:	d140      	bne.n	8001c8c <_printf_float+0x15c>
 8001c0a:	2306      	movs	r3, #6
 8001c0c:	6063      	str	r3, [r4, #4]
 8001c0e:	f04f 0c00 	mov.w	ip, #0
 8001c12:	f10d 0333 	add.w	r3, sp, #51	; 0x33
 8001c16:	e9cd 2301 	strd	r2, r3, [sp, #4]
 8001c1a:	6863      	ldr	r3, [r4, #4]
 8001c1c:	6022      	str	r2, [r4, #0]
 8001c1e:	e9cd 0803 	strd	r0, r8, [sp, #12]
 8001c22:	9300      	str	r3, [sp, #0]
 8001c24:	463a      	mov	r2, r7
 8001c26:	464b      	mov	r3, r9
 8001c28:	e9cd 1c05 	strd	r1, ip, [sp, #20]
 8001c2c:	4628      	mov	r0, r5
 8001c2e:	f7ff feed 	bl	8001a0c <__cvt>
 8001c32:	f008 03df 	and.w	r3, r8, #223	; 0xdf
 8001c36:	2b47      	cmp	r3, #71	; 0x47
 8001c38:	4607      	mov	r7, r0
 8001c3a:	d109      	bne.n	8001c50 <_printf_float+0x120>
 8001c3c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8001c3e:	1cd8      	adds	r0, r3, #3
 8001c40:	db02      	blt.n	8001c48 <_printf_float+0x118>
 8001c42:	6862      	ldr	r2, [r4, #4]
 8001c44:	4293      	cmp	r3, r2
 8001c46:	dd47      	ble.n	8001cd8 <_printf_float+0x1a8>
 8001c48:	f1a8 0802 	sub.w	r8, r8, #2
 8001c4c:	fa5f f888 	uxtb.w	r8, r8
 8001c50:	f1b8 0f65 	cmp.w	r8, #101	; 0x65
 8001c54:	990d      	ldr	r1, [sp, #52]	; 0x34
 8001c56:	d824      	bhi.n	8001ca2 <_printf_float+0x172>
 8001c58:	3901      	subs	r1, #1
 8001c5a:	4642      	mov	r2, r8
 8001c5c:	f104 0050 	add.w	r0, r4, #80	; 0x50
 8001c60:	910d      	str	r1, [sp, #52]	; 0x34
 8001c62:	f7ff ff2f 	bl	8001ac4 <__exponent>
 8001c66:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8001c68:	4681      	mov	r9, r0
 8001c6a:	1813      	adds	r3, r2, r0
 8001c6c:	2a01      	cmp	r2, #1
 8001c6e:	6123      	str	r3, [r4, #16]
 8001c70:	dc02      	bgt.n	8001c78 <_printf_float+0x148>
 8001c72:	6822      	ldr	r2, [r4, #0]
 8001c74:	07d1      	lsls	r1, r2, #31
 8001c76:	d501      	bpl.n	8001c7c <_printf_float+0x14c>
 8001c78:	3301      	adds	r3, #1
 8001c7a:	6123      	str	r3, [r4, #16]
 8001c7c:	f89d 3033 	ldrb.w	r3, [sp, #51]	; 0x33
 8001c80:	2b00      	cmp	r3, #0
 8001c82:	d0a2      	beq.n	8001bca <_printf_float+0x9a>
 8001c84:	232d      	movs	r3, #45	; 0x2d
 8001c86:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001c8a:	e79e      	b.n	8001bca <_printf_float+0x9a>
 8001c8c:	f1b8 0f67 	cmp.w	r8, #103	; 0x67
 8001c90:	f000 816e 	beq.w	8001f70 <_printf_float+0x440>
 8001c94:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 8001c98:	d1b9      	bne.n	8001c0e <_printf_float+0xde>
 8001c9a:	2b00      	cmp	r3, #0
 8001c9c:	d1b7      	bne.n	8001c0e <_printf_float+0xde>
 8001c9e:	2301      	movs	r3, #1
 8001ca0:	e7b4      	b.n	8001c0c <_printf_float+0xdc>
 8001ca2:	f1b8 0f66 	cmp.w	r8, #102	; 0x66
 8001ca6:	d119      	bne.n	8001cdc <_printf_float+0x1ac>
 8001ca8:	2900      	cmp	r1, #0
 8001caa:	6863      	ldr	r3, [r4, #4]
 8001cac:	dd0c      	ble.n	8001cc8 <_printf_float+0x198>
 8001cae:	6121      	str	r1, [r4, #16]
 8001cb0:	b913      	cbnz	r3, 8001cb8 <_printf_float+0x188>
 8001cb2:	6822      	ldr	r2, [r4, #0]
 8001cb4:	07d2      	lsls	r2, r2, #31
 8001cb6:	d502      	bpl.n	8001cbe <_printf_float+0x18e>
 8001cb8:	3301      	adds	r3, #1
 8001cba:	440b      	add	r3, r1
 8001cbc:	6123      	str	r3, [r4, #16]
 8001cbe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8001cc0:	f04f 0900 	mov.w	r9, #0
 8001cc4:	65a3      	str	r3, [r4, #88]	; 0x58
 8001cc6:	e7d9      	b.n	8001c7c <_printf_float+0x14c>
 8001cc8:	b913      	cbnz	r3, 8001cd0 <_printf_float+0x1a0>
 8001cca:	6822      	ldr	r2, [r4, #0]
 8001ccc:	07d0      	lsls	r0, r2, #31
 8001cce:	d501      	bpl.n	8001cd4 <_printf_float+0x1a4>
 8001cd0:	3302      	adds	r3, #2
 8001cd2:	e7f3      	b.n	8001cbc <_printf_float+0x18c>
 8001cd4:	2301      	movs	r3, #1
 8001cd6:	e7f1      	b.n	8001cbc <_printf_float+0x18c>
 8001cd8:	f04f 0867 	mov.w	r8, #103	; 0x67
 8001cdc:	e9dd 320d 	ldrd	r3, r2, [sp, #52]	; 0x34
 8001ce0:	4293      	cmp	r3, r2
 8001ce2:	db05      	blt.n	8001cf0 <_printf_float+0x1c0>
 8001ce4:	6822      	ldr	r2, [r4, #0]
 8001ce6:	6123      	str	r3, [r4, #16]
 8001ce8:	07d1      	lsls	r1, r2, #31
 8001cea:	d5e8      	bpl.n	8001cbe <_printf_float+0x18e>
 8001cec:	3301      	adds	r3, #1
 8001cee:	e7e5      	b.n	8001cbc <_printf_float+0x18c>
 8001cf0:	2b00      	cmp	r3, #0
 8001cf2:	bfcc      	ite	gt
 8001cf4:	2301      	movgt	r3, #1
 8001cf6:	f1c3 0302 	rsble	r3, r3, #2
 8001cfa:	4413      	add	r3, r2
 8001cfc:	e7de      	b.n	8001cbc <_printf_float+0x18c>
 8001cfe:	6823      	ldr	r3, [r4, #0]
 8001d00:	055a      	lsls	r2, r3, #21
 8001d02:	d407      	bmi.n	8001d14 <_printf_float+0x1e4>
 8001d04:	6923      	ldr	r3, [r4, #16]
 8001d06:	463a      	mov	r2, r7
 8001d08:	4659      	mov	r1, fp
 8001d0a:	4628      	mov	r0, r5
 8001d0c:	47b0      	blx	r6
 8001d0e:	3001      	adds	r0, #1
 8001d10:	d129      	bne.n	8001d66 <_printf_float+0x236>
 8001d12:	e764      	b.n	8001bde <_printf_float+0xae>
 8001d14:	f1b8 0f65 	cmp.w	r8, #101	; 0x65
 8001d18:	f240 80d7 	bls.w	8001eca <_printf_float+0x39a>
 8001d1c:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8001d20:	2200      	movs	r2, #0
 8001d22:	2300      	movs	r3, #0
 8001d24:	f7fe fe40 	bl	80009a8 <__aeabi_dcmpeq>
 8001d28:	b388      	cbz	r0, 8001d8e <_printf_float+0x25e>
 8001d2a:	2301      	movs	r3, #1
 8001d2c:	4a40      	ldr	r2, [pc, #256]	; (8001e30 <_printf_float+0x300>)
 8001d2e:	4659      	mov	r1, fp
 8001d30:	4628      	mov	r0, r5
 8001d32:	47b0      	blx	r6
 8001d34:	3001      	adds	r0, #1
 8001d36:	f43f af52 	beq.w	8001bde <_printf_float+0xae>
 8001d3a:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 8001d3e:	429a      	cmp	r2, r3
 8001d40:	db02      	blt.n	8001d48 <_printf_float+0x218>
 8001d42:	6823      	ldr	r3, [r4, #0]
 8001d44:	07d8      	lsls	r0, r3, #31
 8001d46:	d50e      	bpl.n	8001d66 <_printf_float+0x236>
 8001d48:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8001d4c:	4659      	mov	r1, fp
 8001d4e:	4628      	mov	r0, r5
 8001d50:	47b0      	blx	r6
 8001d52:	3001      	adds	r0, #1
 8001d54:	f43f af43 	beq.w	8001bde <_printf_float+0xae>
 8001d58:	2700      	movs	r7, #0
 8001d5a:	f104 081a 	add.w	r8, r4, #26
 8001d5e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8001d60:	3b01      	subs	r3, #1
 8001d62:	42bb      	cmp	r3, r7
 8001d64:	dc09      	bgt.n	8001d7a <_printf_float+0x24a>
 8001d66:	6823      	ldr	r3, [r4, #0]
 8001d68:	079f      	lsls	r7, r3, #30
 8001d6a:	f100 80fd 	bmi.w	8001f68 <_printf_float+0x438>
 8001d6e:	68e0      	ldr	r0, [r4, #12]
 8001d70:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8001d72:	4298      	cmp	r0, r3
 8001d74:	bfb8      	it	lt
 8001d76:	4618      	movlt	r0, r3
 8001d78:	e733      	b.n	8001be2 <_printf_float+0xb2>
 8001d7a:	2301      	movs	r3, #1
 8001d7c:	4642      	mov	r2, r8
 8001d7e:	4659      	mov	r1, fp
 8001d80:	4628      	mov	r0, r5
 8001d82:	47b0      	blx	r6
 8001d84:	3001      	adds	r0, #1
 8001d86:	f43f af2a 	beq.w	8001bde <_printf_float+0xae>
 8001d8a:	3701      	adds	r7, #1
 8001d8c:	e7e7      	b.n	8001d5e <_printf_float+0x22e>
 8001d8e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8001d90:	2b00      	cmp	r3, #0
 8001d92:	dc2b      	bgt.n	8001dec <_printf_float+0x2bc>
 8001d94:	2301      	movs	r3, #1
 8001d96:	4a26      	ldr	r2, [pc, #152]	; (8001e30 <_printf_float+0x300>)
 8001d98:	4659      	mov	r1, fp
 8001d9a:	4628      	mov	r0, r5
 8001d9c:	47b0      	blx	r6
 8001d9e:	3001      	adds	r0, #1
 8001da0:	f43f af1d 	beq.w	8001bde <_printf_float+0xae>
 8001da4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8001da6:	b923      	cbnz	r3, 8001db2 <_printf_float+0x282>
 8001da8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8001daa:	b913      	cbnz	r3, 8001db2 <_printf_float+0x282>
 8001dac:	6823      	ldr	r3, [r4, #0]
 8001dae:	07d9      	lsls	r1, r3, #31
 8001db0:	d5d9      	bpl.n	8001d66 <_printf_float+0x236>
 8001db2:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8001db6:	4659      	mov	r1, fp
 8001db8:	4628      	mov	r0, r5
 8001dba:	47b0      	blx	r6
 8001dbc:	3001      	adds	r0, #1
 8001dbe:	f43f af0e 	beq.w	8001bde <_printf_float+0xae>
 8001dc2:	f04f 0800 	mov.w	r8, #0
 8001dc6:	f104 091a 	add.w	r9, r4, #26
 8001dca:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8001dcc:	425b      	negs	r3, r3
 8001dce:	4543      	cmp	r3, r8
 8001dd0:	dc01      	bgt.n	8001dd6 <_printf_float+0x2a6>
 8001dd2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8001dd4:	e797      	b.n	8001d06 <_printf_float+0x1d6>
 8001dd6:	2301      	movs	r3, #1
 8001dd8:	464a      	mov	r2, r9
 8001dda:	4659      	mov	r1, fp
 8001ddc:	4628      	mov	r0, r5
 8001dde:	47b0      	blx	r6
 8001de0:	3001      	adds	r0, #1
 8001de2:	f43f aefc 	beq.w	8001bde <_printf_float+0xae>
 8001de6:	f108 0801 	add.w	r8, r8, #1
 8001dea:	e7ee      	b.n	8001dca <_printf_float+0x29a>
 8001dec:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8001dee:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8001df0:	429a      	cmp	r2, r3
 8001df2:	bfa8      	it	ge
 8001df4:	461a      	movge	r2, r3
 8001df6:	2a00      	cmp	r2, #0
 8001df8:	4690      	mov	r8, r2
 8001dfa:	dd07      	ble.n	8001e0c <_printf_float+0x2dc>
 8001dfc:	4613      	mov	r3, r2
 8001dfe:	4659      	mov	r1, fp
 8001e00:	463a      	mov	r2, r7
 8001e02:	4628      	mov	r0, r5
 8001e04:	47b0      	blx	r6
 8001e06:	3001      	adds	r0, #1
 8001e08:	f43f aee9 	beq.w	8001bde <_printf_float+0xae>
 8001e0c:	f104 031a 	add.w	r3, r4, #26
 8001e10:	f04f 0a00 	mov.w	sl, #0
 8001e14:	ea28 78e8 	bic.w	r8, r8, r8, asr #31
 8001e18:	930b      	str	r3, [sp, #44]	; 0x2c
 8001e1a:	e015      	b.n	8001e48 <_printf_float+0x318>
 8001e1c:	7fefffff 	.word	0x7fefffff
 8001e20:	08003afa 	.word	0x08003afa
 8001e24:	08003af6 	.word	0x08003af6
 8001e28:	08003b02 	.word	0x08003b02
 8001e2c:	08003afe 	.word	0x08003afe
 8001e30:	08003b06 	.word	0x08003b06
 8001e34:	2301      	movs	r3, #1
 8001e36:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8001e38:	4659      	mov	r1, fp
 8001e3a:	4628      	mov	r0, r5
 8001e3c:	47b0      	blx	r6
 8001e3e:	3001      	adds	r0, #1
 8001e40:	f43f aecd 	beq.w	8001bde <_printf_float+0xae>
 8001e44:	f10a 0a01 	add.w	sl, sl, #1
 8001e48:	f8d4 9058 	ldr.w	r9, [r4, #88]	; 0x58
 8001e4c:	eba9 0308 	sub.w	r3, r9, r8
 8001e50:	4553      	cmp	r3, sl
 8001e52:	dcef      	bgt.n	8001e34 <_printf_float+0x304>
 8001e54:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 8001e58:	429a      	cmp	r2, r3
 8001e5a:	444f      	add	r7, r9
 8001e5c:	db14      	blt.n	8001e88 <_printf_float+0x358>
 8001e5e:	6823      	ldr	r3, [r4, #0]
 8001e60:	07da      	lsls	r2, r3, #31
 8001e62:	d411      	bmi.n	8001e88 <_printf_float+0x358>
 8001e64:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8001e66:	990d      	ldr	r1, [sp, #52]	; 0x34
 8001e68:	eba3 0209 	sub.w	r2, r3, r9
 8001e6c:	eba3 0901 	sub.w	r9, r3, r1
 8001e70:	4591      	cmp	r9, r2
 8001e72:	bfa8      	it	ge
 8001e74:	4691      	movge	r9, r2
 8001e76:	f1b9 0f00 	cmp.w	r9, #0
 8001e7a:	dc0d      	bgt.n	8001e98 <_printf_float+0x368>
 8001e7c:	2700      	movs	r7, #0
 8001e7e:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8001e82:	f104 081a 	add.w	r8, r4, #26
 8001e86:	e018      	b.n	8001eba <_printf_float+0x38a>
 8001e88:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8001e8c:	4659      	mov	r1, fp
 8001e8e:	4628      	mov	r0, r5
 8001e90:	47b0      	blx	r6
 8001e92:	3001      	adds	r0, #1
 8001e94:	d1e6      	bne.n	8001e64 <_printf_float+0x334>
 8001e96:	e6a2      	b.n	8001bde <_printf_float+0xae>
 8001e98:	464b      	mov	r3, r9
 8001e9a:	463a      	mov	r2, r7
 8001e9c:	4659      	mov	r1, fp
 8001e9e:	4628      	mov	r0, r5
 8001ea0:	47b0      	blx	r6
 8001ea2:	3001      	adds	r0, #1
 8001ea4:	d1ea      	bne.n	8001e7c <_printf_float+0x34c>
 8001ea6:	e69a      	b.n	8001bde <_printf_float+0xae>
 8001ea8:	2301      	movs	r3, #1
 8001eaa:	4642      	mov	r2, r8
 8001eac:	4659      	mov	r1, fp
 8001eae:	4628      	mov	r0, r5
 8001eb0:	47b0      	blx	r6
 8001eb2:	3001      	adds	r0, #1
 8001eb4:	f43f ae93 	beq.w	8001bde <_printf_float+0xae>
 8001eb8:	3701      	adds	r7, #1
 8001eba:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 8001ebe:	1a9b      	subs	r3, r3, r2
 8001ec0:	eba3 0309 	sub.w	r3, r3, r9
 8001ec4:	42bb      	cmp	r3, r7
 8001ec6:	dcef      	bgt.n	8001ea8 <_printf_float+0x378>
 8001ec8:	e74d      	b.n	8001d66 <_printf_float+0x236>
 8001eca:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8001ecc:	2a01      	cmp	r2, #1
 8001ece:	dc01      	bgt.n	8001ed4 <_printf_float+0x3a4>
 8001ed0:	07db      	lsls	r3, r3, #31
 8001ed2:	d538      	bpl.n	8001f46 <_printf_float+0x416>
 8001ed4:	2301      	movs	r3, #1
 8001ed6:	463a      	mov	r2, r7
 8001ed8:	4659      	mov	r1, fp
 8001eda:	4628      	mov	r0, r5
 8001edc:	47b0      	blx	r6
 8001ede:	3001      	adds	r0, #1
 8001ee0:	f43f ae7d 	beq.w	8001bde <_printf_float+0xae>
 8001ee4:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8001ee8:	4659      	mov	r1, fp
 8001eea:	4628      	mov	r0, r5
 8001eec:	47b0      	blx	r6
 8001eee:	3001      	adds	r0, #1
 8001ef0:	f107 0701 	add.w	r7, r7, #1
 8001ef4:	f43f ae73 	beq.w	8001bde <_printf_float+0xae>
 8001ef8:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8001efc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8001efe:	2200      	movs	r2, #0
 8001f00:	f103 38ff 	add.w	r8, r3, #4294967295
 8001f04:	2300      	movs	r3, #0
 8001f06:	f7fe fd4f 	bl	80009a8 <__aeabi_dcmpeq>
 8001f0a:	b9c0      	cbnz	r0, 8001f3e <_printf_float+0x40e>
 8001f0c:	4643      	mov	r3, r8
 8001f0e:	463a      	mov	r2, r7
 8001f10:	4659      	mov	r1, fp
 8001f12:	4628      	mov	r0, r5
 8001f14:	47b0      	blx	r6
 8001f16:	3001      	adds	r0, #1
 8001f18:	d10d      	bne.n	8001f36 <_printf_float+0x406>
 8001f1a:	e660      	b.n	8001bde <_printf_float+0xae>
 8001f1c:	2301      	movs	r3, #1
 8001f1e:	4642      	mov	r2, r8
 8001f20:	4659      	mov	r1, fp
 8001f22:	4628      	mov	r0, r5
 8001f24:	47b0      	blx	r6
 8001f26:	3001      	adds	r0, #1
 8001f28:	f43f ae59 	beq.w	8001bde <_printf_float+0xae>
 8001f2c:	3701      	adds	r7, #1
 8001f2e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8001f30:	3b01      	subs	r3, #1
 8001f32:	42bb      	cmp	r3, r7
 8001f34:	dcf2      	bgt.n	8001f1c <_printf_float+0x3ec>
 8001f36:	464b      	mov	r3, r9
 8001f38:	f104 0250 	add.w	r2, r4, #80	; 0x50
 8001f3c:	e6e4      	b.n	8001d08 <_printf_float+0x1d8>
 8001f3e:	2700      	movs	r7, #0
 8001f40:	f104 081a 	add.w	r8, r4, #26
 8001f44:	e7f3      	b.n	8001f2e <_printf_float+0x3fe>
 8001f46:	2301      	movs	r3, #1
 8001f48:	e7e1      	b.n	8001f0e <_printf_float+0x3de>
 8001f4a:	2301      	movs	r3, #1
 8001f4c:	4642      	mov	r2, r8
 8001f4e:	4659      	mov	r1, fp
 8001f50:	4628      	mov	r0, r5
 8001f52:	47b0      	blx	r6
 8001f54:	3001      	adds	r0, #1
 8001f56:	f43f ae42 	beq.w	8001bde <_printf_float+0xae>
 8001f5a:	3701      	adds	r7, #1
 8001f5c:	68e3      	ldr	r3, [r4, #12]
 8001f5e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8001f60:	1a9b      	subs	r3, r3, r2
 8001f62:	42bb      	cmp	r3, r7
 8001f64:	dcf1      	bgt.n	8001f4a <_printf_float+0x41a>
 8001f66:	e702      	b.n	8001d6e <_printf_float+0x23e>
 8001f68:	2700      	movs	r7, #0
 8001f6a:	f104 0819 	add.w	r8, r4, #25
 8001f6e:	e7f5      	b.n	8001f5c <_printf_float+0x42c>
 8001f70:	2b00      	cmp	r3, #0
 8001f72:	f43f ae94 	beq.w	8001c9e <_printf_float+0x16e>
 8001f76:	f04f 0c00 	mov.w	ip, #0
 8001f7a:	e9cd 1c05 	strd	r1, ip, [sp, #20]
 8001f7e:	f10d 0133 	add.w	r1, sp, #51	; 0x33
 8001f82:	6022      	str	r2, [r4, #0]
 8001f84:	e9cd 0803 	strd	r0, r8, [sp, #12]
 8001f88:	e9cd 2101 	strd	r2, r1, [sp, #4]
 8001f8c:	9300      	str	r3, [sp, #0]
 8001f8e:	463a      	mov	r2, r7
 8001f90:	464b      	mov	r3, r9
 8001f92:	4628      	mov	r0, r5
 8001f94:	f7ff fd3a 	bl	8001a0c <__cvt>
 8001f98:	4607      	mov	r7, r0
 8001f9a:	e64f      	b.n	8001c3c <_printf_float+0x10c>

08001f9c <_printf_common>:
 8001f9c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001fa0:	4691      	mov	r9, r2
 8001fa2:	461f      	mov	r7, r3
 8001fa4:	688a      	ldr	r2, [r1, #8]
 8001fa6:	690b      	ldr	r3, [r1, #16]
 8001fa8:	4606      	mov	r6, r0
 8001faa:	4293      	cmp	r3, r2
 8001fac:	bfb8      	it	lt
 8001fae:	4613      	movlt	r3, r2
 8001fb0:	f8c9 3000 	str.w	r3, [r9]
 8001fb4:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8001fb8:	460c      	mov	r4, r1
 8001fba:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8001fbe:	b112      	cbz	r2, 8001fc6 <_printf_common+0x2a>
 8001fc0:	3301      	adds	r3, #1
 8001fc2:	f8c9 3000 	str.w	r3, [r9]
 8001fc6:	6823      	ldr	r3, [r4, #0]
 8001fc8:	0699      	lsls	r1, r3, #26
 8001fca:	bf42      	ittt	mi
 8001fcc:	f8d9 3000 	ldrmi.w	r3, [r9]
 8001fd0:	3302      	addmi	r3, #2
 8001fd2:	f8c9 3000 	strmi.w	r3, [r9]
 8001fd6:	6825      	ldr	r5, [r4, #0]
 8001fd8:	f015 0506 	ands.w	r5, r5, #6
 8001fdc:	d107      	bne.n	8001fee <_printf_common+0x52>
 8001fde:	f104 0a19 	add.w	sl, r4, #25
 8001fe2:	68e3      	ldr	r3, [r4, #12]
 8001fe4:	f8d9 2000 	ldr.w	r2, [r9]
 8001fe8:	1a9b      	subs	r3, r3, r2
 8001fea:	42ab      	cmp	r3, r5
 8001fec:	dc29      	bgt.n	8002042 <_printf_common+0xa6>
 8001fee:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 8001ff2:	6822      	ldr	r2, [r4, #0]
 8001ff4:	3300      	adds	r3, #0
 8001ff6:	bf18      	it	ne
 8001ff8:	2301      	movne	r3, #1
 8001ffa:	0692      	lsls	r2, r2, #26
 8001ffc:	d42e      	bmi.n	800205c <_printf_common+0xc0>
 8001ffe:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8002002:	4639      	mov	r1, r7
 8002004:	4630      	mov	r0, r6
 8002006:	47c0      	blx	r8
 8002008:	3001      	adds	r0, #1
 800200a:	d021      	beq.n	8002050 <_printf_common+0xb4>
 800200c:	6823      	ldr	r3, [r4, #0]
 800200e:	68e5      	ldr	r5, [r4, #12]
 8002010:	f003 0306 	and.w	r3, r3, #6
 8002014:	2b04      	cmp	r3, #4
 8002016:	bf18      	it	ne
 8002018:	2500      	movne	r5, #0
 800201a:	f8d9 2000 	ldr.w	r2, [r9]
 800201e:	f04f 0900 	mov.w	r9, #0
 8002022:	bf08      	it	eq
 8002024:	1aad      	subeq	r5, r5, r2
 8002026:	68a3      	ldr	r3, [r4, #8]
 8002028:	6922      	ldr	r2, [r4, #16]
 800202a:	bf08      	it	eq
 800202c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8002030:	4293      	cmp	r3, r2
 8002032:	bfc4      	itt	gt
 8002034:	1a9b      	subgt	r3, r3, r2
 8002036:	18ed      	addgt	r5, r5, r3
 8002038:	341a      	adds	r4, #26
 800203a:	454d      	cmp	r5, r9
 800203c:	d11a      	bne.n	8002074 <_printf_common+0xd8>
 800203e:	2000      	movs	r0, #0
 8002040:	e008      	b.n	8002054 <_printf_common+0xb8>
 8002042:	2301      	movs	r3, #1
 8002044:	4652      	mov	r2, sl
 8002046:	4639      	mov	r1, r7
 8002048:	4630      	mov	r0, r6
 800204a:	47c0      	blx	r8
 800204c:	3001      	adds	r0, #1
 800204e:	d103      	bne.n	8002058 <_printf_common+0xbc>
 8002050:	f04f 30ff 	mov.w	r0, #4294967295
 8002054:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002058:	3501      	adds	r5, #1
 800205a:	e7c2      	b.n	8001fe2 <_printf_common+0x46>
 800205c:	2030      	movs	r0, #48	; 0x30
 800205e:	18e1      	adds	r1, r4, r3
 8002060:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8002064:	1c5a      	adds	r2, r3, #1
 8002066:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 800206a:	4422      	add	r2, r4
 800206c:	3302      	adds	r3, #2
 800206e:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8002072:	e7c4      	b.n	8001ffe <_printf_common+0x62>
 8002074:	2301      	movs	r3, #1
 8002076:	4622      	mov	r2, r4
 8002078:	4639      	mov	r1, r7
 800207a:	4630      	mov	r0, r6
 800207c:	47c0      	blx	r8
 800207e:	3001      	adds	r0, #1
 8002080:	d0e6      	beq.n	8002050 <_printf_common+0xb4>
 8002082:	f109 0901 	add.w	r9, r9, #1
 8002086:	e7d8      	b.n	800203a <_printf_common+0x9e>

08002088 <_printf_i>:
 8002088:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800208c:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 8002090:	460c      	mov	r4, r1
 8002092:	7e09      	ldrb	r1, [r1, #24]
 8002094:	b085      	sub	sp, #20
 8002096:	296e      	cmp	r1, #110	; 0x6e
 8002098:	4617      	mov	r7, r2
 800209a:	4606      	mov	r6, r0
 800209c:	4698      	mov	r8, r3
 800209e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80020a0:	f000 80b3 	beq.w	800220a <_printf_i+0x182>
 80020a4:	d822      	bhi.n	80020ec <_printf_i+0x64>
 80020a6:	2963      	cmp	r1, #99	; 0x63
 80020a8:	d036      	beq.n	8002118 <_printf_i+0x90>
 80020aa:	d80a      	bhi.n	80020c2 <_printf_i+0x3a>
 80020ac:	2900      	cmp	r1, #0
 80020ae:	f000 80b9 	beq.w	8002224 <_printf_i+0x19c>
 80020b2:	2958      	cmp	r1, #88	; 0x58
 80020b4:	f000 8083 	beq.w	80021be <_printf_i+0x136>
 80020b8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80020bc:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 80020c0:	e032      	b.n	8002128 <_printf_i+0xa0>
 80020c2:	2964      	cmp	r1, #100	; 0x64
 80020c4:	d001      	beq.n	80020ca <_printf_i+0x42>
 80020c6:	2969      	cmp	r1, #105	; 0x69
 80020c8:	d1f6      	bne.n	80020b8 <_printf_i+0x30>
 80020ca:	6820      	ldr	r0, [r4, #0]
 80020cc:	6813      	ldr	r3, [r2, #0]
 80020ce:	0605      	lsls	r5, r0, #24
 80020d0:	f103 0104 	add.w	r1, r3, #4
 80020d4:	d52a      	bpl.n	800212c <_printf_i+0xa4>
 80020d6:	681b      	ldr	r3, [r3, #0]
 80020d8:	6011      	str	r1, [r2, #0]
 80020da:	2b00      	cmp	r3, #0
 80020dc:	da03      	bge.n	80020e6 <_printf_i+0x5e>
 80020de:	222d      	movs	r2, #45	; 0x2d
 80020e0:	425b      	negs	r3, r3
 80020e2:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 80020e6:	486f      	ldr	r0, [pc, #444]	; (80022a4 <_printf_i+0x21c>)
 80020e8:	220a      	movs	r2, #10
 80020ea:	e039      	b.n	8002160 <_printf_i+0xd8>
 80020ec:	2973      	cmp	r1, #115	; 0x73
 80020ee:	f000 809d 	beq.w	800222c <_printf_i+0x1a4>
 80020f2:	d808      	bhi.n	8002106 <_printf_i+0x7e>
 80020f4:	296f      	cmp	r1, #111	; 0x6f
 80020f6:	d020      	beq.n	800213a <_printf_i+0xb2>
 80020f8:	2970      	cmp	r1, #112	; 0x70
 80020fa:	d1dd      	bne.n	80020b8 <_printf_i+0x30>
 80020fc:	6823      	ldr	r3, [r4, #0]
 80020fe:	f043 0320 	orr.w	r3, r3, #32
 8002102:	6023      	str	r3, [r4, #0]
 8002104:	e003      	b.n	800210e <_printf_i+0x86>
 8002106:	2975      	cmp	r1, #117	; 0x75
 8002108:	d017      	beq.n	800213a <_printf_i+0xb2>
 800210a:	2978      	cmp	r1, #120	; 0x78
 800210c:	d1d4      	bne.n	80020b8 <_printf_i+0x30>
 800210e:	2378      	movs	r3, #120	; 0x78
 8002110:	4865      	ldr	r0, [pc, #404]	; (80022a8 <_printf_i+0x220>)
 8002112:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8002116:	e055      	b.n	80021c4 <_printf_i+0x13c>
 8002118:	6813      	ldr	r3, [r2, #0]
 800211a:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800211e:	1d19      	adds	r1, r3, #4
 8002120:	681b      	ldr	r3, [r3, #0]
 8002122:	6011      	str	r1, [r2, #0]
 8002124:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8002128:	2301      	movs	r3, #1
 800212a:	e08c      	b.n	8002246 <_printf_i+0x1be>
 800212c:	681b      	ldr	r3, [r3, #0]
 800212e:	f010 0f40 	tst.w	r0, #64	; 0x40
 8002132:	6011      	str	r1, [r2, #0]
 8002134:	bf18      	it	ne
 8002136:	b21b      	sxthne	r3, r3
 8002138:	e7cf      	b.n	80020da <_printf_i+0x52>
 800213a:	6813      	ldr	r3, [r2, #0]
 800213c:	6825      	ldr	r5, [r4, #0]
 800213e:	1d18      	adds	r0, r3, #4
 8002140:	6010      	str	r0, [r2, #0]
 8002142:	0628      	lsls	r0, r5, #24
 8002144:	d501      	bpl.n	800214a <_printf_i+0xc2>
 8002146:	681b      	ldr	r3, [r3, #0]
 8002148:	e002      	b.n	8002150 <_printf_i+0xc8>
 800214a:	0668      	lsls	r0, r5, #25
 800214c:	d5fb      	bpl.n	8002146 <_printf_i+0xbe>
 800214e:	881b      	ldrh	r3, [r3, #0]
 8002150:	296f      	cmp	r1, #111	; 0x6f
 8002152:	bf14      	ite	ne
 8002154:	220a      	movne	r2, #10
 8002156:	2208      	moveq	r2, #8
 8002158:	4852      	ldr	r0, [pc, #328]	; (80022a4 <_printf_i+0x21c>)
 800215a:	2100      	movs	r1, #0
 800215c:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8002160:	6865      	ldr	r5, [r4, #4]
 8002162:	2d00      	cmp	r5, #0
 8002164:	60a5      	str	r5, [r4, #8]
 8002166:	f2c0 8095 	blt.w	8002294 <_printf_i+0x20c>
 800216a:	6821      	ldr	r1, [r4, #0]
 800216c:	f021 0104 	bic.w	r1, r1, #4
 8002170:	6021      	str	r1, [r4, #0]
 8002172:	2b00      	cmp	r3, #0
 8002174:	d13d      	bne.n	80021f2 <_printf_i+0x16a>
 8002176:	2d00      	cmp	r5, #0
 8002178:	f040 808e 	bne.w	8002298 <_printf_i+0x210>
 800217c:	4665      	mov	r5, ip
 800217e:	2a08      	cmp	r2, #8
 8002180:	d10b      	bne.n	800219a <_printf_i+0x112>
 8002182:	6823      	ldr	r3, [r4, #0]
 8002184:	07db      	lsls	r3, r3, #31
 8002186:	d508      	bpl.n	800219a <_printf_i+0x112>
 8002188:	6923      	ldr	r3, [r4, #16]
 800218a:	6862      	ldr	r2, [r4, #4]
 800218c:	429a      	cmp	r2, r3
 800218e:	bfde      	ittt	le
 8002190:	2330      	movle	r3, #48	; 0x30
 8002192:	f805 3c01 	strble.w	r3, [r5, #-1]
 8002196:	f105 35ff 	addle.w	r5, r5, #4294967295
 800219a:	ebac 0305 	sub.w	r3, ip, r5
 800219e:	6123      	str	r3, [r4, #16]
 80021a0:	f8cd 8000 	str.w	r8, [sp]
 80021a4:	463b      	mov	r3, r7
 80021a6:	aa03      	add	r2, sp, #12
 80021a8:	4621      	mov	r1, r4
 80021aa:	4630      	mov	r0, r6
 80021ac:	f7ff fef6 	bl	8001f9c <_printf_common>
 80021b0:	3001      	adds	r0, #1
 80021b2:	d14d      	bne.n	8002250 <_printf_i+0x1c8>
 80021b4:	f04f 30ff 	mov.w	r0, #4294967295
 80021b8:	b005      	add	sp, #20
 80021ba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80021be:	4839      	ldr	r0, [pc, #228]	; (80022a4 <_printf_i+0x21c>)
 80021c0:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 80021c4:	6813      	ldr	r3, [r2, #0]
 80021c6:	6821      	ldr	r1, [r4, #0]
 80021c8:	1d1d      	adds	r5, r3, #4
 80021ca:	681b      	ldr	r3, [r3, #0]
 80021cc:	6015      	str	r5, [r2, #0]
 80021ce:	060a      	lsls	r2, r1, #24
 80021d0:	d50b      	bpl.n	80021ea <_printf_i+0x162>
 80021d2:	07ca      	lsls	r2, r1, #31
 80021d4:	bf44      	itt	mi
 80021d6:	f041 0120 	orrmi.w	r1, r1, #32
 80021da:	6021      	strmi	r1, [r4, #0]
 80021dc:	b91b      	cbnz	r3, 80021e6 <_printf_i+0x15e>
 80021de:	6822      	ldr	r2, [r4, #0]
 80021e0:	f022 0220 	bic.w	r2, r2, #32
 80021e4:	6022      	str	r2, [r4, #0]
 80021e6:	2210      	movs	r2, #16
 80021e8:	e7b7      	b.n	800215a <_printf_i+0xd2>
 80021ea:	064d      	lsls	r5, r1, #25
 80021ec:	bf48      	it	mi
 80021ee:	b29b      	uxthmi	r3, r3
 80021f0:	e7ef      	b.n	80021d2 <_printf_i+0x14a>
 80021f2:	4665      	mov	r5, ip
 80021f4:	fbb3 f1f2 	udiv	r1, r3, r2
 80021f8:	fb02 3311 	mls	r3, r2, r1, r3
 80021fc:	5cc3      	ldrb	r3, [r0, r3]
 80021fe:	f805 3d01 	strb.w	r3, [r5, #-1]!
 8002202:	460b      	mov	r3, r1
 8002204:	2900      	cmp	r1, #0
 8002206:	d1f5      	bne.n	80021f4 <_printf_i+0x16c>
 8002208:	e7b9      	b.n	800217e <_printf_i+0xf6>
 800220a:	6813      	ldr	r3, [r2, #0]
 800220c:	6825      	ldr	r5, [r4, #0]
 800220e:	1d18      	adds	r0, r3, #4
 8002210:	6961      	ldr	r1, [r4, #20]
 8002212:	6010      	str	r0, [r2, #0]
 8002214:	0628      	lsls	r0, r5, #24
 8002216:	681b      	ldr	r3, [r3, #0]
 8002218:	d501      	bpl.n	800221e <_printf_i+0x196>
 800221a:	6019      	str	r1, [r3, #0]
 800221c:	e002      	b.n	8002224 <_printf_i+0x19c>
 800221e:	066a      	lsls	r2, r5, #25
 8002220:	d5fb      	bpl.n	800221a <_printf_i+0x192>
 8002222:	8019      	strh	r1, [r3, #0]
 8002224:	2300      	movs	r3, #0
 8002226:	4665      	mov	r5, ip
 8002228:	6123      	str	r3, [r4, #16]
 800222a:	e7b9      	b.n	80021a0 <_printf_i+0x118>
 800222c:	6813      	ldr	r3, [r2, #0]
 800222e:	1d19      	adds	r1, r3, #4
 8002230:	6011      	str	r1, [r2, #0]
 8002232:	681d      	ldr	r5, [r3, #0]
 8002234:	6862      	ldr	r2, [r4, #4]
 8002236:	2100      	movs	r1, #0
 8002238:	4628      	mov	r0, r5
 800223a:	f000 feaf 	bl	8002f9c <memchr>
 800223e:	b108      	cbz	r0, 8002244 <_printf_i+0x1bc>
 8002240:	1b40      	subs	r0, r0, r5
 8002242:	6060      	str	r0, [r4, #4]
 8002244:	6863      	ldr	r3, [r4, #4]
 8002246:	6123      	str	r3, [r4, #16]
 8002248:	2300      	movs	r3, #0
 800224a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800224e:	e7a7      	b.n	80021a0 <_printf_i+0x118>
 8002250:	6923      	ldr	r3, [r4, #16]
 8002252:	462a      	mov	r2, r5
 8002254:	4639      	mov	r1, r7
 8002256:	4630      	mov	r0, r6
 8002258:	47c0      	blx	r8
 800225a:	3001      	adds	r0, #1
 800225c:	d0aa      	beq.n	80021b4 <_printf_i+0x12c>
 800225e:	6823      	ldr	r3, [r4, #0]
 8002260:	079b      	lsls	r3, r3, #30
 8002262:	d413      	bmi.n	800228c <_printf_i+0x204>
 8002264:	68e0      	ldr	r0, [r4, #12]
 8002266:	9b03      	ldr	r3, [sp, #12]
 8002268:	4298      	cmp	r0, r3
 800226a:	bfb8      	it	lt
 800226c:	4618      	movlt	r0, r3
 800226e:	e7a3      	b.n	80021b8 <_printf_i+0x130>
 8002270:	2301      	movs	r3, #1
 8002272:	464a      	mov	r2, r9
 8002274:	4639      	mov	r1, r7
 8002276:	4630      	mov	r0, r6
 8002278:	47c0      	blx	r8
 800227a:	3001      	adds	r0, #1
 800227c:	d09a      	beq.n	80021b4 <_printf_i+0x12c>
 800227e:	3501      	adds	r5, #1
 8002280:	68e3      	ldr	r3, [r4, #12]
 8002282:	9a03      	ldr	r2, [sp, #12]
 8002284:	1a9b      	subs	r3, r3, r2
 8002286:	42ab      	cmp	r3, r5
 8002288:	dcf2      	bgt.n	8002270 <_printf_i+0x1e8>
 800228a:	e7eb      	b.n	8002264 <_printf_i+0x1dc>
 800228c:	2500      	movs	r5, #0
 800228e:	f104 0919 	add.w	r9, r4, #25
 8002292:	e7f5      	b.n	8002280 <_printf_i+0x1f8>
 8002294:	2b00      	cmp	r3, #0
 8002296:	d1ac      	bne.n	80021f2 <_printf_i+0x16a>
 8002298:	7803      	ldrb	r3, [r0, #0]
 800229a:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800229e:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80022a2:	e76c      	b.n	800217e <_printf_i+0xf6>
 80022a4:	08003b08 	.word	0x08003b08
 80022a8:	08003b19 	.word	0x08003b19

080022ac <siprintf>:
 80022ac:	b40e      	push	{r1, r2, r3}
 80022ae:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 80022b2:	b500      	push	{lr}
 80022b4:	b09c      	sub	sp, #112	; 0x70
 80022b6:	ab1d      	add	r3, sp, #116	; 0x74
 80022b8:	9002      	str	r0, [sp, #8]
 80022ba:	9006      	str	r0, [sp, #24]
 80022bc:	9107      	str	r1, [sp, #28]
 80022be:	9104      	str	r1, [sp, #16]
 80022c0:	4808      	ldr	r0, [pc, #32]	; (80022e4 <siprintf+0x38>)
 80022c2:	4909      	ldr	r1, [pc, #36]	; (80022e8 <siprintf+0x3c>)
 80022c4:	f853 2b04 	ldr.w	r2, [r3], #4
 80022c8:	9105      	str	r1, [sp, #20]
 80022ca:	6800      	ldr	r0, [r0, #0]
 80022cc:	a902      	add	r1, sp, #8
 80022ce:	9301      	str	r3, [sp, #4]
 80022d0:	f001 fa68 	bl	80037a4 <_svfiprintf_r>
 80022d4:	2200      	movs	r2, #0
 80022d6:	9b02      	ldr	r3, [sp, #8]
 80022d8:	701a      	strb	r2, [r3, #0]
 80022da:	b01c      	add	sp, #112	; 0x70
 80022dc:	f85d eb04 	ldr.w	lr, [sp], #4
 80022e0:	b003      	add	sp, #12
 80022e2:	4770      	bx	lr
 80022e4:	20000008 	.word	0x20000008
 80022e8:	ffff0208 	.word	0xffff0208

080022ec <quorem>:
 80022ec:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80022f0:	6903      	ldr	r3, [r0, #16]
 80022f2:	690c      	ldr	r4, [r1, #16]
 80022f4:	4680      	mov	r8, r0
 80022f6:	42a3      	cmp	r3, r4
 80022f8:	f2c0 8084 	blt.w	8002404 <quorem+0x118>
 80022fc:	3c01      	subs	r4, #1
 80022fe:	f101 0714 	add.w	r7, r1, #20
 8002302:	f100 0614 	add.w	r6, r0, #20
 8002306:	f857 5024 	ldr.w	r5, [r7, r4, lsl #2]
 800230a:	f856 0024 	ldr.w	r0, [r6, r4, lsl #2]
 800230e:	3501      	adds	r5, #1
 8002310:	fbb0 f5f5 	udiv	r5, r0, r5
 8002314:	ea4f 0c84 	mov.w	ip, r4, lsl #2
 8002318:	eb06 030c 	add.w	r3, r6, ip
 800231c:	eb07 090c 	add.w	r9, r7, ip
 8002320:	9301      	str	r3, [sp, #4]
 8002322:	b39d      	cbz	r5, 800238c <quorem+0xa0>
 8002324:	f04f 0a00 	mov.w	sl, #0
 8002328:	4638      	mov	r0, r7
 800232a:	46b6      	mov	lr, r6
 800232c:	46d3      	mov	fp, sl
 800232e:	f850 2b04 	ldr.w	r2, [r0], #4
 8002332:	b293      	uxth	r3, r2
 8002334:	fb05 a303 	mla	r3, r5, r3, sl
 8002338:	0c12      	lsrs	r2, r2, #16
 800233a:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 800233e:	fb05 a202 	mla	r2, r5, r2, sl
 8002342:	b29b      	uxth	r3, r3
 8002344:	ebab 0303 	sub.w	r3, fp, r3
 8002348:	f8de b000 	ldr.w	fp, [lr]
 800234c:	ea4f 4a12 	mov.w	sl, r2, lsr #16
 8002350:	fa1f fb8b 	uxth.w	fp, fp
 8002354:	445b      	add	r3, fp
 8002356:	fa1f fb82 	uxth.w	fp, r2
 800235a:	f8de 2000 	ldr.w	r2, [lr]
 800235e:	4581      	cmp	r9, r0
 8002360:	ebcb 4212 	rsb	r2, fp, r2, lsr #16
 8002364:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8002368:	b29b      	uxth	r3, r3
 800236a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800236e:	ea4f 4b22 	mov.w	fp, r2, asr #16
 8002372:	f84e 3b04 	str.w	r3, [lr], #4
 8002376:	d2da      	bcs.n	800232e <quorem+0x42>
 8002378:	f856 300c 	ldr.w	r3, [r6, ip]
 800237c:	b933      	cbnz	r3, 800238c <quorem+0xa0>
 800237e:	9b01      	ldr	r3, [sp, #4]
 8002380:	3b04      	subs	r3, #4
 8002382:	429e      	cmp	r6, r3
 8002384:	461a      	mov	r2, r3
 8002386:	d331      	bcc.n	80023ec <quorem+0x100>
 8002388:	f8c8 4010 	str.w	r4, [r8, #16]
 800238c:	4640      	mov	r0, r8
 800238e:	f001 f833 	bl	80033f8 <__mcmp>
 8002392:	2800      	cmp	r0, #0
 8002394:	db26      	blt.n	80023e4 <quorem+0xf8>
 8002396:	4630      	mov	r0, r6
 8002398:	f04f 0c00 	mov.w	ip, #0
 800239c:	3501      	adds	r5, #1
 800239e:	f857 1b04 	ldr.w	r1, [r7], #4
 80023a2:	f8d0 e000 	ldr.w	lr, [r0]
 80023a6:	b28b      	uxth	r3, r1
 80023a8:	ebac 0303 	sub.w	r3, ip, r3
 80023ac:	fa1f f28e 	uxth.w	r2, lr
 80023b0:	4413      	add	r3, r2
 80023b2:	0c0a      	lsrs	r2, r1, #16
 80023b4:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 80023b8:	eb02 4223 	add.w	r2, r2, r3, asr #16
 80023bc:	b29b      	uxth	r3, r3
 80023be:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80023c2:	45b9      	cmp	r9, r7
 80023c4:	ea4f 4c22 	mov.w	ip, r2, asr #16
 80023c8:	f840 3b04 	str.w	r3, [r0], #4
 80023cc:	d2e7      	bcs.n	800239e <quorem+0xb2>
 80023ce:	f856 2024 	ldr.w	r2, [r6, r4, lsl #2]
 80023d2:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 80023d6:	b92a      	cbnz	r2, 80023e4 <quorem+0xf8>
 80023d8:	3b04      	subs	r3, #4
 80023da:	429e      	cmp	r6, r3
 80023dc:	461a      	mov	r2, r3
 80023de:	d30b      	bcc.n	80023f8 <quorem+0x10c>
 80023e0:	f8c8 4010 	str.w	r4, [r8, #16]
 80023e4:	4628      	mov	r0, r5
 80023e6:	b003      	add	sp, #12
 80023e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80023ec:	6812      	ldr	r2, [r2, #0]
 80023ee:	3b04      	subs	r3, #4
 80023f0:	2a00      	cmp	r2, #0
 80023f2:	d1c9      	bne.n	8002388 <quorem+0x9c>
 80023f4:	3c01      	subs	r4, #1
 80023f6:	e7c4      	b.n	8002382 <quorem+0x96>
 80023f8:	6812      	ldr	r2, [r2, #0]
 80023fa:	3b04      	subs	r3, #4
 80023fc:	2a00      	cmp	r2, #0
 80023fe:	d1ef      	bne.n	80023e0 <quorem+0xf4>
 8002400:	3c01      	subs	r4, #1
 8002402:	e7ea      	b.n	80023da <quorem+0xee>
 8002404:	2000      	movs	r0, #0
 8002406:	e7ee      	b.n	80023e6 <quorem+0xfa>

08002408 <_dtoa_r>:
 8002408:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800240c:	4616      	mov	r6, r2
 800240e:	461f      	mov	r7, r3
 8002410:	6a45      	ldr	r5, [r0, #36]	; 0x24
 8002412:	b095      	sub	sp, #84	; 0x54
 8002414:	4604      	mov	r4, r0
 8002416:	f8dd 8084 	ldr.w	r8, [sp, #132]	; 0x84
 800241a:	e9cd 6702 	strd	r6, r7, [sp, #8]
 800241e:	b93d      	cbnz	r5, 8002430 <_dtoa_r+0x28>
 8002420:	2010      	movs	r0, #16
 8002422:	f000 fdb3 	bl	8002f8c <malloc>
 8002426:	6260      	str	r0, [r4, #36]	; 0x24
 8002428:	e9c0 5501 	strd	r5, r5, [r0, #4]
 800242c:	6005      	str	r5, [r0, #0]
 800242e:	60c5      	str	r5, [r0, #12]
 8002430:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002432:	6819      	ldr	r1, [r3, #0]
 8002434:	b151      	cbz	r1, 800244c <_dtoa_r+0x44>
 8002436:	685a      	ldr	r2, [r3, #4]
 8002438:	2301      	movs	r3, #1
 800243a:	4093      	lsls	r3, r2
 800243c:	604a      	str	r2, [r1, #4]
 800243e:	608b      	str	r3, [r1, #8]
 8002440:	4620      	mov	r0, r4
 8002442:	f000 fdf8 	bl	8003036 <_Bfree>
 8002446:	2200      	movs	r2, #0
 8002448:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800244a:	601a      	str	r2, [r3, #0]
 800244c:	1e3b      	subs	r3, r7, #0
 800244e:	bfaf      	iteee	ge
 8002450:	2300      	movge	r3, #0
 8002452:	2201      	movlt	r2, #1
 8002454:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 8002458:	9303      	strlt	r3, [sp, #12]
 800245a:	bfac      	ite	ge
 800245c:	f8c8 3000 	strge.w	r3, [r8]
 8002460:	f8c8 2000 	strlt.w	r2, [r8]
 8002464:	4bae      	ldr	r3, [pc, #696]	; (8002720 <_dtoa_r+0x318>)
 8002466:	f8dd 800c 	ldr.w	r8, [sp, #12]
 800246a:	ea33 0308 	bics.w	r3, r3, r8
 800246e:	d11b      	bne.n	80024a8 <_dtoa_r+0xa0>
 8002470:	f242 730f 	movw	r3, #9999	; 0x270f
 8002474:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8002476:	6013      	str	r3, [r2, #0]
 8002478:	9b02      	ldr	r3, [sp, #8]
 800247a:	b923      	cbnz	r3, 8002486 <_dtoa_r+0x7e>
 800247c:	f3c8 0013 	ubfx	r0, r8, #0, #20
 8002480:	2800      	cmp	r0, #0
 8002482:	f000 8545 	beq.w	8002f10 <_dtoa_r+0xb08>
 8002486:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8002488:	b953      	cbnz	r3, 80024a0 <_dtoa_r+0x98>
 800248a:	4ba6      	ldr	r3, [pc, #664]	; (8002724 <_dtoa_r+0x31c>)
 800248c:	e021      	b.n	80024d2 <_dtoa_r+0xca>
 800248e:	4ba6      	ldr	r3, [pc, #664]	; (8002728 <_dtoa_r+0x320>)
 8002490:	9306      	str	r3, [sp, #24]
 8002492:	3308      	adds	r3, #8
 8002494:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8002496:	6013      	str	r3, [r2, #0]
 8002498:	9806      	ldr	r0, [sp, #24]
 800249a:	b015      	add	sp, #84	; 0x54
 800249c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80024a0:	4ba0      	ldr	r3, [pc, #640]	; (8002724 <_dtoa_r+0x31c>)
 80024a2:	9306      	str	r3, [sp, #24]
 80024a4:	3303      	adds	r3, #3
 80024a6:	e7f5      	b.n	8002494 <_dtoa_r+0x8c>
 80024a8:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 80024ac:	2200      	movs	r2, #0
 80024ae:	2300      	movs	r3, #0
 80024b0:	4630      	mov	r0, r6
 80024b2:	4639      	mov	r1, r7
 80024b4:	f7fe fa78 	bl	80009a8 <__aeabi_dcmpeq>
 80024b8:	4682      	mov	sl, r0
 80024ba:	b160      	cbz	r0, 80024d6 <_dtoa_r+0xce>
 80024bc:	2301      	movs	r3, #1
 80024be:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80024c0:	6013      	str	r3, [r2, #0]
 80024c2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80024c4:	2b00      	cmp	r3, #0
 80024c6:	f000 8520 	beq.w	8002f0a <_dtoa_r+0xb02>
 80024ca:	4b98      	ldr	r3, [pc, #608]	; (800272c <_dtoa_r+0x324>)
 80024cc:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80024ce:	6013      	str	r3, [r2, #0]
 80024d0:	3b01      	subs	r3, #1
 80024d2:	9306      	str	r3, [sp, #24]
 80024d4:	e7e0      	b.n	8002498 <_dtoa_r+0x90>
 80024d6:	ab12      	add	r3, sp, #72	; 0x48
 80024d8:	9301      	str	r3, [sp, #4]
 80024da:	ab13      	add	r3, sp, #76	; 0x4c
 80024dc:	9300      	str	r3, [sp, #0]
 80024de:	4632      	mov	r2, r6
 80024e0:	463b      	mov	r3, r7
 80024e2:	4620      	mov	r0, r4
 80024e4:	f001 f800 	bl	80034e8 <__d2b>
 80024e8:	f3c8 550a 	ubfx	r5, r8, #20, #11
 80024ec:	4683      	mov	fp, r0
 80024ee:	2d00      	cmp	r5, #0
 80024f0:	d07d      	beq.n	80025ee <_dtoa_r+0x1e6>
 80024f2:	46b0      	mov	r8, r6
 80024f4:	f3c7 0313 	ubfx	r3, r7, #0, #20
 80024f8:	f043 597f 	orr.w	r9, r3, #1069547520	; 0x3fc00000
 80024fc:	f449 1940 	orr.w	r9, r9, #3145728	; 0x300000
 8002500:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 8002504:	f8cd a040 	str.w	sl, [sp, #64]	; 0x40
 8002508:	2200      	movs	r2, #0
 800250a:	4b89      	ldr	r3, [pc, #548]	; (8002730 <_dtoa_r+0x328>)
 800250c:	4640      	mov	r0, r8
 800250e:	4649      	mov	r1, r9
 8002510:	f7fd fe2a 	bl	8000168 <__aeabi_dsub>
 8002514:	a37c      	add	r3, pc, #496	; (adr r3, 8002708 <_dtoa_r+0x300>)
 8002516:	e9d3 2300 	ldrd	r2, r3, [r3]
 800251a:	f7fd ffdd 	bl	80004d8 <__aeabi_dmul>
 800251e:	a37c      	add	r3, pc, #496	; (adr r3, 8002710 <_dtoa_r+0x308>)
 8002520:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002524:	f7fd fe22 	bl	800016c <__adddf3>
 8002528:	4606      	mov	r6, r0
 800252a:	4628      	mov	r0, r5
 800252c:	460f      	mov	r7, r1
 800252e:	f7fd ff69 	bl	8000404 <__aeabi_i2d>
 8002532:	a379      	add	r3, pc, #484	; (adr r3, 8002718 <_dtoa_r+0x310>)
 8002534:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002538:	f7fd ffce 	bl	80004d8 <__aeabi_dmul>
 800253c:	4602      	mov	r2, r0
 800253e:	460b      	mov	r3, r1
 8002540:	4630      	mov	r0, r6
 8002542:	4639      	mov	r1, r7
 8002544:	f7fd fe12 	bl	800016c <__adddf3>
 8002548:	4606      	mov	r6, r0
 800254a:	460f      	mov	r7, r1
 800254c:	f7fe fa74 	bl	8000a38 <__aeabi_d2iz>
 8002550:	2200      	movs	r2, #0
 8002552:	4682      	mov	sl, r0
 8002554:	2300      	movs	r3, #0
 8002556:	4630      	mov	r0, r6
 8002558:	4639      	mov	r1, r7
 800255a:	f7fe fa2f 	bl	80009bc <__aeabi_dcmplt>
 800255e:	b148      	cbz	r0, 8002574 <_dtoa_r+0x16c>
 8002560:	4650      	mov	r0, sl
 8002562:	f7fd ff4f 	bl	8000404 <__aeabi_i2d>
 8002566:	4632      	mov	r2, r6
 8002568:	463b      	mov	r3, r7
 800256a:	f7fe fa1d 	bl	80009a8 <__aeabi_dcmpeq>
 800256e:	b908      	cbnz	r0, 8002574 <_dtoa_r+0x16c>
 8002570:	f10a 3aff 	add.w	sl, sl, #4294967295
 8002574:	f1ba 0f16 	cmp.w	sl, #22
 8002578:	d85a      	bhi.n	8002630 <_dtoa_r+0x228>
 800257a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800257e:	496d      	ldr	r1, [pc, #436]	; (8002734 <_dtoa_r+0x32c>)
 8002580:	eb01 01ca 	add.w	r1, r1, sl, lsl #3
 8002584:	e9d1 0100 	ldrd	r0, r1, [r1]
 8002588:	f7fe fa36 	bl	80009f8 <__aeabi_dcmpgt>
 800258c:	2800      	cmp	r0, #0
 800258e:	d051      	beq.n	8002634 <_dtoa_r+0x22c>
 8002590:	2300      	movs	r3, #0
 8002592:	f10a 3aff 	add.w	sl, sl, #4294967295
 8002596:	930d      	str	r3, [sp, #52]	; 0x34
 8002598:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800259a:	1b5d      	subs	r5, r3, r5
 800259c:	1e6b      	subs	r3, r5, #1
 800259e:	9307      	str	r3, [sp, #28]
 80025a0:	bf43      	ittte	mi
 80025a2:	2300      	movmi	r3, #0
 80025a4:	f1c5 0901 	rsbmi	r9, r5, #1
 80025a8:	9307      	strmi	r3, [sp, #28]
 80025aa:	f04f 0900 	movpl.w	r9, #0
 80025ae:	f1ba 0f00 	cmp.w	sl, #0
 80025b2:	db41      	blt.n	8002638 <_dtoa_r+0x230>
 80025b4:	9b07      	ldr	r3, [sp, #28]
 80025b6:	f8cd a030 	str.w	sl, [sp, #48]	; 0x30
 80025ba:	4453      	add	r3, sl
 80025bc:	9307      	str	r3, [sp, #28]
 80025be:	2300      	movs	r3, #0
 80025c0:	9308      	str	r3, [sp, #32]
 80025c2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80025c4:	2b09      	cmp	r3, #9
 80025c6:	f200 808f 	bhi.w	80026e8 <_dtoa_r+0x2e0>
 80025ca:	2b05      	cmp	r3, #5
 80025cc:	bfc4      	itt	gt
 80025ce:	3b04      	subgt	r3, #4
 80025d0:	931e      	strgt	r3, [sp, #120]	; 0x78
 80025d2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80025d4:	bfc8      	it	gt
 80025d6:	2500      	movgt	r5, #0
 80025d8:	f1a3 0302 	sub.w	r3, r3, #2
 80025dc:	bfd8      	it	le
 80025de:	2501      	movle	r5, #1
 80025e0:	2b03      	cmp	r3, #3
 80025e2:	f200 808d 	bhi.w	8002700 <_dtoa_r+0x2f8>
 80025e6:	e8df f003 	tbb	[pc, r3]
 80025ea:	7d7b      	.short	0x7d7b
 80025ec:	6f2f      	.short	0x6f2f
 80025ee:	e9dd 5312 	ldrd	r5, r3, [sp, #72]	; 0x48
 80025f2:	441d      	add	r5, r3
 80025f4:	f205 4032 	addw	r0, r5, #1074	; 0x432
 80025f8:	2820      	cmp	r0, #32
 80025fa:	dd13      	ble.n	8002624 <_dtoa_r+0x21c>
 80025fc:	f1c0 0040 	rsb	r0, r0, #64	; 0x40
 8002600:	9b02      	ldr	r3, [sp, #8]
 8002602:	fa08 f800 	lsl.w	r8, r8, r0
 8002606:	f205 4012 	addw	r0, r5, #1042	; 0x412
 800260a:	fa23 f000 	lsr.w	r0, r3, r0
 800260e:	ea48 0000 	orr.w	r0, r8, r0
 8002612:	f7fd fee7 	bl	80003e4 <__aeabi_ui2d>
 8002616:	2301      	movs	r3, #1
 8002618:	4680      	mov	r8, r0
 800261a:	f1a1 79f8 	sub.w	r9, r1, #32505856	; 0x1f00000
 800261e:	3d01      	subs	r5, #1
 8002620:	9310      	str	r3, [sp, #64]	; 0x40
 8002622:	e771      	b.n	8002508 <_dtoa_r+0x100>
 8002624:	9b02      	ldr	r3, [sp, #8]
 8002626:	f1c0 0020 	rsb	r0, r0, #32
 800262a:	fa03 f000 	lsl.w	r0, r3, r0
 800262e:	e7f0      	b.n	8002612 <_dtoa_r+0x20a>
 8002630:	2301      	movs	r3, #1
 8002632:	e7b0      	b.n	8002596 <_dtoa_r+0x18e>
 8002634:	900d      	str	r0, [sp, #52]	; 0x34
 8002636:	e7af      	b.n	8002598 <_dtoa_r+0x190>
 8002638:	f1ca 0300 	rsb	r3, sl, #0
 800263c:	9308      	str	r3, [sp, #32]
 800263e:	2300      	movs	r3, #0
 8002640:	eba9 090a 	sub.w	r9, r9, sl
 8002644:	930c      	str	r3, [sp, #48]	; 0x30
 8002646:	e7bc      	b.n	80025c2 <_dtoa_r+0x1ba>
 8002648:	2301      	movs	r3, #1
 800264a:	9309      	str	r3, [sp, #36]	; 0x24
 800264c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 800264e:	2b00      	cmp	r3, #0
 8002650:	dd74      	ble.n	800273c <_dtoa_r+0x334>
 8002652:	4698      	mov	r8, r3
 8002654:	9304      	str	r3, [sp, #16]
 8002656:	2200      	movs	r2, #0
 8002658:	6a66      	ldr	r6, [r4, #36]	; 0x24
 800265a:	6072      	str	r2, [r6, #4]
 800265c:	2204      	movs	r2, #4
 800265e:	f102 0014 	add.w	r0, r2, #20
 8002662:	4298      	cmp	r0, r3
 8002664:	6871      	ldr	r1, [r6, #4]
 8002666:	d96e      	bls.n	8002746 <_dtoa_r+0x33e>
 8002668:	4620      	mov	r0, r4
 800266a:	f000 fcb0 	bl	8002fce <_Balloc>
 800266e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002670:	6030      	str	r0, [r6, #0]
 8002672:	681b      	ldr	r3, [r3, #0]
 8002674:	f1b8 0f0e 	cmp.w	r8, #14
 8002678:	9306      	str	r3, [sp, #24]
 800267a:	f200 80ed 	bhi.w	8002858 <_dtoa_r+0x450>
 800267e:	2d00      	cmp	r5, #0
 8002680:	f000 80ea 	beq.w	8002858 <_dtoa_r+0x450>
 8002684:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002688:	f1ba 0f00 	cmp.w	sl, #0
 800268c:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
 8002690:	dd77      	ble.n	8002782 <_dtoa_r+0x37a>
 8002692:	4a28      	ldr	r2, [pc, #160]	; (8002734 <_dtoa_r+0x32c>)
 8002694:	f00a 030f 	and.w	r3, sl, #15
 8002698:	ea4f 162a 	mov.w	r6, sl, asr #4
 800269c:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 80026a0:	06f0      	lsls	r0, r6, #27
 80026a2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80026a6:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 80026aa:	d568      	bpl.n	800277e <_dtoa_r+0x376>
 80026ac:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 80026b0:	4b21      	ldr	r3, [pc, #132]	; (8002738 <_dtoa_r+0x330>)
 80026b2:	2503      	movs	r5, #3
 80026b4:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 80026b8:	f7fe f838 	bl	800072c <__aeabi_ddiv>
 80026bc:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80026c0:	f006 060f 	and.w	r6, r6, #15
 80026c4:	4f1c      	ldr	r7, [pc, #112]	; (8002738 <_dtoa_r+0x330>)
 80026c6:	e04f      	b.n	8002768 <_dtoa_r+0x360>
 80026c8:	2301      	movs	r3, #1
 80026ca:	9309      	str	r3, [sp, #36]	; 0x24
 80026cc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80026ce:	4453      	add	r3, sl
 80026d0:	f103 0801 	add.w	r8, r3, #1
 80026d4:	9304      	str	r3, [sp, #16]
 80026d6:	4643      	mov	r3, r8
 80026d8:	2b01      	cmp	r3, #1
 80026da:	bfb8      	it	lt
 80026dc:	2301      	movlt	r3, #1
 80026de:	e7ba      	b.n	8002656 <_dtoa_r+0x24e>
 80026e0:	2300      	movs	r3, #0
 80026e2:	e7b2      	b.n	800264a <_dtoa_r+0x242>
 80026e4:	2300      	movs	r3, #0
 80026e6:	e7f0      	b.n	80026ca <_dtoa_r+0x2c2>
 80026e8:	2501      	movs	r5, #1
 80026ea:	2300      	movs	r3, #0
 80026ec:	9509      	str	r5, [sp, #36]	; 0x24
 80026ee:	931e      	str	r3, [sp, #120]	; 0x78
 80026f0:	f04f 33ff 	mov.w	r3, #4294967295
 80026f4:	2200      	movs	r2, #0
 80026f6:	9304      	str	r3, [sp, #16]
 80026f8:	4698      	mov	r8, r3
 80026fa:	2312      	movs	r3, #18
 80026fc:	921f      	str	r2, [sp, #124]	; 0x7c
 80026fe:	e7aa      	b.n	8002656 <_dtoa_r+0x24e>
 8002700:	2301      	movs	r3, #1
 8002702:	9309      	str	r3, [sp, #36]	; 0x24
 8002704:	e7f4      	b.n	80026f0 <_dtoa_r+0x2e8>
 8002706:	bf00      	nop
 8002708:	636f4361 	.word	0x636f4361
 800270c:	3fd287a7 	.word	0x3fd287a7
 8002710:	8b60c8b3 	.word	0x8b60c8b3
 8002714:	3fc68a28 	.word	0x3fc68a28
 8002718:	509f79fb 	.word	0x509f79fb
 800271c:	3fd34413 	.word	0x3fd34413
 8002720:	7ff00000 	.word	0x7ff00000
 8002724:	08003b33 	.word	0x08003b33
 8002728:	08003b2a 	.word	0x08003b2a
 800272c:	08003b07 	.word	0x08003b07
 8002730:	3ff80000 	.word	0x3ff80000
 8002734:	08003b60 	.word	0x08003b60
 8002738:	08003b38 	.word	0x08003b38
 800273c:	2301      	movs	r3, #1
 800273e:	9304      	str	r3, [sp, #16]
 8002740:	4698      	mov	r8, r3
 8002742:	461a      	mov	r2, r3
 8002744:	e7da      	b.n	80026fc <_dtoa_r+0x2f4>
 8002746:	3101      	adds	r1, #1
 8002748:	6071      	str	r1, [r6, #4]
 800274a:	0052      	lsls	r2, r2, #1
 800274c:	e787      	b.n	800265e <_dtoa_r+0x256>
 800274e:	07f1      	lsls	r1, r6, #31
 8002750:	d508      	bpl.n	8002764 <_dtoa_r+0x35c>
 8002752:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8002756:	e9d7 2300 	ldrd	r2, r3, [r7]
 800275a:	f7fd febd 	bl	80004d8 <__aeabi_dmul>
 800275e:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 8002762:	3501      	adds	r5, #1
 8002764:	1076      	asrs	r6, r6, #1
 8002766:	3708      	adds	r7, #8
 8002768:	2e00      	cmp	r6, #0
 800276a:	d1f0      	bne.n	800274e <_dtoa_r+0x346>
 800276c:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8002770:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002774:	f7fd ffda 	bl	800072c <__aeabi_ddiv>
 8002778:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800277c:	e01b      	b.n	80027b6 <_dtoa_r+0x3ae>
 800277e:	2502      	movs	r5, #2
 8002780:	e7a0      	b.n	80026c4 <_dtoa_r+0x2bc>
 8002782:	f000 80a4 	beq.w	80028ce <_dtoa_r+0x4c6>
 8002786:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 800278a:	f1ca 0600 	rsb	r6, sl, #0
 800278e:	4ba0      	ldr	r3, [pc, #640]	; (8002a10 <_dtoa_r+0x608>)
 8002790:	f006 020f 	and.w	r2, r6, #15
 8002794:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8002798:	e9d3 2300 	ldrd	r2, r3, [r3]
 800279c:	f7fd fe9c 	bl	80004d8 <__aeabi_dmul>
 80027a0:	2502      	movs	r5, #2
 80027a2:	2300      	movs	r3, #0
 80027a4:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80027a8:	4f9a      	ldr	r7, [pc, #616]	; (8002a14 <_dtoa_r+0x60c>)
 80027aa:	1136      	asrs	r6, r6, #4
 80027ac:	2e00      	cmp	r6, #0
 80027ae:	f040 8083 	bne.w	80028b8 <_dtoa_r+0x4b0>
 80027b2:	2b00      	cmp	r3, #0
 80027b4:	d1e0      	bne.n	8002778 <_dtoa_r+0x370>
 80027b6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80027b8:	2b00      	cmp	r3, #0
 80027ba:	f000 808a 	beq.w	80028d2 <_dtoa_r+0x4ca>
 80027be:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80027c2:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 80027c6:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 80027ca:	2200      	movs	r2, #0
 80027cc:	4b92      	ldr	r3, [pc, #584]	; (8002a18 <_dtoa_r+0x610>)
 80027ce:	f7fe f8f5 	bl	80009bc <__aeabi_dcmplt>
 80027d2:	2800      	cmp	r0, #0
 80027d4:	d07d      	beq.n	80028d2 <_dtoa_r+0x4ca>
 80027d6:	f1b8 0f00 	cmp.w	r8, #0
 80027da:	d07a      	beq.n	80028d2 <_dtoa_r+0x4ca>
 80027dc:	9b04      	ldr	r3, [sp, #16]
 80027de:	2b00      	cmp	r3, #0
 80027e0:	dd36      	ble.n	8002850 <_dtoa_r+0x448>
 80027e2:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 80027e6:	2200      	movs	r2, #0
 80027e8:	4b8c      	ldr	r3, [pc, #560]	; (8002a1c <_dtoa_r+0x614>)
 80027ea:	f7fd fe75 	bl	80004d8 <__aeabi_dmul>
 80027ee:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80027f2:	9e04      	ldr	r6, [sp, #16]
 80027f4:	f10a 37ff 	add.w	r7, sl, #4294967295
 80027f8:	3501      	adds	r5, #1
 80027fa:	4628      	mov	r0, r5
 80027fc:	f7fd fe02 	bl	8000404 <__aeabi_i2d>
 8002800:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002804:	f7fd fe68 	bl	80004d8 <__aeabi_dmul>
 8002808:	2200      	movs	r2, #0
 800280a:	4b85      	ldr	r3, [pc, #532]	; (8002a20 <_dtoa_r+0x618>)
 800280c:	f7fd fcae 	bl	800016c <__adddf3>
 8002810:	f1a1 7550 	sub.w	r5, r1, #54525952	; 0x3400000
 8002814:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 8002818:	950b      	str	r5, [sp, #44]	; 0x2c
 800281a:	2e00      	cmp	r6, #0
 800281c:	d15c      	bne.n	80028d8 <_dtoa_r+0x4d0>
 800281e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002822:	2200      	movs	r2, #0
 8002824:	4b7f      	ldr	r3, [pc, #508]	; (8002a24 <_dtoa_r+0x61c>)
 8002826:	f7fd fc9f 	bl	8000168 <__aeabi_dsub>
 800282a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800282c:	462b      	mov	r3, r5
 800282e:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002832:	f7fe f8e1 	bl	80009f8 <__aeabi_dcmpgt>
 8002836:	2800      	cmp	r0, #0
 8002838:	f040 8281 	bne.w	8002d3e <_dtoa_r+0x936>
 800283c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002840:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8002842:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
 8002846:	f7fe f8b9 	bl	80009bc <__aeabi_dcmplt>
 800284a:	2800      	cmp	r0, #0
 800284c:	f040 8275 	bne.w	8002d3a <_dtoa_r+0x932>
 8002850:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
 8002854:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8002858:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800285a:	2b00      	cmp	r3, #0
 800285c:	f2c0 814b 	blt.w	8002af6 <_dtoa_r+0x6ee>
 8002860:	f1ba 0f0e 	cmp.w	sl, #14
 8002864:	f300 8147 	bgt.w	8002af6 <_dtoa_r+0x6ee>
 8002868:	4b69      	ldr	r3, [pc, #420]	; (8002a10 <_dtoa_r+0x608>)
 800286a:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 800286e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002872:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8002876:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8002878:	2b00      	cmp	r3, #0
 800287a:	f280 80d7 	bge.w	8002a2c <_dtoa_r+0x624>
 800287e:	f1b8 0f00 	cmp.w	r8, #0
 8002882:	f300 80d3 	bgt.w	8002a2c <_dtoa_r+0x624>
 8002886:	f040 8257 	bne.w	8002d38 <_dtoa_r+0x930>
 800288a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800288e:	2200      	movs	r2, #0
 8002890:	4b64      	ldr	r3, [pc, #400]	; (8002a24 <_dtoa_r+0x61c>)
 8002892:	f7fd fe21 	bl	80004d8 <__aeabi_dmul>
 8002896:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800289a:	f7fe f8a3 	bl	80009e4 <__aeabi_dcmpge>
 800289e:	4646      	mov	r6, r8
 80028a0:	4647      	mov	r7, r8
 80028a2:	2800      	cmp	r0, #0
 80028a4:	f040 822d 	bne.w	8002d02 <_dtoa_r+0x8fa>
 80028a8:	9b06      	ldr	r3, [sp, #24]
 80028aa:	9a06      	ldr	r2, [sp, #24]
 80028ac:	1c5d      	adds	r5, r3, #1
 80028ae:	2331      	movs	r3, #49	; 0x31
 80028b0:	f10a 0a01 	add.w	sl, sl, #1
 80028b4:	7013      	strb	r3, [r2, #0]
 80028b6:	e228      	b.n	8002d0a <_dtoa_r+0x902>
 80028b8:	07f2      	lsls	r2, r6, #31
 80028ba:	d505      	bpl.n	80028c8 <_dtoa_r+0x4c0>
 80028bc:	e9d7 2300 	ldrd	r2, r3, [r7]
 80028c0:	f7fd fe0a 	bl	80004d8 <__aeabi_dmul>
 80028c4:	2301      	movs	r3, #1
 80028c6:	3501      	adds	r5, #1
 80028c8:	1076      	asrs	r6, r6, #1
 80028ca:	3708      	adds	r7, #8
 80028cc:	e76e      	b.n	80027ac <_dtoa_r+0x3a4>
 80028ce:	2502      	movs	r5, #2
 80028d0:	e771      	b.n	80027b6 <_dtoa_r+0x3ae>
 80028d2:	4657      	mov	r7, sl
 80028d4:	4646      	mov	r6, r8
 80028d6:	e790      	b.n	80027fa <_dtoa_r+0x3f2>
 80028d8:	4b4d      	ldr	r3, [pc, #308]	; (8002a10 <_dtoa_r+0x608>)
 80028da:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 80028de:	e953 0102 	ldrd	r0, r1, [r3, #-8]
 80028e2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80028e4:	2b00      	cmp	r3, #0
 80028e6:	d048      	beq.n	800297a <_dtoa_r+0x572>
 80028e8:	4602      	mov	r2, r0
 80028ea:	460b      	mov	r3, r1
 80028ec:	2000      	movs	r0, #0
 80028ee:	494e      	ldr	r1, [pc, #312]	; (8002a28 <_dtoa_r+0x620>)
 80028f0:	f7fd ff1c 	bl	800072c <__aeabi_ddiv>
 80028f4:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 80028f8:	f7fd fc36 	bl	8000168 <__aeabi_dsub>
 80028fc:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 8002900:	9d06      	ldr	r5, [sp, #24]
 8002902:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002906:	f7fe f897 	bl	8000a38 <__aeabi_d2iz>
 800290a:	9011      	str	r0, [sp, #68]	; 0x44
 800290c:	f7fd fd7a 	bl	8000404 <__aeabi_i2d>
 8002910:	4602      	mov	r2, r0
 8002912:	460b      	mov	r3, r1
 8002914:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002918:	f7fd fc26 	bl	8000168 <__aeabi_dsub>
 800291c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800291e:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002922:	3330      	adds	r3, #48	; 0x30
 8002924:	f805 3b01 	strb.w	r3, [r5], #1
 8002928:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800292c:	f7fe f846 	bl	80009bc <__aeabi_dcmplt>
 8002930:	2800      	cmp	r0, #0
 8002932:	d163      	bne.n	80029fc <_dtoa_r+0x5f4>
 8002934:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002938:	2000      	movs	r0, #0
 800293a:	4937      	ldr	r1, [pc, #220]	; (8002a18 <_dtoa_r+0x610>)
 800293c:	f7fd fc14 	bl	8000168 <__aeabi_dsub>
 8002940:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8002944:	f7fe f83a 	bl	80009bc <__aeabi_dcmplt>
 8002948:	2800      	cmp	r0, #0
 800294a:	f040 80b5 	bne.w	8002ab8 <_dtoa_r+0x6b0>
 800294e:	9b06      	ldr	r3, [sp, #24]
 8002950:	1aeb      	subs	r3, r5, r3
 8002952:	429e      	cmp	r6, r3
 8002954:	f77f af7c 	ble.w	8002850 <_dtoa_r+0x448>
 8002958:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 800295c:	2200      	movs	r2, #0
 800295e:	4b2f      	ldr	r3, [pc, #188]	; (8002a1c <_dtoa_r+0x614>)
 8002960:	f7fd fdba 	bl	80004d8 <__aeabi_dmul>
 8002964:	2200      	movs	r2, #0
 8002966:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 800296a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800296e:	4b2b      	ldr	r3, [pc, #172]	; (8002a1c <_dtoa_r+0x614>)
 8002970:	f7fd fdb2 	bl	80004d8 <__aeabi_dmul>
 8002974:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002978:	e7c3      	b.n	8002902 <_dtoa_r+0x4fa>
 800297a:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800297e:	f7fd fdab 	bl	80004d8 <__aeabi_dmul>
 8002982:	9b06      	ldr	r3, [sp, #24]
 8002984:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 8002988:	199d      	adds	r5, r3, r6
 800298a:	461e      	mov	r6, r3
 800298c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002990:	f7fe f852 	bl	8000a38 <__aeabi_d2iz>
 8002994:	9011      	str	r0, [sp, #68]	; 0x44
 8002996:	f7fd fd35 	bl	8000404 <__aeabi_i2d>
 800299a:	4602      	mov	r2, r0
 800299c:	460b      	mov	r3, r1
 800299e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80029a2:	f7fd fbe1 	bl	8000168 <__aeabi_dsub>
 80029a6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80029a8:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80029ac:	3330      	adds	r3, #48	; 0x30
 80029ae:	f806 3b01 	strb.w	r3, [r6], #1
 80029b2:	42ae      	cmp	r6, r5
 80029b4:	f04f 0200 	mov.w	r2, #0
 80029b8:	d124      	bne.n	8002a04 <_dtoa_r+0x5fc>
 80029ba:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 80029be:	4b1a      	ldr	r3, [pc, #104]	; (8002a28 <_dtoa_r+0x620>)
 80029c0:	f7fd fbd4 	bl	800016c <__adddf3>
 80029c4:	4602      	mov	r2, r0
 80029c6:	460b      	mov	r3, r1
 80029c8:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80029cc:	f7fe f814 	bl	80009f8 <__aeabi_dcmpgt>
 80029d0:	2800      	cmp	r0, #0
 80029d2:	d171      	bne.n	8002ab8 <_dtoa_r+0x6b0>
 80029d4:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 80029d8:	2000      	movs	r0, #0
 80029da:	4913      	ldr	r1, [pc, #76]	; (8002a28 <_dtoa_r+0x620>)
 80029dc:	f7fd fbc4 	bl	8000168 <__aeabi_dsub>
 80029e0:	4602      	mov	r2, r0
 80029e2:	460b      	mov	r3, r1
 80029e4:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80029e8:	f7fd ffe8 	bl	80009bc <__aeabi_dcmplt>
 80029ec:	2800      	cmp	r0, #0
 80029ee:	f43f af2f 	beq.w	8002850 <_dtoa_r+0x448>
 80029f2:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 80029f6:	1e6a      	subs	r2, r5, #1
 80029f8:	2b30      	cmp	r3, #48	; 0x30
 80029fa:	d001      	beq.n	8002a00 <_dtoa_r+0x5f8>
 80029fc:	46ba      	mov	sl, r7
 80029fe:	e04a      	b.n	8002a96 <_dtoa_r+0x68e>
 8002a00:	4615      	mov	r5, r2
 8002a02:	e7f6      	b.n	80029f2 <_dtoa_r+0x5ea>
 8002a04:	4b05      	ldr	r3, [pc, #20]	; (8002a1c <_dtoa_r+0x614>)
 8002a06:	f7fd fd67 	bl	80004d8 <__aeabi_dmul>
 8002a0a:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002a0e:	e7bd      	b.n	800298c <_dtoa_r+0x584>
 8002a10:	08003b60 	.word	0x08003b60
 8002a14:	08003b38 	.word	0x08003b38
 8002a18:	3ff00000 	.word	0x3ff00000
 8002a1c:	40240000 	.word	0x40240000
 8002a20:	401c0000 	.word	0x401c0000
 8002a24:	40140000 	.word	0x40140000
 8002a28:	3fe00000 	.word	0x3fe00000
 8002a2c:	9d06      	ldr	r5, [sp, #24]
 8002a2e:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 8002a32:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002a36:	4630      	mov	r0, r6
 8002a38:	4639      	mov	r1, r7
 8002a3a:	f7fd fe77 	bl	800072c <__aeabi_ddiv>
 8002a3e:	f7fd fffb 	bl	8000a38 <__aeabi_d2iz>
 8002a42:	4681      	mov	r9, r0
 8002a44:	f7fd fcde 	bl	8000404 <__aeabi_i2d>
 8002a48:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002a4c:	f7fd fd44 	bl	80004d8 <__aeabi_dmul>
 8002a50:	4602      	mov	r2, r0
 8002a52:	460b      	mov	r3, r1
 8002a54:	4630      	mov	r0, r6
 8002a56:	4639      	mov	r1, r7
 8002a58:	f7fd fb86 	bl	8000168 <__aeabi_dsub>
 8002a5c:	f109 0630 	add.w	r6, r9, #48	; 0x30
 8002a60:	f805 6b01 	strb.w	r6, [r5], #1
 8002a64:	9e06      	ldr	r6, [sp, #24]
 8002a66:	4602      	mov	r2, r0
 8002a68:	1bae      	subs	r6, r5, r6
 8002a6a:	45b0      	cmp	r8, r6
 8002a6c:	460b      	mov	r3, r1
 8002a6e:	d135      	bne.n	8002adc <_dtoa_r+0x6d4>
 8002a70:	f7fd fb7c 	bl	800016c <__adddf3>
 8002a74:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002a78:	4606      	mov	r6, r0
 8002a7a:	460f      	mov	r7, r1
 8002a7c:	f7fd ffbc 	bl	80009f8 <__aeabi_dcmpgt>
 8002a80:	b9c8      	cbnz	r0, 8002ab6 <_dtoa_r+0x6ae>
 8002a82:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002a86:	4630      	mov	r0, r6
 8002a88:	4639      	mov	r1, r7
 8002a8a:	f7fd ff8d 	bl	80009a8 <__aeabi_dcmpeq>
 8002a8e:	b110      	cbz	r0, 8002a96 <_dtoa_r+0x68e>
 8002a90:	f019 0f01 	tst.w	r9, #1
 8002a94:	d10f      	bne.n	8002ab6 <_dtoa_r+0x6ae>
 8002a96:	4659      	mov	r1, fp
 8002a98:	4620      	mov	r0, r4
 8002a9a:	f000 facc 	bl	8003036 <_Bfree>
 8002a9e:	2300      	movs	r3, #0
 8002aa0:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8002aa2:	702b      	strb	r3, [r5, #0]
 8002aa4:	f10a 0301 	add.w	r3, sl, #1
 8002aa8:	6013      	str	r3, [r2, #0]
 8002aaa:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8002aac:	2b00      	cmp	r3, #0
 8002aae:	f43f acf3 	beq.w	8002498 <_dtoa_r+0x90>
 8002ab2:	601d      	str	r5, [r3, #0]
 8002ab4:	e4f0      	b.n	8002498 <_dtoa_r+0x90>
 8002ab6:	4657      	mov	r7, sl
 8002ab8:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 8002abc:	1e6b      	subs	r3, r5, #1
 8002abe:	2a39      	cmp	r2, #57	; 0x39
 8002ac0:	d106      	bne.n	8002ad0 <_dtoa_r+0x6c8>
 8002ac2:	9a06      	ldr	r2, [sp, #24]
 8002ac4:	429a      	cmp	r2, r3
 8002ac6:	d107      	bne.n	8002ad8 <_dtoa_r+0x6d0>
 8002ac8:	2330      	movs	r3, #48	; 0x30
 8002aca:	7013      	strb	r3, [r2, #0]
 8002acc:	4613      	mov	r3, r2
 8002ace:	3701      	adds	r7, #1
 8002ad0:	781a      	ldrb	r2, [r3, #0]
 8002ad2:	3201      	adds	r2, #1
 8002ad4:	701a      	strb	r2, [r3, #0]
 8002ad6:	e791      	b.n	80029fc <_dtoa_r+0x5f4>
 8002ad8:	461d      	mov	r5, r3
 8002ada:	e7ed      	b.n	8002ab8 <_dtoa_r+0x6b0>
 8002adc:	2200      	movs	r2, #0
 8002ade:	4b99      	ldr	r3, [pc, #612]	; (8002d44 <_dtoa_r+0x93c>)
 8002ae0:	f7fd fcfa 	bl	80004d8 <__aeabi_dmul>
 8002ae4:	2200      	movs	r2, #0
 8002ae6:	2300      	movs	r3, #0
 8002ae8:	4606      	mov	r6, r0
 8002aea:	460f      	mov	r7, r1
 8002aec:	f7fd ff5c 	bl	80009a8 <__aeabi_dcmpeq>
 8002af0:	2800      	cmp	r0, #0
 8002af2:	d09e      	beq.n	8002a32 <_dtoa_r+0x62a>
 8002af4:	e7cf      	b.n	8002a96 <_dtoa_r+0x68e>
 8002af6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8002af8:	2a00      	cmp	r2, #0
 8002afa:	f000 8088 	beq.w	8002c0e <_dtoa_r+0x806>
 8002afe:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8002b00:	2a01      	cmp	r2, #1
 8002b02:	dc6d      	bgt.n	8002be0 <_dtoa_r+0x7d8>
 8002b04:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8002b06:	2a00      	cmp	r2, #0
 8002b08:	d066      	beq.n	8002bd8 <_dtoa_r+0x7d0>
 8002b0a:	f203 4333 	addw	r3, r3, #1075	; 0x433
 8002b0e:	464d      	mov	r5, r9
 8002b10:	9e08      	ldr	r6, [sp, #32]
 8002b12:	9a07      	ldr	r2, [sp, #28]
 8002b14:	2101      	movs	r1, #1
 8002b16:	441a      	add	r2, r3
 8002b18:	4620      	mov	r0, r4
 8002b1a:	4499      	add	r9, r3
 8002b1c:	9207      	str	r2, [sp, #28]
 8002b1e:	f000 fb2a 	bl	8003176 <__i2b>
 8002b22:	4607      	mov	r7, r0
 8002b24:	2d00      	cmp	r5, #0
 8002b26:	dd0b      	ble.n	8002b40 <_dtoa_r+0x738>
 8002b28:	9b07      	ldr	r3, [sp, #28]
 8002b2a:	2b00      	cmp	r3, #0
 8002b2c:	dd08      	ble.n	8002b40 <_dtoa_r+0x738>
 8002b2e:	42ab      	cmp	r3, r5
 8002b30:	bfa8      	it	ge
 8002b32:	462b      	movge	r3, r5
 8002b34:	9a07      	ldr	r2, [sp, #28]
 8002b36:	eba9 0903 	sub.w	r9, r9, r3
 8002b3a:	1aed      	subs	r5, r5, r3
 8002b3c:	1ad3      	subs	r3, r2, r3
 8002b3e:	9307      	str	r3, [sp, #28]
 8002b40:	9b08      	ldr	r3, [sp, #32]
 8002b42:	b1eb      	cbz	r3, 8002b80 <_dtoa_r+0x778>
 8002b44:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002b46:	2b00      	cmp	r3, #0
 8002b48:	d065      	beq.n	8002c16 <_dtoa_r+0x80e>
 8002b4a:	b18e      	cbz	r6, 8002b70 <_dtoa_r+0x768>
 8002b4c:	4639      	mov	r1, r7
 8002b4e:	4632      	mov	r2, r6
 8002b50:	4620      	mov	r0, r4
 8002b52:	f000 fbaf 	bl	80032b4 <__pow5mult>
 8002b56:	465a      	mov	r2, fp
 8002b58:	4601      	mov	r1, r0
 8002b5a:	4607      	mov	r7, r0
 8002b5c:	4620      	mov	r0, r4
 8002b5e:	f000 fb13 	bl	8003188 <__multiply>
 8002b62:	4659      	mov	r1, fp
 8002b64:	900a      	str	r0, [sp, #40]	; 0x28
 8002b66:	4620      	mov	r0, r4
 8002b68:	f000 fa65 	bl	8003036 <_Bfree>
 8002b6c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002b6e:	469b      	mov	fp, r3
 8002b70:	9b08      	ldr	r3, [sp, #32]
 8002b72:	1b9a      	subs	r2, r3, r6
 8002b74:	d004      	beq.n	8002b80 <_dtoa_r+0x778>
 8002b76:	4659      	mov	r1, fp
 8002b78:	4620      	mov	r0, r4
 8002b7a:	f000 fb9b 	bl	80032b4 <__pow5mult>
 8002b7e:	4683      	mov	fp, r0
 8002b80:	2101      	movs	r1, #1
 8002b82:	4620      	mov	r0, r4
 8002b84:	f000 faf7 	bl	8003176 <__i2b>
 8002b88:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8002b8a:	4606      	mov	r6, r0
 8002b8c:	2b00      	cmp	r3, #0
 8002b8e:	f000 81c6 	beq.w	8002f1e <_dtoa_r+0xb16>
 8002b92:	461a      	mov	r2, r3
 8002b94:	4601      	mov	r1, r0
 8002b96:	4620      	mov	r0, r4
 8002b98:	f000 fb8c 	bl	80032b4 <__pow5mult>
 8002b9c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8002b9e:	4606      	mov	r6, r0
 8002ba0:	2b01      	cmp	r3, #1
 8002ba2:	dc3e      	bgt.n	8002c22 <_dtoa_r+0x81a>
 8002ba4:	9b02      	ldr	r3, [sp, #8]
 8002ba6:	2b00      	cmp	r3, #0
 8002ba8:	d137      	bne.n	8002c1a <_dtoa_r+0x812>
 8002baa:	9b03      	ldr	r3, [sp, #12]
 8002bac:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002bb0:	2b00      	cmp	r3, #0
 8002bb2:	d134      	bne.n	8002c1e <_dtoa_r+0x816>
 8002bb4:	9b03      	ldr	r3, [sp, #12]
 8002bb6:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8002bba:	0d1b      	lsrs	r3, r3, #20
 8002bbc:	051b      	lsls	r3, r3, #20
 8002bbe:	b12b      	cbz	r3, 8002bcc <_dtoa_r+0x7c4>
 8002bc0:	9b07      	ldr	r3, [sp, #28]
 8002bc2:	f109 0901 	add.w	r9, r9, #1
 8002bc6:	3301      	adds	r3, #1
 8002bc8:	9307      	str	r3, [sp, #28]
 8002bca:	2301      	movs	r3, #1
 8002bcc:	9308      	str	r3, [sp, #32]
 8002bce:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8002bd0:	2b00      	cmp	r3, #0
 8002bd2:	d128      	bne.n	8002c26 <_dtoa_r+0x81e>
 8002bd4:	2001      	movs	r0, #1
 8002bd6:	e02e      	b.n	8002c36 <_dtoa_r+0x82e>
 8002bd8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8002bda:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 8002bde:	e796      	b.n	8002b0e <_dtoa_r+0x706>
 8002be0:	9b08      	ldr	r3, [sp, #32]
 8002be2:	f108 36ff 	add.w	r6, r8, #4294967295
 8002be6:	42b3      	cmp	r3, r6
 8002be8:	bfb7      	itett	lt
 8002bea:	9b08      	ldrlt	r3, [sp, #32]
 8002bec:	1b9e      	subge	r6, r3, r6
 8002bee:	1af2      	sublt	r2, r6, r3
 8002bf0:	9b0c      	ldrlt	r3, [sp, #48]	; 0x30
 8002bf2:	bfbf      	itttt	lt
 8002bf4:	9608      	strlt	r6, [sp, #32]
 8002bf6:	189b      	addlt	r3, r3, r2
 8002bf8:	930c      	strlt	r3, [sp, #48]	; 0x30
 8002bfa:	2600      	movlt	r6, #0
 8002bfc:	f1b8 0f00 	cmp.w	r8, #0
 8002c00:	bfb9      	ittee	lt
 8002c02:	eba9 0508 	sublt.w	r5, r9, r8
 8002c06:	2300      	movlt	r3, #0
 8002c08:	464d      	movge	r5, r9
 8002c0a:	4643      	movge	r3, r8
 8002c0c:	e781      	b.n	8002b12 <_dtoa_r+0x70a>
 8002c0e:	9e08      	ldr	r6, [sp, #32]
 8002c10:	464d      	mov	r5, r9
 8002c12:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8002c14:	e786      	b.n	8002b24 <_dtoa_r+0x71c>
 8002c16:	9a08      	ldr	r2, [sp, #32]
 8002c18:	e7ad      	b.n	8002b76 <_dtoa_r+0x76e>
 8002c1a:	2300      	movs	r3, #0
 8002c1c:	e7d6      	b.n	8002bcc <_dtoa_r+0x7c4>
 8002c1e:	9b02      	ldr	r3, [sp, #8]
 8002c20:	e7d4      	b.n	8002bcc <_dtoa_r+0x7c4>
 8002c22:	2300      	movs	r3, #0
 8002c24:	9308      	str	r3, [sp, #32]
 8002c26:	6933      	ldr	r3, [r6, #16]
 8002c28:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 8002c2c:	6918      	ldr	r0, [r3, #16]
 8002c2e:	f000 fa54 	bl	80030da <__hi0bits>
 8002c32:	f1c0 0020 	rsb	r0, r0, #32
 8002c36:	9b07      	ldr	r3, [sp, #28]
 8002c38:	4418      	add	r0, r3
 8002c3a:	f010 001f 	ands.w	r0, r0, #31
 8002c3e:	d047      	beq.n	8002cd0 <_dtoa_r+0x8c8>
 8002c40:	f1c0 0320 	rsb	r3, r0, #32
 8002c44:	2b04      	cmp	r3, #4
 8002c46:	dd3b      	ble.n	8002cc0 <_dtoa_r+0x8b8>
 8002c48:	9b07      	ldr	r3, [sp, #28]
 8002c4a:	f1c0 001c 	rsb	r0, r0, #28
 8002c4e:	4481      	add	r9, r0
 8002c50:	4405      	add	r5, r0
 8002c52:	4403      	add	r3, r0
 8002c54:	9307      	str	r3, [sp, #28]
 8002c56:	f1b9 0f00 	cmp.w	r9, #0
 8002c5a:	dd05      	ble.n	8002c68 <_dtoa_r+0x860>
 8002c5c:	4659      	mov	r1, fp
 8002c5e:	464a      	mov	r2, r9
 8002c60:	4620      	mov	r0, r4
 8002c62:	f000 fb75 	bl	8003350 <__lshift>
 8002c66:	4683      	mov	fp, r0
 8002c68:	9b07      	ldr	r3, [sp, #28]
 8002c6a:	2b00      	cmp	r3, #0
 8002c6c:	dd05      	ble.n	8002c7a <_dtoa_r+0x872>
 8002c6e:	4631      	mov	r1, r6
 8002c70:	461a      	mov	r2, r3
 8002c72:	4620      	mov	r0, r4
 8002c74:	f000 fb6c 	bl	8003350 <__lshift>
 8002c78:	4606      	mov	r6, r0
 8002c7a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8002c7c:	b353      	cbz	r3, 8002cd4 <_dtoa_r+0x8cc>
 8002c7e:	4631      	mov	r1, r6
 8002c80:	4658      	mov	r0, fp
 8002c82:	f000 fbb9 	bl	80033f8 <__mcmp>
 8002c86:	2800      	cmp	r0, #0
 8002c88:	da24      	bge.n	8002cd4 <_dtoa_r+0x8cc>
 8002c8a:	2300      	movs	r3, #0
 8002c8c:	4659      	mov	r1, fp
 8002c8e:	220a      	movs	r2, #10
 8002c90:	4620      	mov	r0, r4
 8002c92:	f000 f9e7 	bl	8003064 <__multadd>
 8002c96:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002c98:	f10a 3aff 	add.w	sl, sl, #4294967295
 8002c9c:	4683      	mov	fp, r0
 8002c9e:	2b00      	cmp	r3, #0
 8002ca0:	f000 8144 	beq.w	8002f2c <_dtoa_r+0xb24>
 8002ca4:	2300      	movs	r3, #0
 8002ca6:	4639      	mov	r1, r7
 8002ca8:	220a      	movs	r2, #10
 8002caa:	4620      	mov	r0, r4
 8002cac:	f000 f9da 	bl	8003064 <__multadd>
 8002cb0:	9b04      	ldr	r3, [sp, #16]
 8002cb2:	4607      	mov	r7, r0
 8002cb4:	2b00      	cmp	r3, #0
 8002cb6:	dc4d      	bgt.n	8002d54 <_dtoa_r+0x94c>
 8002cb8:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8002cba:	2b02      	cmp	r3, #2
 8002cbc:	dd4a      	ble.n	8002d54 <_dtoa_r+0x94c>
 8002cbe:	e011      	b.n	8002ce4 <_dtoa_r+0x8dc>
 8002cc0:	d0c9      	beq.n	8002c56 <_dtoa_r+0x84e>
 8002cc2:	9a07      	ldr	r2, [sp, #28]
 8002cc4:	331c      	adds	r3, #28
 8002cc6:	441a      	add	r2, r3
 8002cc8:	4499      	add	r9, r3
 8002cca:	441d      	add	r5, r3
 8002ccc:	4613      	mov	r3, r2
 8002cce:	e7c1      	b.n	8002c54 <_dtoa_r+0x84c>
 8002cd0:	4603      	mov	r3, r0
 8002cd2:	e7f6      	b.n	8002cc2 <_dtoa_r+0x8ba>
 8002cd4:	f1b8 0f00 	cmp.w	r8, #0
 8002cd8:	dc36      	bgt.n	8002d48 <_dtoa_r+0x940>
 8002cda:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8002cdc:	2b02      	cmp	r3, #2
 8002cde:	dd33      	ble.n	8002d48 <_dtoa_r+0x940>
 8002ce0:	f8cd 8010 	str.w	r8, [sp, #16]
 8002ce4:	9b04      	ldr	r3, [sp, #16]
 8002ce6:	b963      	cbnz	r3, 8002d02 <_dtoa_r+0x8fa>
 8002ce8:	4631      	mov	r1, r6
 8002cea:	2205      	movs	r2, #5
 8002cec:	4620      	mov	r0, r4
 8002cee:	f000 f9b9 	bl	8003064 <__multadd>
 8002cf2:	4601      	mov	r1, r0
 8002cf4:	4606      	mov	r6, r0
 8002cf6:	4658      	mov	r0, fp
 8002cf8:	f000 fb7e 	bl	80033f8 <__mcmp>
 8002cfc:	2800      	cmp	r0, #0
 8002cfe:	f73f add3 	bgt.w	80028a8 <_dtoa_r+0x4a0>
 8002d02:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8002d04:	9d06      	ldr	r5, [sp, #24]
 8002d06:	ea6f 0a03 	mvn.w	sl, r3
 8002d0a:	f04f 0900 	mov.w	r9, #0
 8002d0e:	4631      	mov	r1, r6
 8002d10:	4620      	mov	r0, r4
 8002d12:	f000 f990 	bl	8003036 <_Bfree>
 8002d16:	2f00      	cmp	r7, #0
 8002d18:	f43f aebd 	beq.w	8002a96 <_dtoa_r+0x68e>
 8002d1c:	f1b9 0f00 	cmp.w	r9, #0
 8002d20:	d005      	beq.n	8002d2e <_dtoa_r+0x926>
 8002d22:	45b9      	cmp	r9, r7
 8002d24:	d003      	beq.n	8002d2e <_dtoa_r+0x926>
 8002d26:	4649      	mov	r1, r9
 8002d28:	4620      	mov	r0, r4
 8002d2a:	f000 f984 	bl	8003036 <_Bfree>
 8002d2e:	4639      	mov	r1, r7
 8002d30:	4620      	mov	r0, r4
 8002d32:	f000 f980 	bl	8003036 <_Bfree>
 8002d36:	e6ae      	b.n	8002a96 <_dtoa_r+0x68e>
 8002d38:	2600      	movs	r6, #0
 8002d3a:	4637      	mov	r7, r6
 8002d3c:	e7e1      	b.n	8002d02 <_dtoa_r+0x8fa>
 8002d3e:	46ba      	mov	sl, r7
 8002d40:	4637      	mov	r7, r6
 8002d42:	e5b1      	b.n	80028a8 <_dtoa_r+0x4a0>
 8002d44:	40240000 	.word	0x40240000
 8002d48:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002d4a:	f8cd 8010 	str.w	r8, [sp, #16]
 8002d4e:	2b00      	cmp	r3, #0
 8002d50:	f000 80f3 	beq.w	8002f3a <_dtoa_r+0xb32>
 8002d54:	2d00      	cmp	r5, #0
 8002d56:	dd05      	ble.n	8002d64 <_dtoa_r+0x95c>
 8002d58:	4639      	mov	r1, r7
 8002d5a:	462a      	mov	r2, r5
 8002d5c:	4620      	mov	r0, r4
 8002d5e:	f000 faf7 	bl	8003350 <__lshift>
 8002d62:	4607      	mov	r7, r0
 8002d64:	9b08      	ldr	r3, [sp, #32]
 8002d66:	2b00      	cmp	r3, #0
 8002d68:	d04c      	beq.n	8002e04 <_dtoa_r+0x9fc>
 8002d6a:	6879      	ldr	r1, [r7, #4]
 8002d6c:	4620      	mov	r0, r4
 8002d6e:	f000 f92e 	bl	8002fce <_Balloc>
 8002d72:	4605      	mov	r5, r0
 8002d74:	693a      	ldr	r2, [r7, #16]
 8002d76:	f107 010c 	add.w	r1, r7, #12
 8002d7a:	3202      	adds	r2, #2
 8002d7c:	0092      	lsls	r2, r2, #2
 8002d7e:	300c      	adds	r0, #12
 8002d80:	f000 f91a 	bl	8002fb8 <memcpy>
 8002d84:	2201      	movs	r2, #1
 8002d86:	4629      	mov	r1, r5
 8002d88:	4620      	mov	r0, r4
 8002d8a:	f000 fae1 	bl	8003350 <__lshift>
 8002d8e:	46b9      	mov	r9, r7
 8002d90:	4607      	mov	r7, r0
 8002d92:	9b06      	ldr	r3, [sp, #24]
 8002d94:	9307      	str	r3, [sp, #28]
 8002d96:	9b02      	ldr	r3, [sp, #8]
 8002d98:	f003 0301 	and.w	r3, r3, #1
 8002d9c:	9308      	str	r3, [sp, #32]
 8002d9e:	4631      	mov	r1, r6
 8002da0:	4658      	mov	r0, fp
 8002da2:	f7ff faa3 	bl	80022ec <quorem>
 8002da6:	4649      	mov	r1, r9
 8002da8:	4605      	mov	r5, r0
 8002daa:	f100 0830 	add.w	r8, r0, #48	; 0x30
 8002dae:	4658      	mov	r0, fp
 8002db0:	f000 fb22 	bl	80033f8 <__mcmp>
 8002db4:	463a      	mov	r2, r7
 8002db6:	9002      	str	r0, [sp, #8]
 8002db8:	4631      	mov	r1, r6
 8002dba:	4620      	mov	r0, r4
 8002dbc:	f000 fb36 	bl	800342c <__mdiff>
 8002dc0:	68c3      	ldr	r3, [r0, #12]
 8002dc2:	4602      	mov	r2, r0
 8002dc4:	bb03      	cbnz	r3, 8002e08 <_dtoa_r+0xa00>
 8002dc6:	4601      	mov	r1, r0
 8002dc8:	9009      	str	r0, [sp, #36]	; 0x24
 8002dca:	4658      	mov	r0, fp
 8002dcc:	f000 fb14 	bl	80033f8 <__mcmp>
 8002dd0:	4603      	mov	r3, r0
 8002dd2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8002dd4:	4611      	mov	r1, r2
 8002dd6:	4620      	mov	r0, r4
 8002dd8:	9309      	str	r3, [sp, #36]	; 0x24
 8002dda:	f000 f92c 	bl	8003036 <_Bfree>
 8002dde:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002de0:	b9a3      	cbnz	r3, 8002e0c <_dtoa_r+0xa04>
 8002de2:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8002de4:	b992      	cbnz	r2, 8002e0c <_dtoa_r+0xa04>
 8002de6:	9a08      	ldr	r2, [sp, #32]
 8002de8:	b982      	cbnz	r2, 8002e0c <_dtoa_r+0xa04>
 8002dea:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
 8002dee:	d029      	beq.n	8002e44 <_dtoa_r+0xa3c>
 8002df0:	9b02      	ldr	r3, [sp, #8]
 8002df2:	2b00      	cmp	r3, #0
 8002df4:	dd01      	ble.n	8002dfa <_dtoa_r+0x9f2>
 8002df6:	f105 0831 	add.w	r8, r5, #49	; 0x31
 8002dfa:	9b07      	ldr	r3, [sp, #28]
 8002dfc:	1c5d      	adds	r5, r3, #1
 8002dfe:	f883 8000 	strb.w	r8, [r3]
 8002e02:	e784      	b.n	8002d0e <_dtoa_r+0x906>
 8002e04:	4638      	mov	r0, r7
 8002e06:	e7c2      	b.n	8002d8e <_dtoa_r+0x986>
 8002e08:	2301      	movs	r3, #1
 8002e0a:	e7e3      	b.n	8002dd4 <_dtoa_r+0x9cc>
 8002e0c:	9a02      	ldr	r2, [sp, #8]
 8002e0e:	2a00      	cmp	r2, #0
 8002e10:	db04      	blt.n	8002e1c <_dtoa_r+0xa14>
 8002e12:	d123      	bne.n	8002e5c <_dtoa_r+0xa54>
 8002e14:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8002e16:	bb0a      	cbnz	r2, 8002e5c <_dtoa_r+0xa54>
 8002e18:	9a08      	ldr	r2, [sp, #32]
 8002e1a:	b9fa      	cbnz	r2, 8002e5c <_dtoa_r+0xa54>
 8002e1c:	2b00      	cmp	r3, #0
 8002e1e:	ddec      	ble.n	8002dfa <_dtoa_r+0x9f2>
 8002e20:	4659      	mov	r1, fp
 8002e22:	2201      	movs	r2, #1
 8002e24:	4620      	mov	r0, r4
 8002e26:	f000 fa93 	bl	8003350 <__lshift>
 8002e2a:	4631      	mov	r1, r6
 8002e2c:	4683      	mov	fp, r0
 8002e2e:	f000 fae3 	bl	80033f8 <__mcmp>
 8002e32:	2800      	cmp	r0, #0
 8002e34:	dc03      	bgt.n	8002e3e <_dtoa_r+0xa36>
 8002e36:	d1e0      	bne.n	8002dfa <_dtoa_r+0x9f2>
 8002e38:	f018 0f01 	tst.w	r8, #1
 8002e3c:	d0dd      	beq.n	8002dfa <_dtoa_r+0x9f2>
 8002e3e:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
 8002e42:	d1d8      	bne.n	8002df6 <_dtoa_r+0x9ee>
 8002e44:	9b07      	ldr	r3, [sp, #28]
 8002e46:	9a07      	ldr	r2, [sp, #28]
 8002e48:	1c5d      	adds	r5, r3, #1
 8002e4a:	2339      	movs	r3, #57	; 0x39
 8002e4c:	7013      	strb	r3, [r2, #0]
 8002e4e:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8002e52:	1e6a      	subs	r2, r5, #1
 8002e54:	2b39      	cmp	r3, #57	; 0x39
 8002e56:	d04d      	beq.n	8002ef4 <_dtoa_r+0xaec>
 8002e58:	3301      	adds	r3, #1
 8002e5a:	e052      	b.n	8002f02 <_dtoa_r+0xafa>
 8002e5c:	9a07      	ldr	r2, [sp, #28]
 8002e5e:	2b00      	cmp	r3, #0
 8002e60:	f102 0501 	add.w	r5, r2, #1
 8002e64:	dd06      	ble.n	8002e74 <_dtoa_r+0xa6c>
 8002e66:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
 8002e6a:	d0eb      	beq.n	8002e44 <_dtoa_r+0xa3c>
 8002e6c:	f108 0801 	add.w	r8, r8, #1
 8002e70:	9b07      	ldr	r3, [sp, #28]
 8002e72:	e7c4      	b.n	8002dfe <_dtoa_r+0x9f6>
 8002e74:	9b06      	ldr	r3, [sp, #24]
 8002e76:	9a04      	ldr	r2, [sp, #16]
 8002e78:	1aeb      	subs	r3, r5, r3
 8002e7a:	4293      	cmp	r3, r2
 8002e7c:	f805 8c01 	strb.w	r8, [r5, #-1]
 8002e80:	d021      	beq.n	8002ec6 <_dtoa_r+0xabe>
 8002e82:	4659      	mov	r1, fp
 8002e84:	2300      	movs	r3, #0
 8002e86:	220a      	movs	r2, #10
 8002e88:	4620      	mov	r0, r4
 8002e8a:	f000 f8eb 	bl	8003064 <__multadd>
 8002e8e:	45b9      	cmp	r9, r7
 8002e90:	4683      	mov	fp, r0
 8002e92:	f04f 0300 	mov.w	r3, #0
 8002e96:	f04f 020a 	mov.w	r2, #10
 8002e9a:	4649      	mov	r1, r9
 8002e9c:	4620      	mov	r0, r4
 8002e9e:	d105      	bne.n	8002eac <_dtoa_r+0xaa4>
 8002ea0:	f000 f8e0 	bl	8003064 <__multadd>
 8002ea4:	4681      	mov	r9, r0
 8002ea6:	4607      	mov	r7, r0
 8002ea8:	9507      	str	r5, [sp, #28]
 8002eaa:	e778      	b.n	8002d9e <_dtoa_r+0x996>
 8002eac:	f000 f8da 	bl	8003064 <__multadd>
 8002eb0:	4639      	mov	r1, r7
 8002eb2:	4681      	mov	r9, r0
 8002eb4:	2300      	movs	r3, #0
 8002eb6:	220a      	movs	r2, #10
 8002eb8:	4620      	mov	r0, r4
 8002eba:	f000 f8d3 	bl	8003064 <__multadd>
 8002ebe:	4607      	mov	r7, r0
 8002ec0:	e7f2      	b.n	8002ea8 <_dtoa_r+0xaa0>
 8002ec2:	f04f 0900 	mov.w	r9, #0
 8002ec6:	4659      	mov	r1, fp
 8002ec8:	2201      	movs	r2, #1
 8002eca:	4620      	mov	r0, r4
 8002ecc:	f000 fa40 	bl	8003350 <__lshift>
 8002ed0:	4631      	mov	r1, r6
 8002ed2:	4683      	mov	fp, r0
 8002ed4:	f000 fa90 	bl	80033f8 <__mcmp>
 8002ed8:	2800      	cmp	r0, #0
 8002eda:	dcb8      	bgt.n	8002e4e <_dtoa_r+0xa46>
 8002edc:	d102      	bne.n	8002ee4 <_dtoa_r+0xadc>
 8002ede:	f018 0f01 	tst.w	r8, #1
 8002ee2:	d1b4      	bne.n	8002e4e <_dtoa_r+0xa46>
 8002ee4:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8002ee8:	1e6a      	subs	r2, r5, #1
 8002eea:	2b30      	cmp	r3, #48	; 0x30
 8002eec:	f47f af0f 	bne.w	8002d0e <_dtoa_r+0x906>
 8002ef0:	4615      	mov	r5, r2
 8002ef2:	e7f7      	b.n	8002ee4 <_dtoa_r+0xadc>
 8002ef4:	9b06      	ldr	r3, [sp, #24]
 8002ef6:	4293      	cmp	r3, r2
 8002ef8:	d105      	bne.n	8002f06 <_dtoa_r+0xafe>
 8002efa:	2331      	movs	r3, #49	; 0x31
 8002efc:	9a06      	ldr	r2, [sp, #24]
 8002efe:	f10a 0a01 	add.w	sl, sl, #1
 8002f02:	7013      	strb	r3, [r2, #0]
 8002f04:	e703      	b.n	8002d0e <_dtoa_r+0x906>
 8002f06:	4615      	mov	r5, r2
 8002f08:	e7a1      	b.n	8002e4e <_dtoa_r+0xa46>
 8002f0a:	4b17      	ldr	r3, [pc, #92]	; (8002f68 <_dtoa_r+0xb60>)
 8002f0c:	f7ff bae1 	b.w	80024d2 <_dtoa_r+0xca>
 8002f10:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8002f12:	2b00      	cmp	r3, #0
 8002f14:	f47f aabb 	bne.w	800248e <_dtoa_r+0x86>
 8002f18:	4b14      	ldr	r3, [pc, #80]	; (8002f6c <_dtoa_r+0xb64>)
 8002f1a:	f7ff bada 	b.w	80024d2 <_dtoa_r+0xca>
 8002f1e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8002f20:	2b01      	cmp	r3, #1
 8002f22:	f77f ae3f 	ble.w	8002ba4 <_dtoa_r+0x79c>
 8002f26:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8002f28:	9308      	str	r3, [sp, #32]
 8002f2a:	e653      	b.n	8002bd4 <_dtoa_r+0x7cc>
 8002f2c:	9b04      	ldr	r3, [sp, #16]
 8002f2e:	2b00      	cmp	r3, #0
 8002f30:	dc03      	bgt.n	8002f3a <_dtoa_r+0xb32>
 8002f32:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8002f34:	2b02      	cmp	r3, #2
 8002f36:	f73f aed5 	bgt.w	8002ce4 <_dtoa_r+0x8dc>
 8002f3a:	9d06      	ldr	r5, [sp, #24]
 8002f3c:	4631      	mov	r1, r6
 8002f3e:	4658      	mov	r0, fp
 8002f40:	f7ff f9d4 	bl	80022ec <quorem>
 8002f44:	9b06      	ldr	r3, [sp, #24]
 8002f46:	f100 0830 	add.w	r8, r0, #48	; 0x30
 8002f4a:	f805 8b01 	strb.w	r8, [r5], #1
 8002f4e:	9a04      	ldr	r2, [sp, #16]
 8002f50:	1aeb      	subs	r3, r5, r3
 8002f52:	429a      	cmp	r2, r3
 8002f54:	ddb5      	ble.n	8002ec2 <_dtoa_r+0xaba>
 8002f56:	4659      	mov	r1, fp
 8002f58:	2300      	movs	r3, #0
 8002f5a:	220a      	movs	r2, #10
 8002f5c:	4620      	mov	r0, r4
 8002f5e:	f000 f881 	bl	8003064 <__multadd>
 8002f62:	4683      	mov	fp, r0
 8002f64:	e7ea      	b.n	8002f3c <_dtoa_r+0xb34>
 8002f66:	bf00      	nop
 8002f68:	08003b06 	.word	0x08003b06
 8002f6c:	08003b2a 	.word	0x08003b2a

08002f70 <_localeconv_r>:
 8002f70:	4b04      	ldr	r3, [pc, #16]	; (8002f84 <_localeconv_r+0x14>)
 8002f72:	681b      	ldr	r3, [r3, #0]
 8002f74:	6a18      	ldr	r0, [r3, #32]
 8002f76:	4b04      	ldr	r3, [pc, #16]	; (8002f88 <_localeconv_r+0x18>)
 8002f78:	2800      	cmp	r0, #0
 8002f7a:	bf08      	it	eq
 8002f7c:	4618      	moveq	r0, r3
 8002f7e:	30f0      	adds	r0, #240	; 0xf0
 8002f80:	4770      	bx	lr
 8002f82:	bf00      	nop
 8002f84:	20000008 	.word	0x20000008
 8002f88:	2000006c 	.word	0x2000006c

08002f8c <malloc>:
 8002f8c:	4b02      	ldr	r3, [pc, #8]	; (8002f98 <malloc+0xc>)
 8002f8e:	4601      	mov	r1, r0
 8002f90:	6818      	ldr	r0, [r3, #0]
 8002f92:	f000 bb53 	b.w	800363c <_malloc_r>
 8002f96:	bf00      	nop
 8002f98:	20000008 	.word	0x20000008

08002f9c <memchr>:
 8002f9c:	b510      	push	{r4, lr}
 8002f9e:	b2c9      	uxtb	r1, r1
 8002fa0:	4402      	add	r2, r0
 8002fa2:	4290      	cmp	r0, r2
 8002fa4:	4603      	mov	r3, r0
 8002fa6:	d101      	bne.n	8002fac <memchr+0x10>
 8002fa8:	2300      	movs	r3, #0
 8002faa:	e003      	b.n	8002fb4 <memchr+0x18>
 8002fac:	781c      	ldrb	r4, [r3, #0]
 8002fae:	3001      	adds	r0, #1
 8002fb0:	428c      	cmp	r4, r1
 8002fb2:	d1f6      	bne.n	8002fa2 <memchr+0x6>
 8002fb4:	4618      	mov	r0, r3
 8002fb6:	bd10      	pop	{r4, pc}

08002fb8 <memcpy>:
 8002fb8:	b510      	push	{r4, lr}
 8002fba:	1e43      	subs	r3, r0, #1
 8002fbc:	440a      	add	r2, r1
 8002fbe:	4291      	cmp	r1, r2
 8002fc0:	d100      	bne.n	8002fc4 <memcpy+0xc>
 8002fc2:	bd10      	pop	{r4, pc}
 8002fc4:	f811 4b01 	ldrb.w	r4, [r1], #1
 8002fc8:	f803 4f01 	strb.w	r4, [r3, #1]!
 8002fcc:	e7f7      	b.n	8002fbe <memcpy+0x6>

08002fce <_Balloc>:
 8002fce:	b570      	push	{r4, r5, r6, lr}
 8002fd0:	6a45      	ldr	r5, [r0, #36]	; 0x24
 8002fd2:	4604      	mov	r4, r0
 8002fd4:	460e      	mov	r6, r1
 8002fd6:	b93d      	cbnz	r5, 8002fe8 <_Balloc+0x1a>
 8002fd8:	2010      	movs	r0, #16
 8002fda:	f7ff ffd7 	bl	8002f8c <malloc>
 8002fde:	6260      	str	r0, [r4, #36]	; 0x24
 8002fe0:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8002fe4:	6005      	str	r5, [r0, #0]
 8002fe6:	60c5      	str	r5, [r0, #12]
 8002fe8:	6a65      	ldr	r5, [r4, #36]	; 0x24
 8002fea:	68eb      	ldr	r3, [r5, #12]
 8002fec:	b183      	cbz	r3, 8003010 <_Balloc+0x42>
 8002fee:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002ff0:	68db      	ldr	r3, [r3, #12]
 8002ff2:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
 8002ff6:	b9b8      	cbnz	r0, 8003028 <_Balloc+0x5a>
 8002ff8:	2101      	movs	r1, #1
 8002ffa:	fa01 f506 	lsl.w	r5, r1, r6
 8002ffe:	1d6a      	adds	r2, r5, #5
 8003000:	0092      	lsls	r2, r2, #2
 8003002:	4620      	mov	r0, r4
 8003004:	f000 fabf 	bl	8003586 <_calloc_r>
 8003008:	b160      	cbz	r0, 8003024 <_Balloc+0x56>
 800300a:	e9c0 6501 	strd	r6, r5, [r0, #4]
 800300e:	e00e      	b.n	800302e <_Balloc+0x60>
 8003010:	2221      	movs	r2, #33	; 0x21
 8003012:	2104      	movs	r1, #4
 8003014:	4620      	mov	r0, r4
 8003016:	f000 fab6 	bl	8003586 <_calloc_r>
 800301a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800301c:	60e8      	str	r0, [r5, #12]
 800301e:	68db      	ldr	r3, [r3, #12]
 8003020:	2b00      	cmp	r3, #0
 8003022:	d1e4      	bne.n	8002fee <_Balloc+0x20>
 8003024:	2000      	movs	r0, #0
 8003026:	bd70      	pop	{r4, r5, r6, pc}
 8003028:	6802      	ldr	r2, [r0, #0]
 800302a:	f843 2026 	str.w	r2, [r3, r6, lsl #2]
 800302e:	2300      	movs	r3, #0
 8003030:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8003034:	e7f7      	b.n	8003026 <_Balloc+0x58>

08003036 <_Bfree>:
 8003036:	b570      	push	{r4, r5, r6, lr}
 8003038:	6a44      	ldr	r4, [r0, #36]	; 0x24
 800303a:	4606      	mov	r6, r0
 800303c:	460d      	mov	r5, r1
 800303e:	b93c      	cbnz	r4, 8003050 <_Bfree+0x1a>
 8003040:	2010      	movs	r0, #16
 8003042:	f7ff ffa3 	bl	8002f8c <malloc>
 8003046:	6270      	str	r0, [r6, #36]	; 0x24
 8003048:	e9c0 4401 	strd	r4, r4, [r0, #4]
 800304c:	6004      	str	r4, [r0, #0]
 800304e:	60c4      	str	r4, [r0, #12]
 8003050:	b13d      	cbz	r5, 8003062 <_Bfree+0x2c>
 8003052:	6a73      	ldr	r3, [r6, #36]	; 0x24
 8003054:	686a      	ldr	r2, [r5, #4]
 8003056:	68db      	ldr	r3, [r3, #12]
 8003058:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800305c:	6029      	str	r1, [r5, #0]
 800305e:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
 8003062:	bd70      	pop	{r4, r5, r6, pc}

08003064 <__multadd>:
 8003064:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003068:	461f      	mov	r7, r3
 800306a:	4606      	mov	r6, r0
 800306c:	460c      	mov	r4, r1
 800306e:	2300      	movs	r3, #0
 8003070:	690d      	ldr	r5, [r1, #16]
 8003072:	f101 0c14 	add.w	ip, r1, #20
 8003076:	f8dc 0000 	ldr.w	r0, [ip]
 800307a:	3301      	adds	r3, #1
 800307c:	b281      	uxth	r1, r0
 800307e:	fb02 7101 	mla	r1, r2, r1, r7
 8003082:	0c00      	lsrs	r0, r0, #16
 8003084:	0c0f      	lsrs	r7, r1, #16
 8003086:	fb02 7000 	mla	r0, r2, r0, r7
 800308a:	b289      	uxth	r1, r1
 800308c:	eb01 4100 	add.w	r1, r1, r0, lsl #16
 8003090:	429d      	cmp	r5, r3
 8003092:	ea4f 4710 	mov.w	r7, r0, lsr #16
 8003096:	f84c 1b04 	str.w	r1, [ip], #4
 800309a:	dcec      	bgt.n	8003076 <__multadd+0x12>
 800309c:	b1d7      	cbz	r7, 80030d4 <__multadd+0x70>
 800309e:	68a3      	ldr	r3, [r4, #8]
 80030a0:	42ab      	cmp	r3, r5
 80030a2:	dc12      	bgt.n	80030ca <__multadd+0x66>
 80030a4:	6861      	ldr	r1, [r4, #4]
 80030a6:	4630      	mov	r0, r6
 80030a8:	3101      	adds	r1, #1
 80030aa:	f7ff ff90 	bl	8002fce <_Balloc>
 80030ae:	4680      	mov	r8, r0
 80030b0:	6922      	ldr	r2, [r4, #16]
 80030b2:	f104 010c 	add.w	r1, r4, #12
 80030b6:	3202      	adds	r2, #2
 80030b8:	0092      	lsls	r2, r2, #2
 80030ba:	300c      	adds	r0, #12
 80030bc:	f7ff ff7c 	bl	8002fb8 <memcpy>
 80030c0:	4621      	mov	r1, r4
 80030c2:	4630      	mov	r0, r6
 80030c4:	f7ff ffb7 	bl	8003036 <_Bfree>
 80030c8:	4644      	mov	r4, r8
 80030ca:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 80030ce:	3501      	adds	r5, #1
 80030d0:	615f      	str	r7, [r3, #20]
 80030d2:	6125      	str	r5, [r4, #16]
 80030d4:	4620      	mov	r0, r4
 80030d6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080030da <__hi0bits>:
 80030da:	0c02      	lsrs	r2, r0, #16
 80030dc:	0412      	lsls	r2, r2, #16
 80030de:	4603      	mov	r3, r0
 80030e0:	b9b2      	cbnz	r2, 8003110 <__hi0bits+0x36>
 80030e2:	0403      	lsls	r3, r0, #16
 80030e4:	2010      	movs	r0, #16
 80030e6:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 80030ea:	bf04      	itt	eq
 80030ec:	021b      	lsleq	r3, r3, #8
 80030ee:	3008      	addeq	r0, #8
 80030f0:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 80030f4:	bf04      	itt	eq
 80030f6:	011b      	lsleq	r3, r3, #4
 80030f8:	3004      	addeq	r0, #4
 80030fa:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 80030fe:	bf04      	itt	eq
 8003100:	009b      	lsleq	r3, r3, #2
 8003102:	3002      	addeq	r0, #2
 8003104:	2b00      	cmp	r3, #0
 8003106:	db06      	blt.n	8003116 <__hi0bits+0x3c>
 8003108:	005b      	lsls	r3, r3, #1
 800310a:	d503      	bpl.n	8003114 <__hi0bits+0x3a>
 800310c:	3001      	adds	r0, #1
 800310e:	4770      	bx	lr
 8003110:	2000      	movs	r0, #0
 8003112:	e7e8      	b.n	80030e6 <__hi0bits+0xc>
 8003114:	2020      	movs	r0, #32
 8003116:	4770      	bx	lr

08003118 <__lo0bits>:
 8003118:	6803      	ldr	r3, [r0, #0]
 800311a:	4601      	mov	r1, r0
 800311c:	f013 0207 	ands.w	r2, r3, #7
 8003120:	d00b      	beq.n	800313a <__lo0bits+0x22>
 8003122:	07da      	lsls	r2, r3, #31
 8003124:	d423      	bmi.n	800316e <__lo0bits+0x56>
 8003126:	0798      	lsls	r0, r3, #30
 8003128:	bf49      	itett	mi
 800312a:	085b      	lsrmi	r3, r3, #1
 800312c:	089b      	lsrpl	r3, r3, #2
 800312e:	2001      	movmi	r0, #1
 8003130:	600b      	strmi	r3, [r1, #0]
 8003132:	bf5c      	itt	pl
 8003134:	600b      	strpl	r3, [r1, #0]
 8003136:	2002      	movpl	r0, #2
 8003138:	4770      	bx	lr
 800313a:	b298      	uxth	r0, r3
 800313c:	b9a8      	cbnz	r0, 800316a <__lo0bits+0x52>
 800313e:	2010      	movs	r0, #16
 8003140:	0c1b      	lsrs	r3, r3, #16
 8003142:	f013 0fff 	tst.w	r3, #255	; 0xff
 8003146:	bf04      	itt	eq
 8003148:	0a1b      	lsreq	r3, r3, #8
 800314a:	3008      	addeq	r0, #8
 800314c:	071a      	lsls	r2, r3, #28
 800314e:	bf04      	itt	eq
 8003150:	091b      	lsreq	r3, r3, #4
 8003152:	3004      	addeq	r0, #4
 8003154:	079a      	lsls	r2, r3, #30
 8003156:	bf04      	itt	eq
 8003158:	089b      	lsreq	r3, r3, #2
 800315a:	3002      	addeq	r0, #2
 800315c:	07da      	lsls	r2, r3, #31
 800315e:	d402      	bmi.n	8003166 <__lo0bits+0x4e>
 8003160:	085b      	lsrs	r3, r3, #1
 8003162:	d006      	beq.n	8003172 <__lo0bits+0x5a>
 8003164:	3001      	adds	r0, #1
 8003166:	600b      	str	r3, [r1, #0]
 8003168:	4770      	bx	lr
 800316a:	4610      	mov	r0, r2
 800316c:	e7e9      	b.n	8003142 <__lo0bits+0x2a>
 800316e:	2000      	movs	r0, #0
 8003170:	4770      	bx	lr
 8003172:	2020      	movs	r0, #32
 8003174:	4770      	bx	lr

08003176 <__i2b>:
 8003176:	b510      	push	{r4, lr}
 8003178:	460c      	mov	r4, r1
 800317a:	2101      	movs	r1, #1
 800317c:	f7ff ff27 	bl	8002fce <_Balloc>
 8003180:	2201      	movs	r2, #1
 8003182:	6144      	str	r4, [r0, #20]
 8003184:	6102      	str	r2, [r0, #16]
 8003186:	bd10      	pop	{r4, pc}

08003188 <__multiply>:
 8003188:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800318c:	4614      	mov	r4, r2
 800318e:	690a      	ldr	r2, [r1, #16]
 8003190:	6923      	ldr	r3, [r4, #16]
 8003192:	4688      	mov	r8, r1
 8003194:	429a      	cmp	r2, r3
 8003196:	bfbe      	ittt	lt
 8003198:	460b      	movlt	r3, r1
 800319a:	46a0      	movlt	r8, r4
 800319c:	461c      	movlt	r4, r3
 800319e:	f8d8 7010 	ldr.w	r7, [r8, #16]
 80031a2:	f8d4 9010 	ldr.w	r9, [r4, #16]
 80031a6:	f8d8 3008 	ldr.w	r3, [r8, #8]
 80031aa:	f8d8 1004 	ldr.w	r1, [r8, #4]
 80031ae:	eb07 0609 	add.w	r6, r7, r9
 80031b2:	42b3      	cmp	r3, r6
 80031b4:	bfb8      	it	lt
 80031b6:	3101      	addlt	r1, #1
 80031b8:	f7ff ff09 	bl	8002fce <_Balloc>
 80031bc:	f100 0514 	add.w	r5, r0, #20
 80031c0:	462b      	mov	r3, r5
 80031c2:	2200      	movs	r2, #0
 80031c4:	eb05 0e86 	add.w	lr, r5, r6, lsl #2
 80031c8:	4573      	cmp	r3, lr
 80031ca:	d316      	bcc.n	80031fa <__multiply+0x72>
 80031cc:	f104 0214 	add.w	r2, r4, #20
 80031d0:	f108 0114 	add.w	r1, r8, #20
 80031d4:	eb02 0389 	add.w	r3, r2, r9, lsl #2
 80031d8:	eb01 0787 	add.w	r7, r1, r7, lsl #2
 80031dc:	9300      	str	r3, [sp, #0]
 80031de:	9b00      	ldr	r3, [sp, #0]
 80031e0:	9201      	str	r2, [sp, #4]
 80031e2:	4293      	cmp	r3, r2
 80031e4:	d80c      	bhi.n	8003200 <__multiply+0x78>
 80031e6:	2e00      	cmp	r6, #0
 80031e8:	dd03      	ble.n	80031f2 <__multiply+0x6a>
 80031ea:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
 80031ee:	2b00      	cmp	r3, #0
 80031f0:	d05d      	beq.n	80032ae <__multiply+0x126>
 80031f2:	6106      	str	r6, [r0, #16]
 80031f4:	b003      	add	sp, #12
 80031f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80031fa:	f843 2b04 	str.w	r2, [r3], #4
 80031fe:	e7e3      	b.n	80031c8 <__multiply+0x40>
 8003200:	f8b2 b000 	ldrh.w	fp, [r2]
 8003204:	f1bb 0f00 	cmp.w	fp, #0
 8003208:	d023      	beq.n	8003252 <__multiply+0xca>
 800320a:	4689      	mov	r9, r1
 800320c:	46ac      	mov	ip, r5
 800320e:	f04f 0800 	mov.w	r8, #0
 8003212:	f859 4b04 	ldr.w	r4, [r9], #4
 8003216:	f8dc a000 	ldr.w	sl, [ip]
 800321a:	b2a3      	uxth	r3, r4
 800321c:	fa1f fa8a 	uxth.w	sl, sl
 8003220:	fb0b a303 	mla	r3, fp, r3, sl
 8003224:	ea4f 4a14 	mov.w	sl, r4, lsr #16
 8003228:	f8dc 4000 	ldr.w	r4, [ip]
 800322c:	4443      	add	r3, r8
 800322e:	ea4f 4814 	mov.w	r8, r4, lsr #16
 8003232:	fb0b 840a 	mla	r4, fp, sl, r8
 8003236:	46e2      	mov	sl, ip
 8003238:	eb04 4413 	add.w	r4, r4, r3, lsr #16
 800323c:	b29b      	uxth	r3, r3
 800323e:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8003242:	454f      	cmp	r7, r9
 8003244:	ea4f 4814 	mov.w	r8, r4, lsr #16
 8003248:	f84a 3b04 	str.w	r3, [sl], #4
 800324c:	d82b      	bhi.n	80032a6 <__multiply+0x11e>
 800324e:	f8cc 8004 	str.w	r8, [ip, #4]
 8003252:	9b01      	ldr	r3, [sp, #4]
 8003254:	3204      	adds	r2, #4
 8003256:	f8b3 a002 	ldrh.w	sl, [r3, #2]
 800325a:	f1ba 0f00 	cmp.w	sl, #0
 800325e:	d020      	beq.n	80032a2 <__multiply+0x11a>
 8003260:	4689      	mov	r9, r1
 8003262:	46a8      	mov	r8, r5
 8003264:	f04f 0b00 	mov.w	fp, #0
 8003268:	682b      	ldr	r3, [r5, #0]
 800326a:	f8b9 c000 	ldrh.w	ip, [r9]
 800326e:	f8b8 4002 	ldrh.w	r4, [r8, #2]
 8003272:	b29b      	uxth	r3, r3
 8003274:	fb0a 440c 	mla	r4, sl, ip, r4
 8003278:	46c4      	mov	ip, r8
 800327a:	445c      	add	r4, fp
 800327c:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8003280:	f84c 3b04 	str.w	r3, [ip], #4
 8003284:	f859 3b04 	ldr.w	r3, [r9], #4
 8003288:	f8b8 b004 	ldrh.w	fp, [r8, #4]
 800328c:	0c1b      	lsrs	r3, r3, #16
 800328e:	fb0a b303 	mla	r3, sl, r3, fp
 8003292:	454f      	cmp	r7, r9
 8003294:	eb03 4314 	add.w	r3, r3, r4, lsr #16
 8003298:	ea4f 4b13 	mov.w	fp, r3, lsr #16
 800329c:	d805      	bhi.n	80032aa <__multiply+0x122>
 800329e:	f8c8 3004 	str.w	r3, [r8, #4]
 80032a2:	3504      	adds	r5, #4
 80032a4:	e79b      	b.n	80031de <__multiply+0x56>
 80032a6:	46d4      	mov	ip, sl
 80032a8:	e7b3      	b.n	8003212 <__multiply+0x8a>
 80032aa:	46e0      	mov	r8, ip
 80032ac:	e7dd      	b.n	800326a <__multiply+0xe2>
 80032ae:	3e01      	subs	r6, #1
 80032b0:	e799      	b.n	80031e6 <__multiply+0x5e>
	...

080032b4 <__pow5mult>:
 80032b4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80032b8:	4615      	mov	r5, r2
 80032ba:	f012 0203 	ands.w	r2, r2, #3
 80032be:	4606      	mov	r6, r0
 80032c0:	460f      	mov	r7, r1
 80032c2:	d007      	beq.n	80032d4 <__pow5mult+0x20>
 80032c4:	4c21      	ldr	r4, [pc, #132]	; (800334c <__pow5mult+0x98>)
 80032c6:	3a01      	subs	r2, #1
 80032c8:	2300      	movs	r3, #0
 80032ca:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 80032ce:	f7ff fec9 	bl	8003064 <__multadd>
 80032d2:	4607      	mov	r7, r0
 80032d4:	10ad      	asrs	r5, r5, #2
 80032d6:	d035      	beq.n	8003344 <__pow5mult+0x90>
 80032d8:	6a74      	ldr	r4, [r6, #36]	; 0x24
 80032da:	b93c      	cbnz	r4, 80032ec <__pow5mult+0x38>
 80032dc:	2010      	movs	r0, #16
 80032de:	f7ff fe55 	bl	8002f8c <malloc>
 80032e2:	6270      	str	r0, [r6, #36]	; 0x24
 80032e4:	e9c0 4401 	strd	r4, r4, [r0, #4]
 80032e8:	6004      	str	r4, [r0, #0]
 80032ea:	60c4      	str	r4, [r0, #12]
 80032ec:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 80032f0:	f8d8 4008 	ldr.w	r4, [r8, #8]
 80032f4:	b94c      	cbnz	r4, 800330a <__pow5mult+0x56>
 80032f6:	f240 2171 	movw	r1, #625	; 0x271
 80032fa:	4630      	mov	r0, r6
 80032fc:	f7ff ff3b 	bl	8003176 <__i2b>
 8003300:	2300      	movs	r3, #0
 8003302:	4604      	mov	r4, r0
 8003304:	f8c8 0008 	str.w	r0, [r8, #8]
 8003308:	6003      	str	r3, [r0, #0]
 800330a:	f04f 0800 	mov.w	r8, #0
 800330e:	07eb      	lsls	r3, r5, #31
 8003310:	d50a      	bpl.n	8003328 <__pow5mult+0x74>
 8003312:	4639      	mov	r1, r7
 8003314:	4622      	mov	r2, r4
 8003316:	4630      	mov	r0, r6
 8003318:	f7ff ff36 	bl	8003188 <__multiply>
 800331c:	4681      	mov	r9, r0
 800331e:	4639      	mov	r1, r7
 8003320:	4630      	mov	r0, r6
 8003322:	f7ff fe88 	bl	8003036 <_Bfree>
 8003326:	464f      	mov	r7, r9
 8003328:	106d      	asrs	r5, r5, #1
 800332a:	d00b      	beq.n	8003344 <__pow5mult+0x90>
 800332c:	6820      	ldr	r0, [r4, #0]
 800332e:	b938      	cbnz	r0, 8003340 <__pow5mult+0x8c>
 8003330:	4622      	mov	r2, r4
 8003332:	4621      	mov	r1, r4
 8003334:	4630      	mov	r0, r6
 8003336:	f7ff ff27 	bl	8003188 <__multiply>
 800333a:	6020      	str	r0, [r4, #0]
 800333c:	f8c0 8000 	str.w	r8, [r0]
 8003340:	4604      	mov	r4, r0
 8003342:	e7e4      	b.n	800330e <__pow5mult+0x5a>
 8003344:	4638      	mov	r0, r7
 8003346:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800334a:	bf00      	nop
 800334c:	08003c28 	.word	0x08003c28

08003350 <__lshift>:
 8003350:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003354:	460c      	mov	r4, r1
 8003356:	4607      	mov	r7, r0
 8003358:	4616      	mov	r6, r2
 800335a:	6923      	ldr	r3, [r4, #16]
 800335c:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8003360:	eb0a 0903 	add.w	r9, sl, r3
 8003364:	6849      	ldr	r1, [r1, #4]
 8003366:	68a3      	ldr	r3, [r4, #8]
 8003368:	f109 0501 	add.w	r5, r9, #1
 800336c:	42ab      	cmp	r3, r5
 800336e:	db32      	blt.n	80033d6 <__lshift+0x86>
 8003370:	4638      	mov	r0, r7
 8003372:	f7ff fe2c 	bl	8002fce <_Balloc>
 8003376:	2300      	movs	r3, #0
 8003378:	4680      	mov	r8, r0
 800337a:	461a      	mov	r2, r3
 800337c:	f100 0114 	add.w	r1, r0, #20
 8003380:	4553      	cmp	r3, sl
 8003382:	db2b      	blt.n	80033dc <__lshift+0x8c>
 8003384:	6920      	ldr	r0, [r4, #16]
 8003386:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 800338a:	f104 0314 	add.w	r3, r4, #20
 800338e:	f016 021f 	ands.w	r2, r6, #31
 8003392:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8003396:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 800339a:	d025      	beq.n	80033e8 <__lshift+0x98>
 800339c:	2000      	movs	r0, #0
 800339e:	f1c2 0e20 	rsb	lr, r2, #32
 80033a2:	468a      	mov	sl, r1
 80033a4:	681e      	ldr	r6, [r3, #0]
 80033a6:	4096      	lsls	r6, r2
 80033a8:	4330      	orrs	r0, r6
 80033aa:	f84a 0b04 	str.w	r0, [sl], #4
 80033ae:	f853 0b04 	ldr.w	r0, [r3], #4
 80033b2:	459c      	cmp	ip, r3
 80033b4:	fa20 f00e 	lsr.w	r0, r0, lr
 80033b8:	d814      	bhi.n	80033e4 <__lshift+0x94>
 80033ba:	6048      	str	r0, [r1, #4]
 80033bc:	b108      	cbz	r0, 80033c2 <__lshift+0x72>
 80033be:	f109 0502 	add.w	r5, r9, #2
 80033c2:	3d01      	subs	r5, #1
 80033c4:	4638      	mov	r0, r7
 80033c6:	f8c8 5010 	str.w	r5, [r8, #16]
 80033ca:	4621      	mov	r1, r4
 80033cc:	f7ff fe33 	bl	8003036 <_Bfree>
 80033d0:	4640      	mov	r0, r8
 80033d2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80033d6:	3101      	adds	r1, #1
 80033d8:	005b      	lsls	r3, r3, #1
 80033da:	e7c7      	b.n	800336c <__lshift+0x1c>
 80033dc:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80033e0:	3301      	adds	r3, #1
 80033e2:	e7cd      	b.n	8003380 <__lshift+0x30>
 80033e4:	4651      	mov	r1, sl
 80033e6:	e7dc      	b.n	80033a2 <__lshift+0x52>
 80033e8:	3904      	subs	r1, #4
 80033ea:	f853 2b04 	ldr.w	r2, [r3], #4
 80033ee:	459c      	cmp	ip, r3
 80033f0:	f841 2f04 	str.w	r2, [r1, #4]!
 80033f4:	d8f9      	bhi.n	80033ea <__lshift+0x9a>
 80033f6:	e7e4      	b.n	80033c2 <__lshift+0x72>

080033f8 <__mcmp>:
 80033f8:	6903      	ldr	r3, [r0, #16]
 80033fa:	690a      	ldr	r2, [r1, #16]
 80033fc:	b530      	push	{r4, r5, lr}
 80033fe:	1a9b      	subs	r3, r3, r2
 8003400:	d10c      	bne.n	800341c <__mcmp+0x24>
 8003402:	0092      	lsls	r2, r2, #2
 8003404:	3014      	adds	r0, #20
 8003406:	3114      	adds	r1, #20
 8003408:	1884      	adds	r4, r0, r2
 800340a:	4411      	add	r1, r2
 800340c:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8003410:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8003414:	4295      	cmp	r5, r2
 8003416:	d003      	beq.n	8003420 <__mcmp+0x28>
 8003418:	d305      	bcc.n	8003426 <__mcmp+0x2e>
 800341a:	2301      	movs	r3, #1
 800341c:	4618      	mov	r0, r3
 800341e:	bd30      	pop	{r4, r5, pc}
 8003420:	42a0      	cmp	r0, r4
 8003422:	d3f3      	bcc.n	800340c <__mcmp+0x14>
 8003424:	e7fa      	b.n	800341c <__mcmp+0x24>
 8003426:	f04f 33ff 	mov.w	r3, #4294967295
 800342a:	e7f7      	b.n	800341c <__mcmp+0x24>

0800342c <__mdiff>:
 800342c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003430:	460d      	mov	r5, r1
 8003432:	4607      	mov	r7, r0
 8003434:	4611      	mov	r1, r2
 8003436:	4628      	mov	r0, r5
 8003438:	4614      	mov	r4, r2
 800343a:	f7ff ffdd 	bl	80033f8 <__mcmp>
 800343e:	1e06      	subs	r6, r0, #0
 8003440:	d108      	bne.n	8003454 <__mdiff+0x28>
 8003442:	4631      	mov	r1, r6
 8003444:	4638      	mov	r0, r7
 8003446:	f7ff fdc2 	bl	8002fce <_Balloc>
 800344a:	2301      	movs	r3, #1
 800344c:	e9c0 3604 	strd	r3, r6, [r0, #16]
 8003450:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003454:	bfa4      	itt	ge
 8003456:	4623      	movge	r3, r4
 8003458:	462c      	movge	r4, r5
 800345a:	4638      	mov	r0, r7
 800345c:	6861      	ldr	r1, [r4, #4]
 800345e:	bfa6      	itte	ge
 8003460:	461d      	movge	r5, r3
 8003462:	2600      	movge	r6, #0
 8003464:	2601      	movlt	r6, #1
 8003466:	f7ff fdb2 	bl	8002fce <_Balloc>
 800346a:	f04f 0e00 	mov.w	lr, #0
 800346e:	60c6      	str	r6, [r0, #12]
 8003470:	692b      	ldr	r3, [r5, #16]
 8003472:	6926      	ldr	r6, [r4, #16]
 8003474:	f104 0214 	add.w	r2, r4, #20
 8003478:	f105 0914 	add.w	r9, r5, #20
 800347c:	eb02 0786 	add.w	r7, r2, r6, lsl #2
 8003480:	eb09 0883 	add.w	r8, r9, r3, lsl #2
 8003484:	f100 0114 	add.w	r1, r0, #20
 8003488:	f852 ab04 	ldr.w	sl, [r2], #4
 800348c:	f859 5b04 	ldr.w	r5, [r9], #4
 8003490:	fa1f f38a 	uxth.w	r3, sl
 8003494:	4473      	add	r3, lr
 8003496:	b2ac      	uxth	r4, r5
 8003498:	1b1b      	subs	r3, r3, r4
 800349a:	0c2c      	lsrs	r4, r5, #16
 800349c:	ebc4 441a 	rsb	r4, r4, sl, lsr #16
 80034a0:	eb04 4423 	add.w	r4, r4, r3, asr #16
 80034a4:	b29b      	uxth	r3, r3
 80034a6:	ea4f 4e24 	mov.w	lr, r4, asr #16
 80034aa:	45c8      	cmp	r8, r9
 80034ac:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
 80034b0:	4694      	mov	ip, r2
 80034b2:	f841 4b04 	str.w	r4, [r1], #4
 80034b6:	d8e7      	bhi.n	8003488 <__mdiff+0x5c>
 80034b8:	45bc      	cmp	ip, r7
 80034ba:	d304      	bcc.n	80034c6 <__mdiff+0x9a>
 80034bc:	f851 3d04 	ldr.w	r3, [r1, #-4]!
 80034c0:	b183      	cbz	r3, 80034e4 <__mdiff+0xb8>
 80034c2:	6106      	str	r6, [r0, #16]
 80034c4:	e7c4      	b.n	8003450 <__mdiff+0x24>
 80034c6:	f85c 4b04 	ldr.w	r4, [ip], #4
 80034ca:	b2a2      	uxth	r2, r4
 80034cc:	4472      	add	r2, lr
 80034ce:	1413      	asrs	r3, r2, #16
 80034d0:	eb03 4314 	add.w	r3, r3, r4, lsr #16
 80034d4:	b292      	uxth	r2, r2
 80034d6:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 80034da:	ea4f 4e23 	mov.w	lr, r3, asr #16
 80034de:	f841 2b04 	str.w	r2, [r1], #4
 80034e2:	e7e9      	b.n	80034b8 <__mdiff+0x8c>
 80034e4:	3e01      	subs	r6, #1
 80034e6:	e7e9      	b.n	80034bc <__mdiff+0x90>

080034e8 <__d2b>:
 80034e8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80034ec:	461c      	mov	r4, r3
 80034ee:	e9dd 6508 	ldrd	r6, r5, [sp, #32]
 80034f2:	2101      	movs	r1, #1
 80034f4:	4690      	mov	r8, r2
 80034f6:	f7ff fd6a 	bl	8002fce <_Balloc>
 80034fa:	f3c4 0213 	ubfx	r2, r4, #0, #20
 80034fe:	f3c4 540a 	ubfx	r4, r4, #20, #11
 8003502:	4607      	mov	r7, r0
 8003504:	bb34      	cbnz	r4, 8003554 <__d2b+0x6c>
 8003506:	9201      	str	r2, [sp, #4]
 8003508:	f1b8 0200 	subs.w	r2, r8, #0
 800350c:	d027      	beq.n	800355e <__d2b+0x76>
 800350e:	a802      	add	r0, sp, #8
 8003510:	f840 2d08 	str.w	r2, [r0, #-8]!
 8003514:	f7ff fe00 	bl	8003118 <__lo0bits>
 8003518:	9900      	ldr	r1, [sp, #0]
 800351a:	b1f0      	cbz	r0, 800355a <__d2b+0x72>
 800351c:	9a01      	ldr	r2, [sp, #4]
 800351e:	f1c0 0320 	rsb	r3, r0, #32
 8003522:	fa02 f303 	lsl.w	r3, r2, r3
 8003526:	430b      	orrs	r3, r1
 8003528:	40c2      	lsrs	r2, r0
 800352a:	617b      	str	r3, [r7, #20]
 800352c:	9201      	str	r2, [sp, #4]
 800352e:	9b01      	ldr	r3, [sp, #4]
 8003530:	2b00      	cmp	r3, #0
 8003532:	bf14      	ite	ne
 8003534:	2102      	movne	r1, #2
 8003536:	2101      	moveq	r1, #1
 8003538:	61bb      	str	r3, [r7, #24]
 800353a:	6139      	str	r1, [r7, #16]
 800353c:	b1c4      	cbz	r4, 8003570 <__d2b+0x88>
 800353e:	f2a4 4433 	subw	r4, r4, #1075	; 0x433
 8003542:	4404      	add	r4, r0
 8003544:	6034      	str	r4, [r6, #0]
 8003546:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 800354a:	6028      	str	r0, [r5, #0]
 800354c:	4638      	mov	r0, r7
 800354e:	b002      	add	sp, #8
 8003550:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003554:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8003558:	e7d5      	b.n	8003506 <__d2b+0x1e>
 800355a:	6179      	str	r1, [r7, #20]
 800355c:	e7e7      	b.n	800352e <__d2b+0x46>
 800355e:	a801      	add	r0, sp, #4
 8003560:	f7ff fdda 	bl	8003118 <__lo0bits>
 8003564:	2101      	movs	r1, #1
 8003566:	9b01      	ldr	r3, [sp, #4]
 8003568:	6139      	str	r1, [r7, #16]
 800356a:	617b      	str	r3, [r7, #20]
 800356c:	3020      	adds	r0, #32
 800356e:	e7e5      	b.n	800353c <__d2b+0x54>
 8003570:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8003574:	eb07 0381 	add.w	r3, r7, r1, lsl #2
 8003578:	6030      	str	r0, [r6, #0]
 800357a:	6918      	ldr	r0, [r3, #16]
 800357c:	f7ff fdad 	bl	80030da <__hi0bits>
 8003580:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
 8003584:	e7e1      	b.n	800354a <__d2b+0x62>

08003586 <_calloc_r>:
 8003586:	b538      	push	{r3, r4, r5, lr}
 8003588:	fb02 f401 	mul.w	r4, r2, r1
 800358c:	4621      	mov	r1, r4
 800358e:	f000 f855 	bl	800363c <_malloc_r>
 8003592:	4605      	mov	r5, r0
 8003594:	b118      	cbz	r0, 800359e <_calloc_r+0x18>
 8003596:	4622      	mov	r2, r4
 8003598:	2100      	movs	r1, #0
 800359a:	f7fe fa2f 	bl	80019fc <memset>
 800359e:	4628      	mov	r0, r5
 80035a0:	bd38      	pop	{r3, r4, r5, pc}
	...

080035a4 <_free_r>:
 80035a4:	b538      	push	{r3, r4, r5, lr}
 80035a6:	4605      	mov	r5, r0
 80035a8:	2900      	cmp	r1, #0
 80035aa:	d043      	beq.n	8003634 <_free_r+0x90>
 80035ac:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80035b0:	1f0c      	subs	r4, r1, #4
 80035b2:	2b00      	cmp	r3, #0
 80035b4:	bfb8      	it	lt
 80035b6:	18e4      	addlt	r4, r4, r3
 80035b8:	f000 fa27 	bl	8003a0a <__malloc_lock>
 80035bc:	4a1e      	ldr	r2, [pc, #120]	; (8003638 <_free_r+0x94>)
 80035be:	6813      	ldr	r3, [r2, #0]
 80035c0:	4610      	mov	r0, r2
 80035c2:	b933      	cbnz	r3, 80035d2 <_free_r+0x2e>
 80035c4:	6063      	str	r3, [r4, #4]
 80035c6:	6014      	str	r4, [r2, #0]
 80035c8:	4628      	mov	r0, r5
 80035ca:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80035ce:	f000 ba1d 	b.w	8003a0c <__malloc_unlock>
 80035d2:	42a3      	cmp	r3, r4
 80035d4:	d90b      	bls.n	80035ee <_free_r+0x4a>
 80035d6:	6821      	ldr	r1, [r4, #0]
 80035d8:	1862      	adds	r2, r4, r1
 80035da:	4293      	cmp	r3, r2
 80035dc:	bf01      	itttt	eq
 80035de:	681a      	ldreq	r2, [r3, #0]
 80035e0:	685b      	ldreq	r3, [r3, #4]
 80035e2:	1852      	addeq	r2, r2, r1
 80035e4:	6022      	streq	r2, [r4, #0]
 80035e6:	6063      	str	r3, [r4, #4]
 80035e8:	6004      	str	r4, [r0, #0]
 80035ea:	e7ed      	b.n	80035c8 <_free_r+0x24>
 80035ec:	4613      	mov	r3, r2
 80035ee:	685a      	ldr	r2, [r3, #4]
 80035f0:	b10a      	cbz	r2, 80035f6 <_free_r+0x52>
 80035f2:	42a2      	cmp	r2, r4
 80035f4:	d9fa      	bls.n	80035ec <_free_r+0x48>
 80035f6:	6819      	ldr	r1, [r3, #0]
 80035f8:	1858      	adds	r0, r3, r1
 80035fa:	42a0      	cmp	r0, r4
 80035fc:	d10b      	bne.n	8003616 <_free_r+0x72>
 80035fe:	6820      	ldr	r0, [r4, #0]
 8003600:	4401      	add	r1, r0
 8003602:	1858      	adds	r0, r3, r1
 8003604:	4282      	cmp	r2, r0
 8003606:	6019      	str	r1, [r3, #0]
 8003608:	d1de      	bne.n	80035c8 <_free_r+0x24>
 800360a:	6810      	ldr	r0, [r2, #0]
 800360c:	6852      	ldr	r2, [r2, #4]
 800360e:	4401      	add	r1, r0
 8003610:	6019      	str	r1, [r3, #0]
 8003612:	605a      	str	r2, [r3, #4]
 8003614:	e7d8      	b.n	80035c8 <_free_r+0x24>
 8003616:	d902      	bls.n	800361e <_free_r+0x7a>
 8003618:	230c      	movs	r3, #12
 800361a:	602b      	str	r3, [r5, #0]
 800361c:	e7d4      	b.n	80035c8 <_free_r+0x24>
 800361e:	6820      	ldr	r0, [r4, #0]
 8003620:	1821      	adds	r1, r4, r0
 8003622:	428a      	cmp	r2, r1
 8003624:	bf01      	itttt	eq
 8003626:	6811      	ldreq	r1, [r2, #0]
 8003628:	6852      	ldreq	r2, [r2, #4]
 800362a:	1809      	addeq	r1, r1, r0
 800362c:	6021      	streq	r1, [r4, #0]
 800362e:	6062      	str	r2, [r4, #4]
 8003630:	605c      	str	r4, [r3, #4]
 8003632:	e7c9      	b.n	80035c8 <_free_r+0x24>
 8003634:	bd38      	pop	{r3, r4, r5, pc}
 8003636:	bf00      	nop
 8003638:	200001f4 	.word	0x200001f4

0800363c <_malloc_r>:
 800363c:	b570      	push	{r4, r5, r6, lr}
 800363e:	1ccd      	adds	r5, r1, #3
 8003640:	f025 0503 	bic.w	r5, r5, #3
 8003644:	3508      	adds	r5, #8
 8003646:	2d0c      	cmp	r5, #12
 8003648:	bf38      	it	cc
 800364a:	250c      	movcc	r5, #12
 800364c:	2d00      	cmp	r5, #0
 800364e:	4606      	mov	r6, r0
 8003650:	db01      	blt.n	8003656 <_malloc_r+0x1a>
 8003652:	42a9      	cmp	r1, r5
 8003654:	d903      	bls.n	800365e <_malloc_r+0x22>
 8003656:	230c      	movs	r3, #12
 8003658:	6033      	str	r3, [r6, #0]
 800365a:	2000      	movs	r0, #0
 800365c:	bd70      	pop	{r4, r5, r6, pc}
 800365e:	f000 f9d4 	bl	8003a0a <__malloc_lock>
 8003662:	4a21      	ldr	r2, [pc, #132]	; (80036e8 <_malloc_r+0xac>)
 8003664:	6814      	ldr	r4, [r2, #0]
 8003666:	4621      	mov	r1, r4
 8003668:	b991      	cbnz	r1, 8003690 <_malloc_r+0x54>
 800366a:	4c20      	ldr	r4, [pc, #128]	; (80036ec <_malloc_r+0xb0>)
 800366c:	6823      	ldr	r3, [r4, #0]
 800366e:	b91b      	cbnz	r3, 8003678 <_malloc_r+0x3c>
 8003670:	4630      	mov	r0, r6
 8003672:	f000 f98f 	bl	8003994 <_sbrk_r>
 8003676:	6020      	str	r0, [r4, #0]
 8003678:	4629      	mov	r1, r5
 800367a:	4630      	mov	r0, r6
 800367c:	f000 f98a 	bl	8003994 <_sbrk_r>
 8003680:	1c43      	adds	r3, r0, #1
 8003682:	d124      	bne.n	80036ce <_malloc_r+0x92>
 8003684:	230c      	movs	r3, #12
 8003686:	4630      	mov	r0, r6
 8003688:	6033      	str	r3, [r6, #0]
 800368a:	f000 f9bf 	bl	8003a0c <__malloc_unlock>
 800368e:	e7e4      	b.n	800365a <_malloc_r+0x1e>
 8003690:	680b      	ldr	r3, [r1, #0]
 8003692:	1b5b      	subs	r3, r3, r5
 8003694:	d418      	bmi.n	80036c8 <_malloc_r+0x8c>
 8003696:	2b0b      	cmp	r3, #11
 8003698:	d90f      	bls.n	80036ba <_malloc_r+0x7e>
 800369a:	600b      	str	r3, [r1, #0]
 800369c:	18cc      	adds	r4, r1, r3
 800369e:	50cd      	str	r5, [r1, r3]
 80036a0:	4630      	mov	r0, r6
 80036a2:	f000 f9b3 	bl	8003a0c <__malloc_unlock>
 80036a6:	f104 000b 	add.w	r0, r4, #11
 80036aa:	1d23      	adds	r3, r4, #4
 80036ac:	f020 0007 	bic.w	r0, r0, #7
 80036b0:	1ac3      	subs	r3, r0, r3
 80036b2:	d0d3      	beq.n	800365c <_malloc_r+0x20>
 80036b4:	425a      	negs	r2, r3
 80036b6:	50e2      	str	r2, [r4, r3]
 80036b8:	e7d0      	b.n	800365c <_malloc_r+0x20>
 80036ba:	684b      	ldr	r3, [r1, #4]
 80036bc:	428c      	cmp	r4, r1
 80036be:	bf16      	itet	ne
 80036c0:	6063      	strne	r3, [r4, #4]
 80036c2:	6013      	streq	r3, [r2, #0]
 80036c4:	460c      	movne	r4, r1
 80036c6:	e7eb      	b.n	80036a0 <_malloc_r+0x64>
 80036c8:	460c      	mov	r4, r1
 80036ca:	6849      	ldr	r1, [r1, #4]
 80036cc:	e7cc      	b.n	8003668 <_malloc_r+0x2c>
 80036ce:	1cc4      	adds	r4, r0, #3
 80036d0:	f024 0403 	bic.w	r4, r4, #3
 80036d4:	42a0      	cmp	r0, r4
 80036d6:	d005      	beq.n	80036e4 <_malloc_r+0xa8>
 80036d8:	1a21      	subs	r1, r4, r0
 80036da:	4630      	mov	r0, r6
 80036dc:	f000 f95a 	bl	8003994 <_sbrk_r>
 80036e0:	3001      	adds	r0, #1
 80036e2:	d0cf      	beq.n	8003684 <_malloc_r+0x48>
 80036e4:	6025      	str	r5, [r4, #0]
 80036e6:	e7db      	b.n	80036a0 <_malloc_r+0x64>
 80036e8:	200001f4 	.word	0x200001f4
 80036ec:	200001f8 	.word	0x200001f8

080036f0 <__ssputs_r>:
 80036f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80036f4:	688e      	ldr	r6, [r1, #8]
 80036f6:	4682      	mov	sl, r0
 80036f8:	429e      	cmp	r6, r3
 80036fa:	460c      	mov	r4, r1
 80036fc:	4690      	mov	r8, r2
 80036fe:	4699      	mov	r9, r3
 8003700:	d837      	bhi.n	8003772 <__ssputs_r+0x82>
 8003702:	898a      	ldrh	r2, [r1, #12]
 8003704:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8003708:	d031      	beq.n	800376e <__ssputs_r+0x7e>
 800370a:	2302      	movs	r3, #2
 800370c:	6825      	ldr	r5, [r4, #0]
 800370e:	6909      	ldr	r1, [r1, #16]
 8003710:	1a6f      	subs	r7, r5, r1
 8003712:	6965      	ldr	r5, [r4, #20]
 8003714:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8003718:	fb95 f5f3 	sdiv	r5, r5, r3
 800371c:	f109 0301 	add.w	r3, r9, #1
 8003720:	443b      	add	r3, r7
 8003722:	429d      	cmp	r5, r3
 8003724:	bf38      	it	cc
 8003726:	461d      	movcc	r5, r3
 8003728:	0553      	lsls	r3, r2, #21
 800372a:	d530      	bpl.n	800378e <__ssputs_r+0x9e>
 800372c:	4629      	mov	r1, r5
 800372e:	f7ff ff85 	bl	800363c <_malloc_r>
 8003732:	4606      	mov	r6, r0
 8003734:	b950      	cbnz	r0, 800374c <__ssputs_r+0x5c>
 8003736:	230c      	movs	r3, #12
 8003738:	f04f 30ff 	mov.w	r0, #4294967295
 800373c:	f8ca 3000 	str.w	r3, [sl]
 8003740:	89a3      	ldrh	r3, [r4, #12]
 8003742:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003746:	81a3      	strh	r3, [r4, #12]
 8003748:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800374c:	463a      	mov	r2, r7
 800374e:	6921      	ldr	r1, [r4, #16]
 8003750:	f7ff fc32 	bl	8002fb8 <memcpy>
 8003754:	89a3      	ldrh	r3, [r4, #12]
 8003756:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 800375a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800375e:	81a3      	strh	r3, [r4, #12]
 8003760:	6126      	str	r6, [r4, #16]
 8003762:	443e      	add	r6, r7
 8003764:	6026      	str	r6, [r4, #0]
 8003766:	464e      	mov	r6, r9
 8003768:	6165      	str	r5, [r4, #20]
 800376a:	1bed      	subs	r5, r5, r7
 800376c:	60a5      	str	r5, [r4, #8]
 800376e:	454e      	cmp	r6, r9
 8003770:	d900      	bls.n	8003774 <__ssputs_r+0x84>
 8003772:	464e      	mov	r6, r9
 8003774:	4632      	mov	r2, r6
 8003776:	4641      	mov	r1, r8
 8003778:	6820      	ldr	r0, [r4, #0]
 800377a:	f000 f92d 	bl	80039d8 <memmove>
 800377e:	68a3      	ldr	r3, [r4, #8]
 8003780:	2000      	movs	r0, #0
 8003782:	1b9b      	subs	r3, r3, r6
 8003784:	60a3      	str	r3, [r4, #8]
 8003786:	6823      	ldr	r3, [r4, #0]
 8003788:	441e      	add	r6, r3
 800378a:	6026      	str	r6, [r4, #0]
 800378c:	e7dc      	b.n	8003748 <__ssputs_r+0x58>
 800378e:	462a      	mov	r2, r5
 8003790:	f000 f93d 	bl	8003a0e <_realloc_r>
 8003794:	4606      	mov	r6, r0
 8003796:	2800      	cmp	r0, #0
 8003798:	d1e2      	bne.n	8003760 <__ssputs_r+0x70>
 800379a:	6921      	ldr	r1, [r4, #16]
 800379c:	4650      	mov	r0, sl
 800379e:	f7ff ff01 	bl	80035a4 <_free_r>
 80037a2:	e7c8      	b.n	8003736 <__ssputs_r+0x46>

080037a4 <_svfiprintf_r>:
 80037a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80037a8:	461d      	mov	r5, r3
 80037aa:	898b      	ldrh	r3, [r1, #12]
 80037ac:	b09d      	sub	sp, #116	; 0x74
 80037ae:	061f      	lsls	r7, r3, #24
 80037b0:	4680      	mov	r8, r0
 80037b2:	460c      	mov	r4, r1
 80037b4:	4616      	mov	r6, r2
 80037b6:	d50f      	bpl.n	80037d8 <_svfiprintf_r+0x34>
 80037b8:	690b      	ldr	r3, [r1, #16]
 80037ba:	b96b      	cbnz	r3, 80037d8 <_svfiprintf_r+0x34>
 80037bc:	2140      	movs	r1, #64	; 0x40
 80037be:	f7ff ff3d 	bl	800363c <_malloc_r>
 80037c2:	6020      	str	r0, [r4, #0]
 80037c4:	6120      	str	r0, [r4, #16]
 80037c6:	b928      	cbnz	r0, 80037d4 <_svfiprintf_r+0x30>
 80037c8:	230c      	movs	r3, #12
 80037ca:	f8c8 3000 	str.w	r3, [r8]
 80037ce:	f04f 30ff 	mov.w	r0, #4294967295
 80037d2:	e0c8      	b.n	8003966 <_svfiprintf_r+0x1c2>
 80037d4:	2340      	movs	r3, #64	; 0x40
 80037d6:	6163      	str	r3, [r4, #20]
 80037d8:	2300      	movs	r3, #0
 80037da:	9309      	str	r3, [sp, #36]	; 0x24
 80037dc:	2320      	movs	r3, #32
 80037de:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80037e2:	2330      	movs	r3, #48	; 0x30
 80037e4:	f04f 0b01 	mov.w	fp, #1
 80037e8:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80037ec:	9503      	str	r5, [sp, #12]
 80037ee:	4637      	mov	r7, r6
 80037f0:	463d      	mov	r5, r7
 80037f2:	f815 3b01 	ldrb.w	r3, [r5], #1
 80037f6:	b10b      	cbz	r3, 80037fc <_svfiprintf_r+0x58>
 80037f8:	2b25      	cmp	r3, #37	; 0x25
 80037fa:	d13e      	bne.n	800387a <_svfiprintf_r+0xd6>
 80037fc:	ebb7 0a06 	subs.w	sl, r7, r6
 8003800:	d00b      	beq.n	800381a <_svfiprintf_r+0x76>
 8003802:	4653      	mov	r3, sl
 8003804:	4632      	mov	r2, r6
 8003806:	4621      	mov	r1, r4
 8003808:	4640      	mov	r0, r8
 800380a:	f7ff ff71 	bl	80036f0 <__ssputs_r>
 800380e:	3001      	adds	r0, #1
 8003810:	f000 80a4 	beq.w	800395c <_svfiprintf_r+0x1b8>
 8003814:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003816:	4453      	add	r3, sl
 8003818:	9309      	str	r3, [sp, #36]	; 0x24
 800381a:	783b      	ldrb	r3, [r7, #0]
 800381c:	2b00      	cmp	r3, #0
 800381e:	f000 809d 	beq.w	800395c <_svfiprintf_r+0x1b8>
 8003822:	2300      	movs	r3, #0
 8003824:	f04f 32ff 	mov.w	r2, #4294967295
 8003828:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800382c:	9304      	str	r3, [sp, #16]
 800382e:	9307      	str	r3, [sp, #28]
 8003830:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8003834:	931a      	str	r3, [sp, #104]	; 0x68
 8003836:	462f      	mov	r7, r5
 8003838:	2205      	movs	r2, #5
 800383a:	f817 1b01 	ldrb.w	r1, [r7], #1
 800383e:	4850      	ldr	r0, [pc, #320]	; (8003980 <_svfiprintf_r+0x1dc>)
 8003840:	f7ff fbac 	bl	8002f9c <memchr>
 8003844:	9b04      	ldr	r3, [sp, #16]
 8003846:	b9d0      	cbnz	r0, 800387e <_svfiprintf_r+0xda>
 8003848:	06d9      	lsls	r1, r3, #27
 800384a:	bf44      	itt	mi
 800384c:	2220      	movmi	r2, #32
 800384e:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8003852:	071a      	lsls	r2, r3, #28
 8003854:	bf44      	itt	mi
 8003856:	222b      	movmi	r2, #43	; 0x2b
 8003858:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 800385c:	782a      	ldrb	r2, [r5, #0]
 800385e:	2a2a      	cmp	r2, #42	; 0x2a
 8003860:	d015      	beq.n	800388e <_svfiprintf_r+0xea>
 8003862:	462f      	mov	r7, r5
 8003864:	2000      	movs	r0, #0
 8003866:	250a      	movs	r5, #10
 8003868:	9a07      	ldr	r2, [sp, #28]
 800386a:	4639      	mov	r1, r7
 800386c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8003870:	3b30      	subs	r3, #48	; 0x30
 8003872:	2b09      	cmp	r3, #9
 8003874:	d94d      	bls.n	8003912 <_svfiprintf_r+0x16e>
 8003876:	b1b8      	cbz	r0, 80038a8 <_svfiprintf_r+0x104>
 8003878:	e00f      	b.n	800389a <_svfiprintf_r+0xf6>
 800387a:	462f      	mov	r7, r5
 800387c:	e7b8      	b.n	80037f0 <_svfiprintf_r+0x4c>
 800387e:	4a40      	ldr	r2, [pc, #256]	; (8003980 <_svfiprintf_r+0x1dc>)
 8003880:	463d      	mov	r5, r7
 8003882:	1a80      	subs	r0, r0, r2
 8003884:	fa0b f000 	lsl.w	r0, fp, r0
 8003888:	4318      	orrs	r0, r3
 800388a:	9004      	str	r0, [sp, #16]
 800388c:	e7d3      	b.n	8003836 <_svfiprintf_r+0x92>
 800388e:	9a03      	ldr	r2, [sp, #12]
 8003890:	1d11      	adds	r1, r2, #4
 8003892:	6812      	ldr	r2, [r2, #0]
 8003894:	9103      	str	r1, [sp, #12]
 8003896:	2a00      	cmp	r2, #0
 8003898:	db01      	blt.n	800389e <_svfiprintf_r+0xfa>
 800389a:	9207      	str	r2, [sp, #28]
 800389c:	e004      	b.n	80038a8 <_svfiprintf_r+0x104>
 800389e:	4252      	negs	r2, r2
 80038a0:	f043 0302 	orr.w	r3, r3, #2
 80038a4:	9207      	str	r2, [sp, #28]
 80038a6:	9304      	str	r3, [sp, #16]
 80038a8:	783b      	ldrb	r3, [r7, #0]
 80038aa:	2b2e      	cmp	r3, #46	; 0x2e
 80038ac:	d10c      	bne.n	80038c8 <_svfiprintf_r+0x124>
 80038ae:	787b      	ldrb	r3, [r7, #1]
 80038b0:	2b2a      	cmp	r3, #42	; 0x2a
 80038b2:	d133      	bne.n	800391c <_svfiprintf_r+0x178>
 80038b4:	9b03      	ldr	r3, [sp, #12]
 80038b6:	3702      	adds	r7, #2
 80038b8:	1d1a      	adds	r2, r3, #4
 80038ba:	681b      	ldr	r3, [r3, #0]
 80038bc:	9203      	str	r2, [sp, #12]
 80038be:	2b00      	cmp	r3, #0
 80038c0:	bfb8      	it	lt
 80038c2:	f04f 33ff 	movlt.w	r3, #4294967295
 80038c6:	9305      	str	r3, [sp, #20]
 80038c8:	4d2e      	ldr	r5, [pc, #184]	; (8003984 <_svfiprintf_r+0x1e0>)
 80038ca:	2203      	movs	r2, #3
 80038cc:	7839      	ldrb	r1, [r7, #0]
 80038ce:	4628      	mov	r0, r5
 80038d0:	f7ff fb64 	bl	8002f9c <memchr>
 80038d4:	b138      	cbz	r0, 80038e6 <_svfiprintf_r+0x142>
 80038d6:	2340      	movs	r3, #64	; 0x40
 80038d8:	1b40      	subs	r0, r0, r5
 80038da:	fa03 f000 	lsl.w	r0, r3, r0
 80038de:	9b04      	ldr	r3, [sp, #16]
 80038e0:	3701      	adds	r7, #1
 80038e2:	4303      	orrs	r3, r0
 80038e4:	9304      	str	r3, [sp, #16]
 80038e6:	7839      	ldrb	r1, [r7, #0]
 80038e8:	2206      	movs	r2, #6
 80038ea:	4827      	ldr	r0, [pc, #156]	; (8003988 <_svfiprintf_r+0x1e4>)
 80038ec:	1c7e      	adds	r6, r7, #1
 80038ee:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80038f2:	f7ff fb53 	bl	8002f9c <memchr>
 80038f6:	2800      	cmp	r0, #0
 80038f8:	d038      	beq.n	800396c <_svfiprintf_r+0x1c8>
 80038fa:	4b24      	ldr	r3, [pc, #144]	; (800398c <_svfiprintf_r+0x1e8>)
 80038fc:	bb13      	cbnz	r3, 8003944 <_svfiprintf_r+0x1a0>
 80038fe:	9b03      	ldr	r3, [sp, #12]
 8003900:	3307      	adds	r3, #7
 8003902:	f023 0307 	bic.w	r3, r3, #7
 8003906:	3308      	adds	r3, #8
 8003908:	9303      	str	r3, [sp, #12]
 800390a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800390c:	444b      	add	r3, r9
 800390e:	9309      	str	r3, [sp, #36]	; 0x24
 8003910:	e76d      	b.n	80037ee <_svfiprintf_r+0x4a>
 8003912:	fb05 3202 	mla	r2, r5, r2, r3
 8003916:	2001      	movs	r0, #1
 8003918:	460f      	mov	r7, r1
 800391a:	e7a6      	b.n	800386a <_svfiprintf_r+0xc6>
 800391c:	2300      	movs	r3, #0
 800391e:	250a      	movs	r5, #10
 8003920:	4619      	mov	r1, r3
 8003922:	3701      	adds	r7, #1
 8003924:	9305      	str	r3, [sp, #20]
 8003926:	4638      	mov	r0, r7
 8003928:	f810 2b01 	ldrb.w	r2, [r0], #1
 800392c:	3a30      	subs	r2, #48	; 0x30
 800392e:	2a09      	cmp	r2, #9
 8003930:	d903      	bls.n	800393a <_svfiprintf_r+0x196>
 8003932:	2b00      	cmp	r3, #0
 8003934:	d0c8      	beq.n	80038c8 <_svfiprintf_r+0x124>
 8003936:	9105      	str	r1, [sp, #20]
 8003938:	e7c6      	b.n	80038c8 <_svfiprintf_r+0x124>
 800393a:	fb05 2101 	mla	r1, r5, r1, r2
 800393e:	2301      	movs	r3, #1
 8003940:	4607      	mov	r7, r0
 8003942:	e7f0      	b.n	8003926 <_svfiprintf_r+0x182>
 8003944:	ab03      	add	r3, sp, #12
 8003946:	9300      	str	r3, [sp, #0]
 8003948:	4622      	mov	r2, r4
 800394a:	4b11      	ldr	r3, [pc, #68]	; (8003990 <_svfiprintf_r+0x1ec>)
 800394c:	a904      	add	r1, sp, #16
 800394e:	4640      	mov	r0, r8
 8003950:	f7fe f8ee 	bl	8001b30 <_printf_float>
 8003954:	f1b0 3fff 	cmp.w	r0, #4294967295
 8003958:	4681      	mov	r9, r0
 800395a:	d1d6      	bne.n	800390a <_svfiprintf_r+0x166>
 800395c:	89a3      	ldrh	r3, [r4, #12]
 800395e:	065b      	lsls	r3, r3, #25
 8003960:	f53f af35 	bmi.w	80037ce <_svfiprintf_r+0x2a>
 8003964:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003966:	b01d      	add	sp, #116	; 0x74
 8003968:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800396c:	ab03      	add	r3, sp, #12
 800396e:	9300      	str	r3, [sp, #0]
 8003970:	4622      	mov	r2, r4
 8003972:	4b07      	ldr	r3, [pc, #28]	; (8003990 <_svfiprintf_r+0x1ec>)
 8003974:	a904      	add	r1, sp, #16
 8003976:	4640      	mov	r0, r8
 8003978:	f7fe fb86 	bl	8002088 <_printf_i>
 800397c:	e7ea      	b.n	8003954 <_svfiprintf_r+0x1b0>
 800397e:	bf00      	nop
 8003980:	08003c34 	.word	0x08003c34
 8003984:	08003c3a 	.word	0x08003c3a
 8003988:	08003c3e 	.word	0x08003c3e
 800398c:	08001b31 	.word	0x08001b31
 8003990:	080036f1 	.word	0x080036f1

08003994 <_sbrk_r>:
 8003994:	b538      	push	{r3, r4, r5, lr}
 8003996:	2300      	movs	r3, #0
 8003998:	4c05      	ldr	r4, [pc, #20]	; (80039b0 <_sbrk_r+0x1c>)
 800399a:	4605      	mov	r5, r0
 800399c:	4608      	mov	r0, r1
 800399e:	6023      	str	r3, [r4, #0]
 80039a0:	f000 f870 	bl	8003a84 <_sbrk>
 80039a4:	1c43      	adds	r3, r0, #1
 80039a6:	d102      	bne.n	80039ae <_sbrk_r+0x1a>
 80039a8:	6823      	ldr	r3, [r4, #0]
 80039aa:	b103      	cbz	r3, 80039ae <_sbrk_r+0x1a>
 80039ac:	602b      	str	r3, [r5, #0]
 80039ae:	bd38      	pop	{r3, r4, r5, pc}
 80039b0:	2000022c 	.word	0x2000022c

080039b4 <__ascii_mbtowc>:
 80039b4:	b082      	sub	sp, #8
 80039b6:	b901      	cbnz	r1, 80039ba <__ascii_mbtowc+0x6>
 80039b8:	a901      	add	r1, sp, #4
 80039ba:	b142      	cbz	r2, 80039ce <__ascii_mbtowc+0x1a>
 80039bc:	b14b      	cbz	r3, 80039d2 <__ascii_mbtowc+0x1e>
 80039be:	7813      	ldrb	r3, [r2, #0]
 80039c0:	600b      	str	r3, [r1, #0]
 80039c2:	7812      	ldrb	r2, [r2, #0]
 80039c4:	1c10      	adds	r0, r2, #0
 80039c6:	bf18      	it	ne
 80039c8:	2001      	movne	r0, #1
 80039ca:	b002      	add	sp, #8
 80039cc:	4770      	bx	lr
 80039ce:	4610      	mov	r0, r2
 80039d0:	e7fb      	b.n	80039ca <__ascii_mbtowc+0x16>
 80039d2:	f06f 0001 	mvn.w	r0, #1
 80039d6:	e7f8      	b.n	80039ca <__ascii_mbtowc+0x16>

080039d8 <memmove>:
 80039d8:	4288      	cmp	r0, r1
 80039da:	b510      	push	{r4, lr}
 80039dc:	eb01 0302 	add.w	r3, r1, r2
 80039e0:	d807      	bhi.n	80039f2 <memmove+0x1a>
 80039e2:	1e42      	subs	r2, r0, #1
 80039e4:	4299      	cmp	r1, r3
 80039e6:	d00a      	beq.n	80039fe <memmove+0x26>
 80039e8:	f811 4b01 	ldrb.w	r4, [r1], #1
 80039ec:	f802 4f01 	strb.w	r4, [r2, #1]!
 80039f0:	e7f8      	b.n	80039e4 <memmove+0xc>
 80039f2:	4283      	cmp	r3, r0
 80039f4:	d9f5      	bls.n	80039e2 <memmove+0xa>
 80039f6:	1881      	adds	r1, r0, r2
 80039f8:	1ad2      	subs	r2, r2, r3
 80039fa:	42d3      	cmn	r3, r2
 80039fc:	d100      	bne.n	8003a00 <memmove+0x28>
 80039fe:	bd10      	pop	{r4, pc}
 8003a00:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8003a04:	f801 4d01 	strb.w	r4, [r1, #-1]!
 8003a08:	e7f7      	b.n	80039fa <memmove+0x22>

08003a0a <__malloc_lock>:
 8003a0a:	4770      	bx	lr

08003a0c <__malloc_unlock>:
 8003a0c:	4770      	bx	lr

08003a0e <_realloc_r>:
 8003a0e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003a10:	4607      	mov	r7, r0
 8003a12:	4614      	mov	r4, r2
 8003a14:	460e      	mov	r6, r1
 8003a16:	b921      	cbnz	r1, 8003a22 <_realloc_r+0x14>
 8003a18:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8003a1c:	4611      	mov	r1, r2
 8003a1e:	f7ff be0d 	b.w	800363c <_malloc_r>
 8003a22:	b922      	cbnz	r2, 8003a2e <_realloc_r+0x20>
 8003a24:	f7ff fdbe 	bl	80035a4 <_free_r>
 8003a28:	4625      	mov	r5, r4
 8003a2a:	4628      	mov	r0, r5
 8003a2c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003a2e:	f000 f821 	bl	8003a74 <_malloc_usable_size_r>
 8003a32:	42a0      	cmp	r0, r4
 8003a34:	d20f      	bcs.n	8003a56 <_realloc_r+0x48>
 8003a36:	4621      	mov	r1, r4
 8003a38:	4638      	mov	r0, r7
 8003a3a:	f7ff fdff 	bl	800363c <_malloc_r>
 8003a3e:	4605      	mov	r5, r0
 8003a40:	2800      	cmp	r0, #0
 8003a42:	d0f2      	beq.n	8003a2a <_realloc_r+0x1c>
 8003a44:	4631      	mov	r1, r6
 8003a46:	4622      	mov	r2, r4
 8003a48:	f7ff fab6 	bl	8002fb8 <memcpy>
 8003a4c:	4631      	mov	r1, r6
 8003a4e:	4638      	mov	r0, r7
 8003a50:	f7ff fda8 	bl	80035a4 <_free_r>
 8003a54:	e7e9      	b.n	8003a2a <_realloc_r+0x1c>
 8003a56:	4635      	mov	r5, r6
 8003a58:	e7e7      	b.n	8003a2a <_realloc_r+0x1c>

08003a5a <__ascii_wctomb>:
 8003a5a:	b149      	cbz	r1, 8003a70 <__ascii_wctomb+0x16>
 8003a5c:	2aff      	cmp	r2, #255	; 0xff
 8003a5e:	bf8b      	itete	hi
 8003a60:	238a      	movhi	r3, #138	; 0x8a
 8003a62:	700a      	strbls	r2, [r1, #0]
 8003a64:	6003      	strhi	r3, [r0, #0]
 8003a66:	2001      	movls	r0, #1
 8003a68:	bf88      	it	hi
 8003a6a:	f04f 30ff 	movhi.w	r0, #4294967295
 8003a6e:	4770      	bx	lr
 8003a70:	4608      	mov	r0, r1
 8003a72:	4770      	bx	lr

08003a74 <_malloc_usable_size_r>:
 8003a74:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8003a78:	1f18      	subs	r0, r3, #4
 8003a7a:	2b00      	cmp	r3, #0
 8003a7c:	bfbc      	itt	lt
 8003a7e:	580b      	ldrlt	r3, [r1, r0]
 8003a80:	18c0      	addlt	r0, r0, r3
 8003a82:	4770      	bx	lr

08003a84 <_sbrk>:
 8003a84:	4b04      	ldr	r3, [pc, #16]	; (8003a98 <_sbrk+0x14>)
 8003a86:	4602      	mov	r2, r0
 8003a88:	6819      	ldr	r1, [r3, #0]
 8003a8a:	b909      	cbnz	r1, 8003a90 <_sbrk+0xc>
 8003a8c:	4903      	ldr	r1, [pc, #12]	; (8003a9c <_sbrk+0x18>)
 8003a8e:	6019      	str	r1, [r3, #0]
 8003a90:	6818      	ldr	r0, [r3, #0]
 8003a92:	4402      	add	r2, r0
 8003a94:	601a      	str	r2, [r3, #0]
 8003a96:	4770      	bx	lr
 8003a98:	200001fc 	.word	0x200001fc
 8003a9c:	20000230 	.word	0x20000230

08003aa0 <_init>:
 8003aa0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003aa2:	bf00      	nop
 8003aa4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8003aa6:	bc08      	pop	{r3}
 8003aa8:	469e      	mov	lr, r3
 8003aaa:	4770      	bx	lr

08003aac <_fini>:
 8003aac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003aae:	bf00      	nop
 8003ab0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8003ab2:	bc08      	pop	{r3}
 8003ab4:	469e      	mov	lr, r3
 8003ab6:	4770      	bx	lr
