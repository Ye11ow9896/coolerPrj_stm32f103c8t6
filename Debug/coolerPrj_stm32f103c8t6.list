
coolerPrj_stm32f103c8t6.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000039a0  08000110  08000110  00010110  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000298  08003ab0  08003ab0  00013ab0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08003d48  08003d48  000201d8  2**0
                  CONTENTS
  4 .ARM          00000000  08003d48  08003d48  000201d8  2**0
                  CONTENTS
  5 .preinit_array 00000000  08003d48  08003d48  000201d8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08003d48  08003d48  00013d48  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08003d4c  08003d4c  00013d4c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001d8  20000000  08003d50  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000058  200001d8  08003f28  000201d8  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000230  08003f28  00020230  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000201d8  2**0
                  CONTENTS, READONLY
 12 .debug_info   000045b3  00000000  00000000  00020201  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00000c4d  00000000  00000000  000247b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000178  00000000  00000000  00025408  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000100  00000000  00000000  00025580  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00010a4b  00000000  00000000  00025680  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00002c19  00000000  00000000  000360cb  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    0005782d  00000000  00000000  00038ce4  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  00090511  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000eb0  00000000  00000000  0009058c  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000110 <__do_global_dtors_aux>:
 8000110:	b510      	push	{r4, lr}
 8000112:	4c05      	ldr	r4, [pc, #20]	; (8000128 <__do_global_dtors_aux+0x18>)
 8000114:	7823      	ldrb	r3, [r4, #0]
 8000116:	b933      	cbnz	r3, 8000126 <__do_global_dtors_aux+0x16>
 8000118:	4b04      	ldr	r3, [pc, #16]	; (800012c <__do_global_dtors_aux+0x1c>)
 800011a:	b113      	cbz	r3, 8000122 <__do_global_dtors_aux+0x12>
 800011c:	4804      	ldr	r0, [pc, #16]	; (8000130 <__do_global_dtors_aux+0x20>)
 800011e:	f3af 8000 	nop.w
 8000122:	2301      	movs	r3, #1
 8000124:	7023      	strb	r3, [r4, #0]
 8000126:	bd10      	pop	{r4, pc}
 8000128:	200001d8 	.word	0x200001d8
 800012c:	00000000 	.word	0x00000000
 8000130:	08003a98 	.word	0x08003a98

08000134 <frame_dummy>:
 8000134:	b508      	push	{r3, lr}
 8000136:	4b03      	ldr	r3, [pc, #12]	; (8000144 <frame_dummy+0x10>)
 8000138:	b11b      	cbz	r3, 8000142 <frame_dummy+0xe>
 800013a:	4903      	ldr	r1, [pc, #12]	; (8000148 <frame_dummy+0x14>)
 800013c:	4803      	ldr	r0, [pc, #12]	; (800014c <frame_dummy+0x18>)
 800013e:	f3af 8000 	nop.w
 8000142:	bd08      	pop	{r3, pc}
 8000144:	00000000 	.word	0x00000000
 8000148:	200001dc 	.word	0x200001dc
 800014c:	08003a98 	.word	0x08003a98

08000150 <strlen>:
 8000150:	4603      	mov	r3, r0
 8000152:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000156:	2a00      	cmp	r2, #0
 8000158:	d1fb      	bne.n	8000152 <strlen+0x2>
 800015a:	1a18      	subs	r0, r3, r0
 800015c:	3801      	subs	r0, #1
 800015e:	4770      	bx	lr

08000160 <__aeabi_drsub>:
 8000160:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000164:	e002      	b.n	800016c <__adddf3>
 8000166:	bf00      	nop

08000168 <__aeabi_dsub>:
 8000168:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800016c <__adddf3>:
 800016c:	b530      	push	{r4, r5, lr}
 800016e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000172:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000176:	ea94 0f05 	teq	r4, r5
 800017a:	bf08      	it	eq
 800017c:	ea90 0f02 	teqeq	r0, r2
 8000180:	bf1f      	itttt	ne
 8000182:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000186:	ea55 0c02 	orrsne.w	ip, r5, r2
 800018a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800018e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000192:	f000 80e2 	beq.w	800035a <__adddf3+0x1ee>
 8000196:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800019a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800019e:	bfb8      	it	lt
 80001a0:	426d      	neglt	r5, r5
 80001a2:	dd0c      	ble.n	80001be <__adddf3+0x52>
 80001a4:	442c      	add	r4, r5
 80001a6:	ea80 0202 	eor.w	r2, r0, r2
 80001aa:	ea81 0303 	eor.w	r3, r1, r3
 80001ae:	ea82 0000 	eor.w	r0, r2, r0
 80001b2:	ea83 0101 	eor.w	r1, r3, r1
 80001b6:	ea80 0202 	eor.w	r2, r0, r2
 80001ba:	ea81 0303 	eor.w	r3, r1, r3
 80001be:	2d36      	cmp	r5, #54	; 0x36
 80001c0:	bf88      	it	hi
 80001c2:	bd30      	pophi	{r4, r5, pc}
 80001c4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80001c8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80001cc:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80001d0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80001d4:	d002      	beq.n	80001dc <__adddf3+0x70>
 80001d6:	4240      	negs	r0, r0
 80001d8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80001dc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 80001e0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80001e4:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80001e8:	d002      	beq.n	80001f0 <__adddf3+0x84>
 80001ea:	4252      	negs	r2, r2
 80001ec:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80001f0:	ea94 0f05 	teq	r4, r5
 80001f4:	f000 80a7 	beq.w	8000346 <__adddf3+0x1da>
 80001f8:	f1a4 0401 	sub.w	r4, r4, #1
 80001fc:	f1d5 0e20 	rsbs	lr, r5, #32
 8000200:	db0d      	blt.n	800021e <__adddf3+0xb2>
 8000202:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000206:	fa22 f205 	lsr.w	r2, r2, r5
 800020a:	1880      	adds	r0, r0, r2
 800020c:	f141 0100 	adc.w	r1, r1, #0
 8000210:	fa03 f20e 	lsl.w	r2, r3, lr
 8000214:	1880      	adds	r0, r0, r2
 8000216:	fa43 f305 	asr.w	r3, r3, r5
 800021a:	4159      	adcs	r1, r3
 800021c:	e00e      	b.n	800023c <__adddf3+0xd0>
 800021e:	f1a5 0520 	sub.w	r5, r5, #32
 8000222:	f10e 0e20 	add.w	lr, lr, #32
 8000226:	2a01      	cmp	r2, #1
 8000228:	fa03 fc0e 	lsl.w	ip, r3, lr
 800022c:	bf28      	it	cs
 800022e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000232:	fa43 f305 	asr.w	r3, r3, r5
 8000236:	18c0      	adds	r0, r0, r3
 8000238:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800023c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000240:	d507      	bpl.n	8000252 <__adddf3+0xe6>
 8000242:	f04f 0e00 	mov.w	lr, #0
 8000246:	f1dc 0c00 	rsbs	ip, ip, #0
 800024a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800024e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000252:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000256:	d31b      	bcc.n	8000290 <__adddf3+0x124>
 8000258:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800025c:	d30c      	bcc.n	8000278 <__adddf3+0x10c>
 800025e:	0849      	lsrs	r1, r1, #1
 8000260:	ea5f 0030 	movs.w	r0, r0, rrx
 8000264:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000268:	f104 0401 	add.w	r4, r4, #1
 800026c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000270:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000274:	f080 809a 	bcs.w	80003ac <__adddf3+0x240>
 8000278:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800027c:	bf08      	it	eq
 800027e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000282:	f150 0000 	adcs.w	r0, r0, #0
 8000286:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800028a:	ea41 0105 	orr.w	r1, r1, r5
 800028e:	bd30      	pop	{r4, r5, pc}
 8000290:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000294:	4140      	adcs	r0, r0
 8000296:	eb41 0101 	adc.w	r1, r1, r1
 800029a:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 800029e:	f1a4 0401 	sub.w	r4, r4, #1
 80002a2:	d1e9      	bne.n	8000278 <__adddf3+0x10c>
 80002a4:	f091 0f00 	teq	r1, #0
 80002a8:	bf04      	itt	eq
 80002aa:	4601      	moveq	r1, r0
 80002ac:	2000      	moveq	r0, #0
 80002ae:	fab1 f381 	clz	r3, r1
 80002b2:	bf08      	it	eq
 80002b4:	3320      	addeq	r3, #32
 80002b6:	f1a3 030b 	sub.w	r3, r3, #11
 80002ba:	f1b3 0220 	subs.w	r2, r3, #32
 80002be:	da0c      	bge.n	80002da <__adddf3+0x16e>
 80002c0:	320c      	adds	r2, #12
 80002c2:	dd08      	ble.n	80002d6 <__adddf3+0x16a>
 80002c4:	f102 0c14 	add.w	ip, r2, #20
 80002c8:	f1c2 020c 	rsb	r2, r2, #12
 80002cc:	fa01 f00c 	lsl.w	r0, r1, ip
 80002d0:	fa21 f102 	lsr.w	r1, r1, r2
 80002d4:	e00c      	b.n	80002f0 <__adddf3+0x184>
 80002d6:	f102 0214 	add.w	r2, r2, #20
 80002da:	bfd8      	it	le
 80002dc:	f1c2 0c20 	rsble	ip, r2, #32
 80002e0:	fa01 f102 	lsl.w	r1, r1, r2
 80002e4:	fa20 fc0c 	lsr.w	ip, r0, ip
 80002e8:	bfdc      	itt	le
 80002ea:	ea41 010c 	orrle.w	r1, r1, ip
 80002ee:	4090      	lslle	r0, r2
 80002f0:	1ae4      	subs	r4, r4, r3
 80002f2:	bfa2      	ittt	ge
 80002f4:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80002f8:	4329      	orrge	r1, r5
 80002fa:	bd30      	popge	{r4, r5, pc}
 80002fc:	ea6f 0404 	mvn.w	r4, r4
 8000300:	3c1f      	subs	r4, #31
 8000302:	da1c      	bge.n	800033e <__adddf3+0x1d2>
 8000304:	340c      	adds	r4, #12
 8000306:	dc0e      	bgt.n	8000326 <__adddf3+0x1ba>
 8000308:	f104 0414 	add.w	r4, r4, #20
 800030c:	f1c4 0220 	rsb	r2, r4, #32
 8000310:	fa20 f004 	lsr.w	r0, r0, r4
 8000314:	fa01 f302 	lsl.w	r3, r1, r2
 8000318:	ea40 0003 	orr.w	r0, r0, r3
 800031c:	fa21 f304 	lsr.w	r3, r1, r4
 8000320:	ea45 0103 	orr.w	r1, r5, r3
 8000324:	bd30      	pop	{r4, r5, pc}
 8000326:	f1c4 040c 	rsb	r4, r4, #12
 800032a:	f1c4 0220 	rsb	r2, r4, #32
 800032e:	fa20 f002 	lsr.w	r0, r0, r2
 8000332:	fa01 f304 	lsl.w	r3, r1, r4
 8000336:	ea40 0003 	orr.w	r0, r0, r3
 800033a:	4629      	mov	r1, r5
 800033c:	bd30      	pop	{r4, r5, pc}
 800033e:	fa21 f004 	lsr.w	r0, r1, r4
 8000342:	4629      	mov	r1, r5
 8000344:	bd30      	pop	{r4, r5, pc}
 8000346:	f094 0f00 	teq	r4, #0
 800034a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800034e:	bf06      	itte	eq
 8000350:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000354:	3401      	addeq	r4, #1
 8000356:	3d01      	subne	r5, #1
 8000358:	e74e      	b.n	80001f8 <__adddf3+0x8c>
 800035a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800035e:	bf18      	it	ne
 8000360:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000364:	d029      	beq.n	80003ba <__adddf3+0x24e>
 8000366:	ea94 0f05 	teq	r4, r5
 800036a:	bf08      	it	eq
 800036c:	ea90 0f02 	teqeq	r0, r2
 8000370:	d005      	beq.n	800037e <__adddf3+0x212>
 8000372:	ea54 0c00 	orrs.w	ip, r4, r0
 8000376:	bf04      	itt	eq
 8000378:	4619      	moveq	r1, r3
 800037a:	4610      	moveq	r0, r2
 800037c:	bd30      	pop	{r4, r5, pc}
 800037e:	ea91 0f03 	teq	r1, r3
 8000382:	bf1e      	ittt	ne
 8000384:	2100      	movne	r1, #0
 8000386:	2000      	movne	r0, #0
 8000388:	bd30      	popne	{r4, r5, pc}
 800038a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800038e:	d105      	bne.n	800039c <__adddf3+0x230>
 8000390:	0040      	lsls	r0, r0, #1
 8000392:	4149      	adcs	r1, r1
 8000394:	bf28      	it	cs
 8000396:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 800039a:	bd30      	pop	{r4, r5, pc}
 800039c:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80003a0:	bf3c      	itt	cc
 80003a2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80003a6:	bd30      	popcc	{r4, r5, pc}
 80003a8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80003ac:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80003b0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80003b4:	f04f 0000 	mov.w	r0, #0
 80003b8:	bd30      	pop	{r4, r5, pc}
 80003ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80003be:	bf1a      	itte	ne
 80003c0:	4619      	movne	r1, r3
 80003c2:	4610      	movne	r0, r2
 80003c4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80003c8:	bf1c      	itt	ne
 80003ca:	460b      	movne	r3, r1
 80003cc:	4602      	movne	r2, r0
 80003ce:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80003d2:	bf06      	itte	eq
 80003d4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80003d8:	ea91 0f03 	teqeq	r1, r3
 80003dc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 80003e0:	bd30      	pop	{r4, r5, pc}
 80003e2:	bf00      	nop

080003e4 <__aeabi_ui2d>:
 80003e4:	f090 0f00 	teq	r0, #0
 80003e8:	bf04      	itt	eq
 80003ea:	2100      	moveq	r1, #0
 80003ec:	4770      	bxeq	lr
 80003ee:	b530      	push	{r4, r5, lr}
 80003f0:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80003f4:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80003f8:	f04f 0500 	mov.w	r5, #0
 80003fc:	f04f 0100 	mov.w	r1, #0
 8000400:	e750      	b.n	80002a4 <__adddf3+0x138>
 8000402:	bf00      	nop

08000404 <__aeabi_i2d>:
 8000404:	f090 0f00 	teq	r0, #0
 8000408:	bf04      	itt	eq
 800040a:	2100      	moveq	r1, #0
 800040c:	4770      	bxeq	lr
 800040e:	b530      	push	{r4, r5, lr}
 8000410:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000414:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000418:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800041c:	bf48      	it	mi
 800041e:	4240      	negmi	r0, r0
 8000420:	f04f 0100 	mov.w	r1, #0
 8000424:	e73e      	b.n	80002a4 <__adddf3+0x138>
 8000426:	bf00      	nop

08000428 <__aeabi_f2d>:
 8000428:	0042      	lsls	r2, r0, #1
 800042a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800042e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000432:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000436:	bf1f      	itttt	ne
 8000438:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800043c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000440:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000444:	4770      	bxne	lr
 8000446:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800044a:	bf08      	it	eq
 800044c:	4770      	bxeq	lr
 800044e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000452:	bf04      	itt	eq
 8000454:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000458:	4770      	bxeq	lr
 800045a:	b530      	push	{r4, r5, lr}
 800045c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000460:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000464:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000468:	e71c      	b.n	80002a4 <__adddf3+0x138>
 800046a:	bf00      	nop

0800046c <__aeabi_ul2d>:
 800046c:	ea50 0201 	orrs.w	r2, r0, r1
 8000470:	bf08      	it	eq
 8000472:	4770      	bxeq	lr
 8000474:	b530      	push	{r4, r5, lr}
 8000476:	f04f 0500 	mov.w	r5, #0
 800047a:	e00a      	b.n	8000492 <__aeabi_l2d+0x16>

0800047c <__aeabi_l2d>:
 800047c:	ea50 0201 	orrs.w	r2, r0, r1
 8000480:	bf08      	it	eq
 8000482:	4770      	bxeq	lr
 8000484:	b530      	push	{r4, r5, lr}
 8000486:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 800048a:	d502      	bpl.n	8000492 <__aeabi_l2d+0x16>
 800048c:	4240      	negs	r0, r0
 800048e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000492:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000496:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800049a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800049e:	f43f aed8 	beq.w	8000252 <__adddf3+0xe6>
 80004a2:	f04f 0203 	mov.w	r2, #3
 80004a6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004aa:	bf18      	it	ne
 80004ac:	3203      	addne	r2, #3
 80004ae:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004b2:	bf18      	it	ne
 80004b4:	3203      	addne	r2, #3
 80004b6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80004ba:	f1c2 0320 	rsb	r3, r2, #32
 80004be:	fa00 fc03 	lsl.w	ip, r0, r3
 80004c2:	fa20 f002 	lsr.w	r0, r0, r2
 80004c6:	fa01 fe03 	lsl.w	lr, r1, r3
 80004ca:	ea40 000e 	orr.w	r0, r0, lr
 80004ce:	fa21 f102 	lsr.w	r1, r1, r2
 80004d2:	4414      	add	r4, r2
 80004d4:	e6bd      	b.n	8000252 <__adddf3+0xe6>
 80004d6:	bf00      	nop

080004d8 <__aeabi_dmul>:
 80004d8:	b570      	push	{r4, r5, r6, lr}
 80004da:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80004de:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80004e2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80004e6:	bf1d      	ittte	ne
 80004e8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80004ec:	ea94 0f0c 	teqne	r4, ip
 80004f0:	ea95 0f0c 	teqne	r5, ip
 80004f4:	f000 f8de 	bleq	80006b4 <__aeabi_dmul+0x1dc>
 80004f8:	442c      	add	r4, r5
 80004fa:	ea81 0603 	eor.w	r6, r1, r3
 80004fe:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000502:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000506:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800050a:	bf18      	it	ne
 800050c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000510:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000514:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000518:	d038      	beq.n	800058c <__aeabi_dmul+0xb4>
 800051a:	fba0 ce02 	umull	ip, lr, r0, r2
 800051e:	f04f 0500 	mov.w	r5, #0
 8000522:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000526:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800052a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800052e:	f04f 0600 	mov.w	r6, #0
 8000532:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000536:	f09c 0f00 	teq	ip, #0
 800053a:	bf18      	it	ne
 800053c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000540:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000544:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000548:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800054c:	d204      	bcs.n	8000558 <__aeabi_dmul+0x80>
 800054e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000552:	416d      	adcs	r5, r5
 8000554:	eb46 0606 	adc.w	r6, r6, r6
 8000558:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800055c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000560:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000564:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000568:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800056c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000570:	bf88      	it	hi
 8000572:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000576:	d81e      	bhi.n	80005b6 <__aeabi_dmul+0xde>
 8000578:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 800057c:	bf08      	it	eq
 800057e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 8000582:	f150 0000 	adcs.w	r0, r0, #0
 8000586:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800058a:	bd70      	pop	{r4, r5, r6, pc}
 800058c:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000590:	ea46 0101 	orr.w	r1, r6, r1
 8000594:	ea40 0002 	orr.w	r0, r0, r2
 8000598:	ea81 0103 	eor.w	r1, r1, r3
 800059c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80005a0:	bfc2      	ittt	gt
 80005a2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80005a6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80005aa:	bd70      	popgt	{r4, r5, r6, pc}
 80005ac:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80005b0:	f04f 0e00 	mov.w	lr, #0
 80005b4:	3c01      	subs	r4, #1
 80005b6:	f300 80ab 	bgt.w	8000710 <__aeabi_dmul+0x238>
 80005ba:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80005be:	bfde      	ittt	le
 80005c0:	2000      	movle	r0, #0
 80005c2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80005c6:	bd70      	pople	{r4, r5, r6, pc}
 80005c8:	f1c4 0400 	rsb	r4, r4, #0
 80005cc:	3c20      	subs	r4, #32
 80005ce:	da35      	bge.n	800063c <__aeabi_dmul+0x164>
 80005d0:	340c      	adds	r4, #12
 80005d2:	dc1b      	bgt.n	800060c <__aeabi_dmul+0x134>
 80005d4:	f104 0414 	add.w	r4, r4, #20
 80005d8:	f1c4 0520 	rsb	r5, r4, #32
 80005dc:	fa00 f305 	lsl.w	r3, r0, r5
 80005e0:	fa20 f004 	lsr.w	r0, r0, r4
 80005e4:	fa01 f205 	lsl.w	r2, r1, r5
 80005e8:	ea40 0002 	orr.w	r0, r0, r2
 80005ec:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 80005f0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005f4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80005f8:	fa21 f604 	lsr.w	r6, r1, r4
 80005fc:	eb42 0106 	adc.w	r1, r2, r6
 8000600:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000604:	bf08      	it	eq
 8000606:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800060a:	bd70      	pop	{r4, r5, r6, pc}
 800060c:	f1c4 040c 	rsb	r4, r4, #12
 8000610:	f1c4 0520 	rsb	r5, r4, #32
 8000614:	fa00 f304 	lsl.w	r3, r0, r4
 8000618:	fa20 f005 	lsr.w	r0, r0, r5
 800061c:	fa01 f204 	lsl.w	r2, r1, r4
 8000620:	ea40 0002 	orr.w	r0, r0, r2
 8000624:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000628:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800062c:	f141 0100 	adc.w	r1, r1, #0
 8000630:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000634:	bf08      	it	eq
 8000636:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800063a:	bd70      	pop	{r4, r5, r6, pc}
 800063c:	f1c4 0520 	rsb	r5, r4, #32
 8000640:	fa00 f205 	lsl.w	r2, r0, r5
 8000644:	ea4e 0e02 	orr.w	lr, lr, r2
 8000648:	fa20 f304 	lsr.w	r3, r0, r4
 800064c:	fa01 f205 	lsl.w	r2, r1, r5
 8000650:	ea43 0302 	orr.w	r3, r3, r2
 8000654:	fa21 f004 	lsr.w	r0, r1, r4
 8000658:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800065c:	fa21 f204 	lsr.w	r2, r1, r4
 8000660:	ea20 0002 	bic.w	r0, r0, r2
 8000664:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000668:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800066c:	bf08      	it	eq
 800066e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000672:	bd70      	pop	{r4, r5, r6, pc}
 8000674:	f094 0f00 	teq	r4, #0
 8000678:	d10f      	bne.n	800069a <__aeabi_dmul+0x1c2>
 800067a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 800067e:	0040      	lsls	r0, r0, #1
 8000680:	eb41 0101 	adc.w	r1, r1, r1
 8000684:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000688:	bf08      	it	eq
 800068a:	3c01      	subeq	r4, #1
 800068c:	d0f7      	beq.n	800067e <__aeabi_dmul+0x1a6>
 800068e:	ea41 0106 	orr.w	r1, r1, r6
 8000692:	f095 0f00 	teq	r5, #0
 8000696:	bf18      	it	ne
 8000698:	4770      	bxne	lr
 800069a:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 800069e:	0052      	lsls	r2, r2, #1
 80006a0:	eb43 0303 	adc.w	r3, r3, r3
 80006a4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80006a8:	bf08      	it	eq
 80006aa:	3d01      	subeq	r5, #1
 80006ac:	d0f7      	beq.n	800069e <__aeabi_dmul+0x1c6>
 80006ae:	ea43 0306 	orr.w	r3, r3, r6
 80006b2:	4770      	bx	lr
 80006b4:	ea94 0f0c 	teq	r4, ip
 80006b8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80006bc:	bf18      	it	ne
 80006be:	ea95 0f0c 	teqne	r5, ip
 80006c2:	d00c      	beq.n	80006de <__aeabi_dmul+0x206>
 80006c4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006c8:	bf18      	it	ne
 80006ca:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006ce:	d1d1      	bne.n	8000674 <__aeabi_dmul+0x19c>
 80006d0:	ea81 0103 	eor.w	r1, r1, r3
 80006d4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80006d8:	f04f 0000 	mov.w	r0, #0
 80006dc:	bd70      	pop	{r4, r5, r6, pc}
 80006de:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006e2:	bf06      	itte	eq
 80006e4:	4610      	moveq	r0, r2
 80006e6:	4619      	moveq	r1, r3
 80006e8:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006ec:	d019      	beq.n	8000722 <__aeabi_dmul+0x24a>
 80006ee:	ea94 0f0c 	teq	r4, ip
 80006f2:	d102      	bne.n	80006fa <__aeabi_dmul+0x222>
 80006f4:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80006f8:	d113      	bne.n	8000722 <__aeabi_dmul+0x24a>
 80006fa:	ea95 0f0c 	teq	r5, ip
 80006fe:	d105      	bne.n	800070c <__aeabi_dmul+0x234>
 8000700:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000704:	bf1c      	itt	ne
 8000706:	4610      	movne	r0, r2
 8000708:	4619      	movne	r1, r3
 800070a:	d10a      	bne.n	8000722 <__aeabi_dmul+0x24a>
 800070c:	ea81 0103 	eor.w	r1, r1, r3
 8000710:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000714:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000718:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800071c:	f04f 0000 	mov.w	r0, #0
 8000720:	bd70      	pop	{r4, r5, r6, pc}
 8000722:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000726:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800072a:	bd70      	pop	{r4, r5, r6, pc}

0800072c <__aeabi_ddiv>:
 800072c:	b570      	push	{r4, r5, r6, lr}
 800072e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000732:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000736:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800073a:	bf1d      	ittte	ne
 800073c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000740:	ea94 0f0c 	teqne	r4, ip
 8000744:	ea95 0f0c 	teqne	r5, ip
 8000748:	f000 f8a7 	bleq	800089a <__aeabi_ddiv+0x16e>
 800074c:	eba4 0405 	sub.w	r4, r4, r5
 8000750:	ea81 0e03 	eor.w	lr, r1, r3
 8000754:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000758:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800075c:	f000 8088 	beq.w	8000870 <__aeabi_ddiv+0x144>
 8000760:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000764:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000768:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800076c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000770:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000774:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000778:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800077c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000780:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 8000784:	429d      	cmp	r5, r3
 8000786:	bf08      	it	eq
 8000788:	4296      	cmpeq	r6, r2
 800078a:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 800078e:	f504 7440 	add.w	r4, r4, #768	; 0x300
 8000792:	d202      	bcs.n	800079a <__aeabi_ddiv+0x6e>
 8000794:	085b      	lsrs	r3, r3, #1
 8000796:	ea4f 0232 	mov.w	r2, r2, rrx
 800079a:	1ab6      	subs	r6, r6, r2
 800079c:	eb65 0503 	sbc.w	r5, r5, r3
 80007a0:	085b      	lsrs	r3, r3, #1
 80007a2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007a6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80007aa:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80007ae:	ebb6 0e02 	subs.w	lr, r6, r2
 80007b2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007b6:	bf22      	ittt	cs
 80007b8:	1ab6      	subcs	r6, r6, r2
 80007ba:	4675      	movcs	r5, lr
 80007bc:	ea40 000c 	orrcs.w	r0, r0, ip
 80007c0:	085b      	lsrs	r3, r3, #1
 80007c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007c6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007ca:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007ce:	bf22      	ittt	cs
 80007d0:	1ab6      	subcs	r6, r6, r2
 80007d2:	4675      	movcs	r5, lr
 80007d4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80007d8:	085b      	lsrs	r3, r3, #1
 80007da:	ea4f 0232 	mov.w	r2, r2, rrx
 80007de:	ebb6 0e02 	subs.w	lr, r6, r2
 80007e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007e6:	bf22      	ittt	cs
 80007e8:	1ab6      	subcs	r6, r6, r2
 80007ea:	4675      	movcs	r5, lr
 80007ec:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 80007f0:	085b      	lsrs	r3, r3, #1
 80007f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007fe:	bf22      	ittt	cs
 8000800:	1ab6      	subcs	r6, r6, r2
 8000802:	4675      	movcs	r5, lr
 8000804:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000808:	ea55 0e06 	orrs.w	lr, r5, r6
 800080c:	d018      	beq.n	8000840 <__aeabi_ddiv+0x114>
 800080e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000812:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000816:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800081a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800081e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000822:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000826:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800082a:	d1c0      	bne.n	80007ae <__aeabi_ddiv+0x82>
 800082c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000830:	d10b      	bne.n	800084a <__aeabi_ddiv+0x11e>
 8000832:	ea41 0100 	orr.w	r1, r1, r0
 8000836:	f04f 0000 	mov.w	r0, #0
 800083a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800083e:	e7b6      	b.n	80007ae <__aeabi_ddiv+0x82>
 8000840:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000844:	bf04      	itt	eq
 8000846:	4301      	orreq	r1, r0
 8000848:	2000      	moveq	r0, #0
 800084a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800084e:	bf88      	it	hi
 8000850:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000854:	f63f aeaf 	bhi.w	80005b6 <__aeabi_dmul+0xde>
 8000858:	ebb5 0c03 	subs.w	ip, r5, r3
 800085c:	bf04      	itt	eq
 800085e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000862:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000866:	f150 0000 	adcs.w	r0, r0, #0
 800086a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800086e:	bd70      	pop	{r4, r5, r6, pc}
 8000870:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000874:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000878:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800087c:	bfc2      	ittt	gt
 800087e:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000882:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000886:	bd70      	popgt	{r4, r5, r6, pc}
 8000888:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800088c:	f04f 0e00 	mov.w	lr, #0
 8000890:	3c01      	subs	r4, #1
 8000892:	e690      	b.n	80005b6 <__aeabi_dmul+0xde>
 8000894:	ea45 0e06 	orr.w	lr, r5, r6
 8000898:	e68d      	b.n	80005b6 <__aeabi_dmul+0xde>
 800089a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800089e:	ea94 0f0c 	teq	r4, ip
 80008a2:	bf08      	it	eq
 80008a4:	ea95 0f0c 	teqeq	r5, ip
 80008a8:	f43f af3b 	beq.w	8000722 <__aeabi_dmul+0x24a>
 80008ac:	ea94 0f0c 	teq	r4, ip
 80008b0:	d10a      	bne.n	80008c8 <__aeabi_ddiv+0x19c>
 80008b2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80008b6:	f47f af34 	bne.w	8000722 <__aeabi_dmul+0x24a>
 80008ba:	ea95 0f0c 	teq	r5, ip
 80008be:	f47f af25 	bne.w	800070c <__aeabi_dmul+0x234>
 80008c2:	4610      	mov	r0, r2
 80008c4:	4619      	mov	r1, r3
 80008c6:	e72c      	b.n	8000722 <__aeabi_dmul+0x24a>
 80008c8:	ea95 0f0c 	teq	r5, ip
 80008cc:	d106      	bne.n	80008dc <__aeabi_ddiv+0x1b0>
 80008ce:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008d2:	f43f aefd 	beq.w	80006d0 <__aeabi_dmul+0x1f8>
 80008d6:	4610      	mov	r0, r2
 80008d8:	4619      	mov	r1, r3
 80008da:	e722      	b.n	8000722 <__aeabi_dmul+0x24a>
 80008dc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80008e0:	bf18      	it	ne
 80008e2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80008e6:	f47f aec5 	bne.w	8000674 <__aeabi_dmul+0x19c>
 80008ea:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 80008ee:	f47f af0d 	bne.w	800070c <__aeabi_dmul+0x234>
 80008f2:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 80008f6:	f47f aeeb 	bne.w	80006d0 <__aeabi_dmul+0x1f8>
 80008fa:	e712      	b.n	8000722 <__aeabi_dmul+0x24a>

080008fc <__gedf2>:
 80008fc:	f04f 3cff 	mov.w	ip, #4294967295
 8000900:	e006      	b.n	8000910 <__cmpdf2+0x4>
 8000902:	bf00      	nop

08000904 <__ledf2>:
 8000904:	f04f 0c01 	mov.w	ip, #1
 8000908:	e002      	b.n	8000910 <__cmpdf2+0x4>
 800090a:	bf00      	nop

0800090c <__cmpdf2>:
 800090c:	f04f 0c01 	mov.w	ip, #1
 8000910:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000914:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000918:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 800091c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000920:	bf18      	it	ne
 8000922:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000926:	d01b      	beq.n	8000960 <__cmpdf2+0x54>
 8000928:	b001      	add	sp, #4
 800092a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 800092e:	bf0c      	ite	eq
 8000930:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000934:	ea91 0f03 	teqne	r1, r3
 8000938:	bf02      	ittt	eq
 800093a:	ea90 0f02 	teqeq	r0, r2
 800093e:	2000      	moveq	r0, #0
 8000940:	4770      	bxeq	lr
 8000942:	f110 0f00 	cmn.w	r0, #0
 8000946:	ea91 0f03 	teq	r1, r3
 800094a:	bf58      	it	pl
 800094c:	4299      	cmppl	r1, r3
 800094e:	bf08      	it	eq
 8000950:	4290      	cmpeq	r0, r2
 8000952:	bf2c      	ite	cs
 8000954:	17d8      	asrcs	r0, r3, #31
 8000956:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 800095a:	f040 0001 	orr.w	r0, r0, #1
 800095e:	4770      	bx	lr
 8000960:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000964:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000968:	d102      	bne.n	8000970 <__cmpdf2+0x64>
 800096a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 800096e:	d107      	bne.n	8000980 <__cmpdf2+0x74>
 8000970:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000974:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000978:	d1d6      	bne.n	8000928 <__cmpdf2+0x1c>
 800097a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 800097e:	d0d3      	beq.n	8000928 <__cmpdf2+0x1c>
 8000980:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000984:	4770      	bx	lr
 8000986:	bf00      	nop

08000988 <__aeabi_cdrcmple>:
 8000988:	4684      	mov	ip, r0
 800098a:	4610      	mov	r0, r2
 800098c:	4662      	mov	r2, ip
 800098e:	468c      	mov	ip, r1
 8000990:	4619      	mov	r1, r3
 8000992:	4663      	mov	r3, ip
 8000994:	e000      	b.n	8000998 <__aeabi_cdcmpeq>
 8000996:	bf00      	nop

08000998 <__aeabi_cdcmpeq>:
 8000998:	b501      	push	{r0, lr}
 800099a:	f7ff ffb7 	bl	800090c <__cmpdf2>
 800099e:	2800      	cmp	r0, #0
 80009a0:	bf48      	it	mi
 80009a2:	f110 0f00 	cmnmi.w	r0, #0
 80009a6:	bd01      	pop	{r0, pc}

080009a8 <__aeabi_dcmpeq>:
 80009a8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009ac:	f7ff fff4 	bl	8000998 <__aeabi_cdcmpeq>
 80009b0:	bf0c      	ite	eq
 80009b2:	2001      	moveq	r0, #1
 80009b4:	2000      	movne	r0, #0
 80009b6:	f85d fb08 	ldr.w	pc, [sp], #8
 80009ba:	bf00      	nop

080009bc <__aeabi_dcmplt>:
 80009bc:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009c0:	f7ff ffea 	bl	8000998 <__aeabi_cdcmpeq>
 80009c4:	bf34      	ite	cc
 80009c6:	2001      	movcc	r0, #1
 80009c8:	2000      	movcs	r0, #0
 80009ca:	f85d fb08 	ldr.w	pc, [sp], #8
 80009ce:	bf00      	nop

080009d0 <__aeabi_dcmple>:
 80009d0:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009d4:	f7ff ffe0 	bl	8000998 <__aeabi_cdcmpeq>
 80009d8:	bf94      	ite	ls
 80009da:	2001      	movls	r0, #1
 80009dc:	2000      	movhi	r0, #0
 80009de:	f85d fb08 	ldr.w	pc, [sp], #8
 80009e2:	bf00      	nop

080009e4 <__aeabi_dcmpge>:
 80009e4:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009e8:	f7ff ffce 	bl	8000988 <__aeabi_cdrcmple>
 80009ec:	bf94      	ite	ls
 80009ee:	2001      	movls	r0, #1
 80009f0:	2000      	movhi	r0, #0
 80009f2:	f85d fb08 	ldr.w	pc, [sp], #8
 80009f6:	bf00      	nop

080009f8 <__aeabi_dcmpgt>:
 80009f8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009fc:	f7ff ffc4 	bl	8000988 <__aeabi_cdrcmple>
 8000a00:	bf34      	ite	cc
 8000a02:	2001      	movcc	r0, #1
 8000a04:	2000      	movcs	r0, #0
 8000a06:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a0a:	bf00      	nop

08000a0c <__aeabi_dcmpun>:
 8000a0c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a10:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a14:	d102      	bne.n	8000a1c <__aeabi_dcmpun+0x10>
 8000a16:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a1a:	d10a      	bne.n	8000a32 <__aeabi_dcmpun+0x26>
 8000a1c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a20:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a24:	d102      	bne.n	8000a2c <__aeabi_dcmpun+0x20>
 8000a26:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a2a:	d102      	bne.n	8000a32 <__aeabi_dcmpun+0x26>
 8000a2c:	f04f 0000 	mov.w	r0, #0
 8000a30:	4770      	bx	lr
 8000a32:	f04f 0001 	mov.w	r0, #1
 8000a36:	4770      	bx	lr

08000a38 <__aeabi_d2iz>:
 8000a38:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a3c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000a40:	d215      	bcs.n	8000a6e <__aeabi_d2iz+0x36>
 8000a42:	d511      	bpl.n	8000a68 <__aeabi_d2iz+0x30>
 8000a44:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000a48:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000a4c:	d912      	bls.n	8000a74 <__aeabi_d2iz+0x3c>
 8000a4e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000a52:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000a56:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000a5a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000a5e:	fa23 f002 	lsr.w	r0, r3, r2
 8000a62:	bf18      	it	ne
 8000a64:	4240      	negne	r0, r0
 8000a66:	4770      	bx	lr
 8000a68:	f04f 0000 	mov.w	r0, #0
 8000a6c:	4770      	bx	lr
 8000a6e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000a72:	d105      	bne.n	8000a80 <__aeabi_d2iz+0x48>
 8000a74:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000a78:	bf08      	it	eq
 8000a7a:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000a7e:	4770      	bx	lr
 8000a80:	f04f 0000 	mov.w	r0, #0
 8000a84:	4770      	bx	lr
 8000a86:	bf00      	nop

08000a88 <__aeabi_d2f>:
 8000a88:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a8c:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000a90:	bf24      	itt	cs
 8000a92:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000a96:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000a9a:	d90d      	bls.n	8000ab8 <__aeabi_d2f+0x30>
 8000a9c:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000aa0:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000aa4:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000aa8:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000aac:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000ab0:	bf08      	it	eq
 8000ab2:	f020 0001 	biceq.w	r0, r0, #1
 8000ab6:	4770      	bx	lr
 8000ab8:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000abc:	d121      	bne.n	8000b02 <__aeabi_d2f+0x7a>
 8000abe:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000ac2:	bfbc      	itt	lt
 8000ac4:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000ac8:	4770      	bxlt	lr
 8000aca:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000ace:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000ad2:	f1c2 0218 	rsb	r2, r2, #24
 8000ad6:	f1c2 0c20 	rsb	ip, r2, #32
 8000ada:	fa10 f30c 	lsls.w	r3, r0, ip
 8000ade:	fa20 f002 	lsr.w	r0, r0, r2
 8000ae2:	bf18      	it	ne
 8000ae4:	f040 0001 	orrne.w	r0, r0, #1
 8000ae8:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000aec:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000af0:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000af4:	ea40 000c 	orr.w	r0, r0, ip
 8000af8:	fa23 f302 	lsr.w	r3, r3, r2
 8000afc:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000b00:	e7cc      	b.n	8000a9c <__aeabi_d2f+0x14>
 8000b02:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000b06:	d107      	bne.n	8000b18 <__aeabi_d2f+0x90>
 8000b08:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000b0c:	bf1e      	ittt	ne
 8000b0e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000b12:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000b16:	4770      	bxne	lr
 8000b18:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000b1c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000b20:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000b24:	4770      	bx	lr
 8000b26:	bf00      	nop

08000b28 <__aeabi_frsub>:
 8000b28:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
 8000b2c:	e002      	b.n	8000b34 <__addsf3>
 8000b2e:	bf00      	nop

08000b30 <__aeabi_fsub>:
 8000b30:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

08000b34 <__addsf3>:
 8000b34:	0042      	lsls	r2, r0, #1
 8000b36:	bf1f      	itttt	ne
 8000b38:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8000b3c:	ea92 0f03 	teqne	r2, r3
 8000b40:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8000b44:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000b48:	d06a      	beq.n	8000c20 <__addsf3+0xec>
 8000b4a:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8000b4e:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8000b52:	bfc1      	itttt	gt
 8000b54:	18d2      	addgt	r2, r2, r3
 8000b56:	4041      	eorgt	r1, r0
 8000b58:	4048      	eorgt	r0, r1
 8000b5a:	4041      	eorgt	r1, r0
 8000b5c:	bfb8      	it	lt
 8000b5e:	425b      	neglt	r3, r3
 8000b60:	2b19      	cmp	r3, #25
 8000b62:	bf88      	it	hi
 8000b64:	4770      	bxhi	lr
 8000b66:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8000b6a:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000b6e:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 8000b72:	bf18      	it	ne
 8000b74:	4240      	negne	r0, r0
 8000b76:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b7a:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8000b7e:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 8000b82:	bf18      	it	ne
 8000b84:	4249      	negne	r1, r1
 8000b86:	ea92 0f03 	teq	r2, r3
 8000b8a:	d03f      	beq.n	8000c0c <__addsf3+0xd8>
 8000b8c:	f1a2 0201 	sub.w	r2, r2, #1
 8000b90:	fa41 fc03 	asr.w	ip, r1, r3
 8000b94:	eb10 000c 	adds.w	r0, r0, ip
 8000b98:	f1c3 0320 	rsb	r3, r3, #32
 8000b9c:	fa01 f103 	lsl.w	r1, r1, r3
 8000ba0:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8000ba4:	d502      	bpl.n	8000bac <__addsf3+0x78>
 8000ba6:	4249      	negs	r1, r1
 8000ba8:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8000bac:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
 8000bb0:	d313      	bcc.n	8000bda <__addsf3+0xa6>
 8000bb2:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 8000bb6:	d306      	bcc.n	8000bc6 <__addsf3+0x92>
 8000bb8:	0840      	lsrs	r0, r0, #1
 8000bba:	ea4f 0131 	mov.w	r1, r1, rrx
 8000bbe:	f102 0201 	add.w	r2, r2, #1
 8000bc2:	2afe      	cmp	r2, #254	; 0xfe
 8000bc4:	d251      	bcs.n	8000c6a <__addsf3+0x136>
 8000bc6:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
 8000bca:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000bce:	bf08      	it	eq
 8000bd0:	f020 0001 	biceq.w	r0, r0, #1
 8000bd4:	ea40 0003 	orr.w	r0, r0, r3
 8000bd8:	4770      	bx	lr
 8000bda:	0049      	lsls	r1, r1, #1
 8000bdc:	eb40 0000 	adc.w	r0, r0, r0
 8000be0:	f410 0f00 	tst.w	r0, #8388608	; 0x800000
 8000be4:	f1a2 0201 	sub.w	r2, r2, #1
 8000be8:	d1ed      	bne.n	8000bc6 <__addsf3+0x92>
 8000bea:	fab0 fc80 	clz	ip, r0
 8000bee:	f1ac 0c08 	sub.w	ip, ip, #8
 8000bf2:	ebb2 020c 	subs.w	r2, r2, ip
 8000bf6:	fa00 f00c 	lsl.w	r0, r0, ip
 8000bfa:	bfaa      	itet	ge
 8000bfc:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8000c00:	4252      	neglt	r2, r2
 8000c02:	4318      	orrge	r0, r3
 8000c04:	bfbc      	itt	lt
 8000c06:	40d0      	lsrlt	r0, r2
 8000c08:	4318      	orrlt	r0, r3
 8000c0a:	4770      	bx	lr
 8000c0c:	f092 0f00 	teq	r2, #0
 8000c10:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
 8000c14:	bf06      	itte	eq
 8000c16:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
 8000c1a:	3201      	addeq	r2, #1
 8000c1c:	3b01      	subne	r3, #1
 8000c1e:	e7b5      	b.n	8000b8c <__addsf3+0x58>
 8000c20:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000c24:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000c28:	bf18      	it	ne
 8000c2a:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000c2e:	d021      	beq.n	8000c74 <__addsf3+0x140>
 8000c30:	ea92 0f03 	teq	r2, r3
 8000c34:	d004      	beq.n	8000c40 <__addsf3+0x10c>
 8000c36:	f092 0f00 	teq	r2, #0
 8000c3a:	bf08      	it	eq
 8000c3c:	4608      	moveq	r0, r1
 8000c3e:	4770      	bx	lr
 8000c40:	ea90 0f01 	teq	r0, r1
 8000c44:	bf1c      	itt	ne
 8000c46:	2000      	movne	r0, #0
 8000c48:	4770      	bxne	lr
 8000c4a:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
 8000c4e:	d104      	bne.n	8000c5a <__addsf3+0x126>
 8000c50:	0040      	lsls	r0, r0, #1
 8000c52:	bf28      	it	cs
 8000c54:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
 8000c58:	4770      	bx	lr
 8000c5a:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
 8000c5e:	bf3c      	itt	cc
 8000c60:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
 8000c64:	4770      	bxcc	lr
 8000c66:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8000c6a:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
 8000c6e:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000c72:	4770      	bx	lr
 8000c74:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8000c78:	bf16      	itet	ne
 8000c7a:	4608      	movne	r0, r1
 8000c7c:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8000c80:	4601      	movne	r1, r0
 8000c82:	0242      	lsls	r2, r0, #9
 8000c84:	bf06      	itte	eq
 8000c86:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8000c8a:	ea90 0f01 	teqeq	r0, r1
 8000c8e:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
 8000c92:	4770      	bx	lr

08000c94 <__aeabi_ui2f>:
 8000c94:	f04f 0300 	mov.w	r3, #0
 8000c98:	e004      	b.n	8000ca4 <__aeabi_i2f+0x8>
 8000c9a:	bf00      	nop

08000c9c <__aeabi_i2f>:
 8000c9c:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
 8000ca0:	bf48      	it	mi
 8000ca2:	4240      	negmi	r0, r0
 8000ca4:	ea5f 0c00 	movs.w	ip, r0
 8000ca8:	bf08      	it	eq
 8000caa:	4770      	bxeq	lr
 8000cac:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
 8000cb0:	4601      	mov	r1, r0
 8000cb2:	f04f 0000 	mov.w	r0, #0
 8000cb6:	e01c      	b.n	8000cf2 <__aeabi_l2f+0x2a>

08000cb8 <__aeabi_ul2f>:
 8000cb8:	ea50 0201 	orrs.w	r2, r0, r1
 8000cbc:	bf08      	it	eq
 8000cbe:	4770      	bxeq	lr
 8000cc0:	f04f 0300 	mov.w	r3, #0
 8000cc4:	e00a      	b.n	8000cdc <__aeabi_l2f+0x14>
 8000cc6:	bf00      	nop

08000cc8 <__aeabi_l2f>:
 8000cc8:	ea50 0201 	orrs.w	r2, r0, r1
 8000ccc:	bf08      	it	eq
 8000cce:	4770      	bxeq	lr
 8000cd0:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
 8000cd4:	d502      	bpl.n	8000cdc <__aeabi_l2f+0x14>
 8000cd6:	4240      	negs	r0, r0
 8000cd8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000cdc:	ea5f 0c01 	movs.w	ip, r1
 8000ce0:	bf02      	ittt	eq
 8000ce2:	4684      	moveq	ip, r0
 8000ce4:	4601      	moveq	r1, r0
 8000ce6:	2000      	moveq	r0, #0
 8000ce8:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
 8000cec:	bf08      	it	eq
 8000cee:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
 8000cf2:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
 8000cf6:	fabc f28c 	clz	r2, ip
 8000cfa:	3a08      	subs	r2, #8
 8000cfc:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8000d00:	db10      	blt.n	8000d24 <__aeabi_l2f+0x5c>
 8000d02:	fa01 fc02 	lsl.w	ip, r1, r2
 8000d06:	4463      	add	r3, ip
 8000d08:	fa00 fc02 	lsl.w	ip, r0, r2
 8000d0c:	f1c2 0220 	rsb	r2, r2, #32
 8000d10:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8000d14:	fa20 f202 	lsr.w	r2, r0, r2
 8000d18:	eb43 0002 	adc.w	r0, r3, r2
 8000d1c:	bf08      	it	eq
 8000d1e:	f020 0001 	biceq.w	r0, r0, #1
 8000d22:	4770      	bx	lr
 8000d24:	f102 0220 	add.w	r2, r2, #32
 8000d28:	fa01 fc02 	lsl.w	ip, r1, r2
 8000d2c:	f1c2 0220 	rsb	r2, r2, #32
 8000d30:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8000d34:	fa21 f202 	lsr.w	r2, r1, r2
 8000d38:	eb43 0002 	adc.w	r0, r3, r2
 8000d3c:	bf08      	it	eq
 8000d3e:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000d42:	4770      	bx	lr

08000d44 <__aeabi_fmul>:
 8000d44:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000d48:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000d4c:	bf1e      	ittt	ne
 8000d4e:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000d52:	ea92 0f0c 	teqne	r2, ip
 8000d56:	ea93 0f0c 	teqne	r3, ip
 8000d5a:	d06f      	beq.n	8000e3c <__aeabi_fmul+0xf8>
 8000d5c:	441a      	add	r2, r3
 8000d5e:	ea80 0c01 	eor.w	ip, r0, r1
 8000d62:	0240      	lsls	r0, r0, #9
 8000d64:	bf18      	it	ne
 8000d66:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 8000d6a:	d01e      	beq.n	8000daa <__aeabi_fmul+0x66>
 8000d6c:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8000d70:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 8000d74:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 8000d78:	fba0 3101 	umull	r3, r1, r0, r1
 8000d7c:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8000d80:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 8000d84:	bf3e      	ittt	cc
 8000d86:	0049      	lslcc	r1, r1, #1
 8000d88:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 8000d8c:	005b      	lslcc	r3, r3, #1
 8000d8e:	ea40 0001 	orr.w	r0, r0, r1
 8000d92:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
 8000d96:	2afd      	cmp	r2, #253	; 0xfd
 8000d98:	d81d      	bhi.n	8000dd6 <__aeabi_fmul+0x92>
 8000d9a:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8000d9e:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000da2:	bf08      	it	eq
 8000da4:	f020 0001 	biceq.w	r0, r0, #1
 8000da8:	4770      	bx	lr
 8000daa:	f090 0f00 	teq	r0, #0
 8000dae:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8000db2:	bf08      	it	eq
 8000db4:	0249      	lsleq	r1, r1, #9
 8000db6:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000dba:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 8000dbe:	3a7f      	subs	r2, #127	; 0x7f
 8000dc0:	bfc2      	ittt	gt
 8000dc2:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8000dc6:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000dca:	4770      	bxgt	lr
 8000dcc:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000dd0:	f04f 0300 	mov.w	r3, #0
 8000dd4:	3a01      	subs	r2, #1
 8000dd6:	dc5d      	bgt.n	8000e94 <__aeabi_fmul+0x150>
 8000dd8:	f112 0f19 	cmn.w	r2, #25
 8000ddc:	bfdc      	itt	le
 8000dde:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
 8000de2:	4770      	bxle	lr
 8000de4:	f1c2 0200 	rsb	r2, r2, #0
 8000de8:	0041      	lsls	r1, r0, #1
 8000dea:	fa21 f102 	lsr.w	r1, r1, r2
 8000dee:	f1c2 0220 	rsb	r2, r2, #32
 8000df2:	fa00 fc02 	lsl.w	ip, r0, r2
 8000df6:	ea5f 0031 	movs.w	r0, r1, rrx
 8000dfa:	f140 0000 	adc.w	r0, r0, #0
 8000dfe:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 8000e02:	bf08      	it	eq
 8000e04:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000e08:	4770      	bx	lr
 8000e0a:	f092 0f00 	teq	r2, #0
 8000e0e:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8000e12:	bf02      	ittt	eq
 8000e14:	0040      	lsleq	r0, r0, #1
 8000e16:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8000e1a:	3a01      	subeq	r2, #1
 8000e1c:	d0f9      	beq.n	8000e12 <__aeabi_fmul+0xce>
 8000e1e:	ea40 000c 	orr.w	r0, r0, ip
 8000e22:	f093 0f00 	teq	r3, #0
 8000e26:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000e2a:	bf02      	ittt	eq
 8000e2c:	0049      	lsleq	r1, r1, #1
 8000e2e:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8000e32:	3b01      	subeq	r3, #1
 8000e34:	d0f9      	beq.n	8000e2a <__aeabi_fmul+0xe6>
 8000e36:	ea41 010c 	orr.w	r1, r1, ip
 8000e3a:	e78f      	b.n	8000d5c <__aeabi_fmul+0x18>
 8000e3c:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000e40:	ea92 0f0c 	teq	r2, ip
 8000e44:	bf18      	it	ne
 8000e46:	ea93 0f0c 	teqne	r3, ip
 8000e4a:	d00a      	beq.n	8000e62 <__aeabi_fmul+0x11e>
 8000e4c:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8000e50:	bf18      	it	ne
 8000e52:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8000e56:	d1d8      	bne.n	8000e0a <__aeabi_fmul+0xc6>
 8000e58:	ea80 0001 	eor.w	r0, r0, r1
 8000e5c:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8000e60:	4770      	bx	lr
 8000e62:	f090 0f00 	teq	r0, #0
 8000e66:	bf17      	itett	ne
 8000e68:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
 8000e6c:	4608      	moveq	r0, r1
 8000e6e:	f091 0f00 	teqne	r1, #0
 8000e72:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
 8000e76:	d014      	beq.n	8000ea2 <__aeabi_fmul+0x15e>
 8000e78:	ea92 0f0c 	teq	r2, ip
 8000e7c:	d101      	bne.n	8000e82 <__aeabi_fmul+0x13e>
 8000e7e:	0242      	lsls	r2, r0, #9
 8000e80:	d10f      	bne.n	8000ea2 <__aeabi_fmul+0x15e>
 8000e82:	ea93 0f0c 	teq	r3, ip
 8000e86:	d103      	bne.n	8000e90 <__aeabi_fmul+0x14c>
 8000e88:	024b      	lsls	r3, r1, #9
 8000e8a:	bf18      	it	ne
 8000e8c:	4608      	movne	r0, r1
 8000e8e:	d108      	bne.n	8000ea2 <__aeabi_fmul+0x15e>
 8000e90:	ea80 0001 	eor.w	r0, r0, r1
 8000e94:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8000e98:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000e9c:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000ea0:	4770      	bx	lr
 8000ea2:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000ea6:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
 8000eaa:	4770      	bx	lr

08000eac <__aeabi_fdiv>:
 8000eac:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000eb0:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000eb4:	bf1e      	ittt	ne
 8000eb6:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000eba:	ea92 0f0c 	teqne	r2, ip
 8000ebe:	ea93 0f0c 	teqne	r3, ip
 8000ec2:	d069      	beq.n	8000f98 <__aeabi_fdiv+0xec>
 8000ec4:	eba2 0203 	sub.w	r2, r2, r3
 8000ec8:	ea80 0c01 	eor.w	ip, r0, r1
 8000ecc:	0249      	lsls	r1, r1, #9
 8000ece:	ea4f 2040 	mov.w	r0, r0, lsl #9
 8000ed2:	d037      	beq.n	8000f44 <__aeabi_fdiv+0x98>
 8000ed4:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8000ed8:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
 8000edc:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 8000ee0:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8000ee4:	428b      	cmp	r3, r1
 8000ee6:	bf38      	it	cc
 8000ee8:	005b      	lslcc	r3, r3, #1
 8000eea:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
 8000eee:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
 8000ef2:	428b      	cmp	r3, r1
 8000ef4:	bf24      	itt	cs
 8000ef6:	1a5b      	subcs	r3, r3, r1
 8000ef8:	ea40 000c 	orrcs.w	r0, r0, ip
 8000efc:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
 8000f00:	bf24      	itt	cs
 8000f02:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
 8000f06:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000f0a:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 8000f0e:	bf24      	itt	cs
 8000f10:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
 8000f14:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000f18:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
 8000f1c:	bf24      	itt	cs
 8000f1e:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
 8000f22:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000f26:	011b      	lsls	r3, r3, #4
 8000f28:	bf18      	it	ne
 8000f2a:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
 8000f2e:	d1e0      	bne.n	8000ef2 <__aeabi_fdiv+0x46>
 8000f30:	2afd      	cmp	r2, #253	; 0xfd
 8000f32:	f63f af50 	bhi.w	8000dd6 <__aeabi_fmul+0x92>
 8000f36:	428b      	cmp	r3, r1
 8000f38:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000f3c:	bf08      	it	eq
 8000f3e:	f020 0001 	biceq.w	r0, r0, #1
 8000f42:	4770      	bx	lr
 8000f44:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8000f48:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000f4c:	327f      	adds	r2, #127	; 0x7f
 8000f4e:	bfc2      	ittt	gt
 8000f50:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8000f54:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000f58:	4770      	bxgt	lr
 8000f5a:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000f5e:	f04f 0300 	mov.w	r3, #0
 8000f62:	3a01      	subs	r2, #1
 8000f64:	e737      	b.n	8000dd6 <__aeabi_fmul+0x92>
 8000f66:	f092 0f00 	teq	r2, #0
 8000f6a:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8000f6e:	bf02      	ittt	eq
 8000f70:	0040      	lsleq	r0, r0, #1
 8000f72:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8000f76:	3a01      	subeq	r2, #1
 8000f78:	d0f9      	beq.n	8000f6e <__aeabi_fdiv+0xc2>
 8000f7a:	ea40 000c 	orr.w	r0, r0, ip
 8000f7e:	f093 0f00 	teq	r3, #0
 8000f82:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000f86:	bf02      	ittt	eq
 8000f88:	0049      	lsleq	r1, r1, #1
 8000f8a:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8000f8e:	3b01      	subeq	r3, #1
 8000f90:	d0f9      	beq.n	8000f86 <__aeabi_fdiv+0xda>
 8000f92:	ea41 010c 	orr.w	r1, r1, ip
 8000f96:	e795      	b.n	8000ec4 <__aeabi_fdiv+0x18>
 8000f98:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000f9c:	ea92 0f0c 	teq	r2, ip
 8000fa0:	d108      	bne.n	8000fb4 <__aeabi_fdiv+0x108>
 8000fa2:	0242      	lsls	r2, r0, #9
 8000fa4:	f47f af7d 	bne.w	8000ea2 <__aeabi_fmul+0x15e>
 8000fa8:	ea93 0f0c 	teq	r3, ip
 8000fac:	f47f af70 	bne.w	8000e90 <__aeabi_fmul+0x14c>
 8000fb0:	4608      	mov	r0, r1
 8000fb2:	e776      	b.n	8000ea2 <__aeabi_fmul+0x15e>
 8000fb4:	ea93 0f0c 	teq	r3, ip
 8000fb8:	d104      	bne.n	8000fc4 <__aeabi_fdiv+0x118>
 8000fba:	024b      	lsls	r3, r1, #9
 8000fbc:	f43f af4c 	beq.w	8000e58 <__aeabi_fmul+0x114>
 8000fc0:	4608      	mov	r0, r1
 8000fc2:	e76e      	b.n	8000ea2 <__aeabi_fmul+0x15e>
 8000fc4:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8000fc8:	bf18      	it	ne
 8000fca:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8000fce:	d1ca      	bne.n	8000f66 <__aeabi_fdiv+0xba>
 8000fd0:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
 8000fd4:	f47f af5c 	bne.w	8000e90 <__aeabi_fmul+0x14c>
 8000fd8:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
 8000fdc:	f47f af3c 	bne.w	8000e58 <__aeabi_fmul+0x114>
 8000fe0:	e75f      	b.n	8000ea2 <__aeabi_fmul+0x15e>
 8000fe2:	bf00      	nop

08000fe4 <__aeabi_f2uiz>:
 8000fe4:	0042      	lsls	r2, r0, #1
 8000fe6:	d20e      	bcs.n	8001006 <__aeabi_f2uiz+0x22>
 8000fe8:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 8000fec:	d30b      	bcc.n	8001006 <__aeabi_f2uiz+0x22>
 8000fee:	f04f 039e 	mov.w	r3, #158	; 0x9e
 8000ff2:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 8000ff6:	d409      	bmi.n	800100c <__aeabi_f2uiz+0x28>
 8000ff8:	ea4f 2300 	mov.w	r3, r0, lsl #8
 8000ffc:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8001000:	fa23 f002 	lsr.w	r0, r3, r2
 8001004:	4770      	bx	lr
 8001006:	f04f 0000 	mov.w	r0, #0
 800100a:	4770      	bx	lr
 800100c:	f112 0f61 	cmn.w	r2, #97	; 0x61
 8001010:	d101      	bne.n	8001016 <__aeabi_f2uiz+0x32>
 8001012:	0242      	lsls	r2, r0, #9
 8001014:	d102      	bne.n	800101c <__aeabi_f2uiz+0x38>
 8001016:	f04f 30ff 	mov.w	r0, #4294967295
 800101a:	4770      	bx	lr
 800101c:	f04f 0000 	mov.w	r0, #0
 8001020:	4770      	bx	lr
 8001022:	bf00      	nop

08001024 <SystemInit>:
  * @note   This function should be used only after reset.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 8001024:	b480      	push	{r7}
 8001026:	af00      	add	r7, sp, #0
  /* Reset the RCC clock configuration to the default reset state(for debug purpose) */
  /* Set HSION bit */
  RCC->CR |= 0x00000001U;
 8001028:	4b15      	ldr	r3, [pc, #84]	; (8001080 <SystemInit+0x5c>)
 800102a:	681b      	ldr	r3, [r3, #0]
 800102c:	4a14      	ldr	r2, [pc, #80]	; (8001080 <SystemInit+0x5c>)
 800102e:	f043 0301 	orr.w	r3, r3, #1
 8001032:	6013      	str	r3, [r2, #0]

  /* Reset SW, HPRE, PPRE1, PPRE2, ADCPRE and MCO bits */
#if !defined(STM32F105xC) && !defined(STM32F107xC)
  RCC->CFGR &= 0xF8FF0000U;
 8001034:	4b12      	ldr	r3, [pc, #72]	; (8001080 <SystemInit+0x5c>)
 8001036:	685a      	ldr	r2, [r3, #4]
 8001038:	4911      	ldr	r1, [pc, #68]	; (8001080 <SystemInit+0x5c>)
 800103a:	4b12      	ldr	r3, [pc, #72]	; (8001084 <SystemInit+0x60>)
 800103c:	4013      	ands	r3, r2
 800103e:	604b      	str	r3, [r1, #4]
#else
  RCC->CFGR &= 0xF0FF0000U;
#endif /* STM32F105xC */   
  
  /* Reset HSEON, CSSON and PLLON bits */
  RCC->CR &= 0xFEF6FFFFU;
 8001040:	4b0f      	ldr	r3, [pc, #60]	; (8001080 <SystemInit+0x5c>)
 8001042:	681b      	ldr	r3, [r3, #0]
 8001044:	4a0e      	ldr	r2, [pc, #56]	; (8001080 <SystemInit+0x5c>)
 8001046:	f023 7384 	bic.w	r3, r3, #17301504	; 0x1080000
 800104a:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800104e:	6013      	str	r3, [r2, #0]

  /* Reset HSEBYP bit */
  RCC->CR &= 0xFFFBFFFFU;
 8001050:	4b0b      	ldr	r3, [pc, #44]	; (8001080 <SystemInit+0x5c>)
 8001052:	681b      	ldr	r3, [r3, #0]
 8001054:	4a0a      	ldr	r2, [pc, #40]	; (8001080 <SystemInit+0x5c>)
 8001056:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800105a:	6013      	str	r3, [r2, #0]

  /* Reset PLLSRC, PLLXTPRE, PLLMUL and USBPRE/OTGFSPRE bits */
  RCC->CFGR &= 0xFF80FFFFU;
 800105c:	4b08      	ldr	r3, [pc, #32]	; (8001080 <SystemInit+0x5c>)
 800105e:	685b      	ldr	r3, [r3, #4]
 8001060:	4a07      	ldr	r2, [pc, #28]	; (8001080 <SystemInit+0x5c>)
 8001062:	f423 03fe 	bic.w	r3, r3, #8323072	; 0x7f0000
 8001066:	6053      	str	r3, [r2, #4]

  /* Reset CFGR2 register */
  RCC->CFGR2 = 0x00000000U;      
#else
  /* Disable all interrupts and clear pending bits  */
  RCC->CIR = 0x009F0000U;
 8001068:	4b05      	ldr	r3, [pc, #20]	; (8001080 <SystemInit+0x5c>)
 800106a:	f44f 021f 	mov.w	r2, #10420224	; 0x9f0000
 800106e:	609a      	str	r2, [r3, #8]
#endif 

#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH. */
 8001070:	4b05      	ldr	r3, [pc, #20]	; (8001088 <SystemInit+0x64>)
 8001072:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8001076:	609a      	str	r2, [r3, #8]
#endif 
}
 8001078:	bf00      	nop
 800107a:	46bd      	mov	sp, r7
 800107c:	bc80      	pop	{r7}
 800107e:	4770      	bx	lr
 8001080:	40021000 	.word	0x40021000
 8001084:	f8ff0000 	.word	0xf8ff0000
 8001088:	e000ed00 	.word	0xe000ed00

0800108c <InitADC_1>:
/*******************************END Variables******************************/
/*========================================================================*/
/********************************Functions*********************************/

void InitADC_1(void)
	{
 800108c:	b480      	push	{r7}
 800108e:	af00      	add	r7, sp, #0

		RCC->APB2ENR |= RCC_APB2ENR_IOPAEN;
 8001090:	4b2c      	ldr	r3, [pc, #176]	; (8001144 <InitADC_1+0xb8>)
 8001092:	699b      	ldr	r3, [r3, #24]
 8001094:	4a2b      	ldr	r2, [pc, #172]	; (8001144 <InitADC_1+0xb8>)
 8001096:	f043 0304 	orr.w	r3, r3, #4
 800109a:	6193      	str	r3, [r2, #24]
		RCC->APB2ENR |= RCC_APB2ENR_AFIOEN;
 800109c:	4b29      	ldr	r3, [pc, #164]	; (8001144 <InitADC_1+0xb8>)
 800109e:	699b      	ldr	r3, [r3, #24]
 80010a0:	4a28      	ldr	r2, [pc, #160]	; (8001144 <InitADC_1+0xb8>)
 80010a2:	f043 0301 	orr.w	r3, r3, #1
 80010a6:	6193      	str	r3, [r2, #24]

		GPIOA->CRL &= ~GPIO_CRL_CNF0;
 80010a8:	4b27      	ldr	r3, [pc, #156]	; (8001148 <InitADC_1+0xbc>)
 80010aa:	681b      	ldr	r3, [r3, #0]
 80010ac:	4a26      	ldr	r2, [pc, #152]	; (8001148 <InitADC_1+0xbc>)
 80010ae:	f023 030c 	bic.w	r3, r3, #12
 80010b2:	6013      	str	r3, [r2, #0]
		GPIOA->CRL &= ~GPIO_CRL_MODE0;
 80010b4:	4b24      	ldr	r3, [pc, #144]	; (8001148 <InitADC_1+0xbc>)
 80010b6:	681b      	ldr	r3, [r3, #0]
 80010b8:	4a23      	ldr	r2, [pc, #140]	; (8001148 <InitADC_1+0xbc>)
 80010ba:	f023 0303 	bic.w	r3, r3, #3
 80010be:	6013      	str	r3, [r2, #0]

		RCC->APB2ENR |= RCC_APB2ENR_ADC1EN;
 80010c0:	4b20      	ldr	r3, [pc, #128]	; (8001144 <InitADC_1+0xb8>)
 80010c2:	699b      	ldr	r3, [r3, #24]
 80010c4:	4a1f      	ldr	r2, [pc, #124]	; (8001144 <InitADC_1+0xb8>)
 80010c6:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80010ca:	6193      	str	r3, [r2, #24]
		RCC->APB2ENR |= RCC_CFGR_ADCPRE_DIV6;					// Prescalet 6. 72MHz/6 = 12MHz
 80010cc:	4b1d      	ldr	r3, [pc, #116]	; (8001144 <InitADC_1+0xb8>)
 80010ce:	699b      	ldr	r3, [r3, #24]
 80010d0:	4a1c      	ldr	r2, [pc, #112]	; (8001144 <InitADC_1+0xb8>)
 80010d2:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80010d6:	6193      	str	r3, [r2, #24]

		ADC1->CR2 |= ADC_CR2_CAL; 								// start calibration
 80010d8:	4b1c      	ldr	r3, [pc, #112]	; (800114c <InitADC_1+0xc0>)
 80010da:	689b      	ldr	r3, [r3, #8]
 80010dc:	4a1b      	ldr	r2, [pc, #108]	; (800114c <InitADC_1+0xc0>)
 80010de:	f043 0304 	orr.w	r3, r3, #4
 80010e2:	6093      	str	r3, [r2, #8]
		while (!(ADC1->CR2 & ADC_CR2_CAL));                		// waiting end calibration
 80010e4:	bf00      	nop
 80010e6:	4b19      	ldr	r3, [pc, #100]	; (800114c <InitADC_1+0xc0>)
 80010e8:	689b      	ldr	r3, [r3, #8]
 80010ea:	f003 0304 	and.w	r3, r3, #4
 80010ee:	2b00      	cmp	r3, #0
 80010f0:	d0f9      	beq.n	80010e6 <InitADC_1+0x5a>

		ADC1->CR2 |= ADC_CR2_ADON;     							// enable ADC
 80010f2:	4b16      	ldr	r3, [pc, #88]	; (800114c <InitADC_1+0xc0>)
 80010f4:	689b      	ldr	r3, [r3, #8]
 80010f6:	4a15      	ldr	r2, [pc, #84]	; (800114c <InitADC_1+0xc0>)
 80010f8:	f043 0301 	orr.w	r3, r3, #1
 80010fc:	6093      	str	r3, [r2, #8]
		ADC1->CR2 &= ~ADC_CR2_CONT;								// 0 - single conversion, 1 - continuous conversion
 80010fe:	4b13      	ldr	r3, [pc, #76]	; (800114c <InitADC_1+0xc0>)
 8001100:	689b      	ldr	r3, [r3, #8]
 8001102:	4a12      	ldr	r2, [pc, #72]	; (800114c <InitADC_1+0xc0>)
 8001104:	f023 0302 	bic.w	r3, r3, #2
 8001108:	6093      	str	r3, [r2, #8]
		ADC1->CR2 |= ADC_CR2_EXTSEL;      						// event start conversion SWSTART
 800110a:	4b10      	ldr	r3, [pc, #64]	; (800114c <InitADC_1+0xc0>)
 800110c:	689b      	ldr	r3, [r3, #8]
 800110e:	4a0f      	ldr	r2, [pc, #60]	; (800114c <InitADC_1+0xc0>)
 8001110:	f443 2360 	orr.w	r3, r3, #917504	; 0xe0000
 8001114:	6093      	str	r3, [r2, #8]
		ADC1->CR2 |= ADC_CR2_EXTTRIG;                       	// enable start conversion external signal
 8001116:	4b0d      	ldr	r3, [pc, #52]	; (800114c <InitADC_1+0xc0>)
 8001118:	689b      	ldr	r3, [r3, #8]
 800111a:	4a0c      	ldr	r2, [pc, #48]	; (800114c <InitADC_1+0xc0>)
 800111c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8001120:	6093      	str	r3, [r2, #8]
		ADC1->SMPR1 |= ADC_SMPR1_SMP16; 						// sempling 239.5 cycle
 8001122:	4b0a      	ldr	r3, [pc, #40]	; (800114c <InitADC_1+0xc0>)
 8001124:	68db      	ldr	r3, [r3, #12]
 8001126:	4a09      	ldr	r2, [pc, #36]	; (800114c <InitADC_1+0xc0>)
 8001128:	f443 13e0 	orr.w	r3, r3, #1835008	; 0x1c0000
 800112c:	60d3      	str	r3, [r2, #12]
		ADC1->SQR3 &= ~ADC_SQR3_SQ1;    						// selection channel 0
 800112e:	4b07      	ldr	r3, [pc, #28]	; (800114c <InitADC_1+0xc0>)
 8001130:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8001132:	4a06      	ldr	r2, [pc, #24]	; (800114c <InitADC_1+0xc0>)
 8001134:	f023 031f 	bic.w	r3, r3, #31
 8001138:	6353      	str	r3, [r2, #52]	; 0x34

	}
 800113a:	bf00      	nop
 800113c:	46bd      	mov	sp, r7
 800113e:	bc80      	pop	{r7}
 8001140:	4770      	bx	lr
 8001142:	bf00      	nop
 8001144:	40021000 	.word	0x40021000
 8001148:	40010800 	.word	0x40010800
 800114c:	40012400 	.word	0x40012400

08001150 <GetValueADC>:

float GetValueADC(uint8_t numberOfSample)
	{
 8001150:	b580      	push	{r7, lr}
 8001152:	b084      	sub	sp, #16
 8001154:	af00      	add	r7, sp, #0
 8001156:	4603      	mov	r3, r0
 8001158:	71fb      	strb	r3, [r7, #7]

		uint8_t couter = numberOfSample;
 800115a:	79fb      	ldrb	r3, [r7, #7]
 800115c:	73fb      	strb	r3, [r7, #15]
		float averageValueADC = 0;
 800115e:	f04f 0300 	mov.w	r3, #0
 8001162:	60bb      	str	r3, [r7, #8]

		ADC1->CR2 |= ADC_CR2_SWSTART;							// ADC start
 8001164:	4b17      	ldr	r3, [pc, #92]	; (80011c4 <GetValueADC+0x74>)
 8001166:	689b      	ldr	r3, [r3, #8]
 8001168:	4a16      	ldr	r2, [pc, #88]	; (80011c4 <GetValueADC+0x74>)
 800116a:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 800116e:	6093      	str	r3, [r2, #8]
		while (!(ADC1->SR & ADC_SR_EOC));						// Wait for End Of Convertation
 8001170:	bf00      	nop
 8001172:	4b14      	ldr	r3, [pc, #80]	; (80011c4 <GetValueADC+0x74>)
 8001174:	681b      	ldr	r3, [r3, #0]
 8001176:	f003 0302 	and.w	r3, r3, #2
 800117a:	2b00      	cmp	r3, #0
 800117c:	d0f9      	beq.n	8001172 <GetValueADC+0x22>

		while(couter)											// Calculate arithmetic mean
 800117e:	e00e      	b.n	800119e <GetValueADC+0x4e>
			{
				averageValueADC += (ADC1->DR);
 8001180:	4b10      	ldr	r3, [pc, #64]	; (80011c4 <GetValueADC+0x74>)
 8001182:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8001184:	4618      	mov	r0, r3
 8001186:	f7ff fd85 	bl	8000c94 <__aeabi_ui2f>
 800118a:	4603      	mov	r3, r0
 800118c:	4619      	mov	r1, r3
 800118e:	68b8      	ldr	r0, [r7, #8]
 8001190:	f7ff fcd0 	bl	8000b34 <__addsf3>
 8001194:	4603      	mov	r3, r0
 8001196:	60bb      	str	r3, [r7, #8]
				couter--;
 8001198:	7bfb      	ldrb	r3, [r7, #15]
 800119a:	3b01      	subs	r3, #1
 800119c:	73fb      	strb	r3, [r7, #15]
		while(couter)											// Calculate arithmetic mean
 800119e:	7bfb      	ldrb	r3, [r7, #15]
 80011a0:	2b00      	cmp	r3, #0
 80011a2:	d1ed      	bne.n	8001180 <GetValueADC+0x30>
			}
		averageValueADC = averageValueADC/numberOfSample;
 80011a4:	79fb      	ldrb	r3, [r7, #7]
 80011a6:	4618      	mov	r0, r3
 80011a8:	f7ff fd78 	bl	8000c9c <__aeabi_i2f>
 80011ac:	4603      	mov	r3, r0
 80011ae:	4619      	mov	r1, r3
 80011b0:	68b8      	ldr	r0, [r7, #8]
 80011b2:	f7ff fe7b 	bl	8000eac <__aeabi_fdiv>
 80011b6:	4603      	mov	r3, r0
 80011b8:	60bb      	str	r3, [r7, #8]

		return averageValueADC;									// Return arithmetic mean
 80011ba:	68bb      	ldr	r3, [r7, #8]

	}
 80011bc:	4618      	mov	r0, r3
 80011be:	3710      	adds	r7, #16
 80011c0:	46bd      	mov	sp, r7
 80011c2:	bd80      	pop	{r7, pc}
 80011c4:	40012400 	.word	0x40012400

080011c8 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 80011c8:	b480      	push	{r7}
 80011ca:	b083      	sub	sp, #12
 80011cc:	af00      	add	r7, sp, #0
 80011ce:	4603      	mov	r3, r0
 80011d0:	6039      	str	r1, [r7, #0]
 80011d2:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80011d4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80011d8:	2b00      	cmp	r3, #0
 80011da:	db0a      	blt.n	80011f2 <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80011dc:	683b      	ldr	r3, [r7, #0]
 80011de:	b2da      	uxtb	r2, r3
 80011e0:	490c      	ldr	r1, [pc, #48]	; (8001214 <__NVIC_SetPriority+0x4c>)
 80011e2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80011e6:	0112      	lsls	r2, r2, #4
 80011e8:	b2d2      	uxtb	r2, r2
 80011ea:	440b      	add	r3, r1
 80011ec:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 80011f0:	e00a      	b.n	8001208 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80011f2:	683b      	ldr	r3, [r7, #0]
 80011f4:	b2da      	uxtb	r2, r3
 80011f6:	4908      	ldr	r1, [pc, #32]	; (8001218 <__NVIC_SetPriority+0x50>)
 80011f8:	79fb      	ldrb	r3, [r7, #7]
 80011fa:	f003 030f 	and.w	r3, r3, #15
 80011fe:	3b04      	subs	r3, #4
 8001200:	0112      	lsls	r2, r2, #4
 8001202:	b2d2      	uxtb	r2, r2
 8001204:	440b      	add	r3, r1
 8001206:	761a      	strb	r2, [r3, #24]
}
 8001208:	bf00      	nop
 800120a:	370c      	adds	r7, #12
 800120c:	46bd      	mov	sp, r7
 800120e:	bc80      	pop	{r7}
 8001210:	4770      	bx	lr
 8001212:	bf00      	nop
 8001214:	e000e100 	.word	0xe000e100
 8001218:	e000ed00 	.word	0xe000ed00

0800121c <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 800121c:	b580      	push	{r7, lr}
 800121e:	b082      	sub	sp, #8
 8001220:	af00      	add	r7, sp, #0
 8001222:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8001224:	687b      	ldr	r3, [r7, #4]
 8001226:	3b01      	subs	r3, #1
 8001228:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800122c:	d301      	bcc.n	8001232 <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 800122e:	2301      	movs	r3, #1
 8001230:	e00f      	b.n	8001252 <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8001232:	4a0a      	ldr	r2, [pc, #40]	; (800125c <SysTick_Config+0x40>)
 8001234:	687b      	ldr	r3, [r7, #4]
 8001236:	3b01      	subs	r3, #1
 8001238:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 800123a:	210f      	movs	r1, #15
 800123c:	f04f 30ff 	mov.w	r0, #4294967295
 8001240:	f7ff ffc2 	bl	80011c8 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8001244:	4b05      	ldr	r3, [pc, #20]	; (800125c <SysTick_Config+0x40>)
 8001246:	2200      	movs	r2, #0
 8001248:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 800124a:	4b04      	ldr	r3, [pc, #16]	; (800125c <SysTick_Config+0x40>)
 800124c:	2207      	movs	r2, #7
 800124e:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8001250:	2300      	movs	r3, #0
}
 8001252:	4618      	mov	r0, r3
 8001254:	3708      	adds	r7, #8
 8001256:	46bd      	mov	sp, r7
 8001258:	bd80      	pop	{r7, pc}
 800125a:	bf00      	nop
 800125c:	e000e010 	.word	0xe000e010

08001260 <main>:
/******************************END Prototypes******************************/
/*========================================================================*/
/***********************************MAIN***********************************/

int main(void)
	{
 8001260:	b590      	push	{r4, r7, lr}
 8001262:	b085      	sub	sp, #20
 8001264:	af02      	add	r7, sp, #8

/******************************Initialization******************************/

		SysTick_Config(SystemCoreClock/1000);			// Time between 2 interrupts = 1 ms
 8001266:	4b4c      	ldr	r3, [pc, #304]	; (8001398 <main+0x138>)
 8001268:	681b      	ldr	r3, [r3, #0]
 800126a:	4a4c      	ldr	r2, [pc, #304]	; (800139c <main+0x13c>)
 800126c:	fba2 2303 	umull	r2, r3, r2, r3
 8001270:	099b      	lsrs	r3, r3, #6
 8001272:	4618      	mov	r0, r3
 8001274:	f7ff ffd2 	bl	800121c <SysTick_Config>
		InitRCC();										// SysClock - 72MHz
 8001278:	f000 fa4a 	bl	8001710 <InitRCC>
		InitGPIO();										// PC13 - internal LED
 800127c:	f000 fab0 	bl	80017e0 <InitGPIO>
		InitUSART_1();
 8001280:	f000 fae6 	bl	8001850 <InitUSART_1>
		InitPWM();
 8001284:	f000 f9d0 	bl	8001628 <InitPWM>
		InitADC_1();
 8001288:	f7ff ff00 	bl	800108c <InitADC_1>
/***************************END initialization*****************************/


		while(1)
		{
			uint16_t PidValue = 0;
 800128c:	2300      	movs	r3, #0
 800128e:	80fb      	strh	r3, [r7, #6]

			/*Get values from functions*/

			ADCVal =  GetValueADC(20);
 8001290:	2014      	movs	r0, #20
 8001292:	f7ff ff5d 	bl	8001150 <GetValueADC>
 8001296:	4602      	mov	r2, r0
 8001298:	4b41      	ldr	r3, [pc, #260]	; (80013a0 <main+0x140>)
 800129a:	601a      	str	r2, [r3, #0]
			VoltageVal = GetVoltageFromSensor(20, ADCVal);
 800129c:	4b40      	ldr	r3, [pc, #256]	; (80013a0 <main+0x140>)
 800129e:	681b      	ldr	r3, [r3, #0]
 80012a0:	4619      	mov	r1, r3
 80012a2:	2014      	movs	r0, #20
 80012a4:	f000 f898 	bl	80013d8 <GetVoltageFromSensor>
 80012a8:	4602      	mov	r2, r0
 80012aa:	4b3e      	ldr	r3, [pc, #248]	; (80013a4 <main+0x144>)
 80012ac:	601a      	str	r2, [r3, #0]
			TempValue = GetTemperatureFromSensor(5, VoltageVal);
 80012ae:	4b3d      	ldr	r3, [pc, #244]	; (80013a4 <main+0x144>)
 80012b0:	681b      	ldr	r3, [r3, #0]
 80012b2:	4619      	mov	r1, r3
 80012b4:	2005      	movs	r0, #5
 80012b6:	f000 f8db 	bl	8001470 <GetTemperatureFromSensor>
 80012ba:	4602      	mov	r2, r0
 80012bc:	4b3a      	ldr	r3, [pc, #232]	; (80013a8 <main+0x148>)
 80012be:	601a      	str	r2, [r3, #0]
			PidValue = PID_Regulation(100, 50, 50, TempValue, reqTemp);
 80012c0:	4b39      	ldr	r3, [pc, #228]	; (80013a8 <main+0x148>)
 80012c2:	681c      	ldr	r4, [r3, #0]
 80012c4:	4b39      	ldr	r3, [pc, #228]	; (80013ac <main+0x14c>)
 80012c6:	781b      	ldrb	r3, [r3, #0]
 80012c8:	4618      	mov	r0, r3
 80012ca:	f7ff fce3 	bl	8000c94 <__aeabi_ui2f>
 80012ce:	4603      	mov	r3, r0
 80012d0:	9300      	str	r3, [sp, #0]
 80012d2:	4623      	mov	r3, r4
 80012d4:	4a36      	ldr	r2, [pc, #216]	; (80013b0 <main+0x150>)
 80012d6:	4936      	ldr	r1, [pc, #216]	; (80013b0 <main+0x150>)
 80012d8:	4836      	ldr	r0, [pc, #216]	; (80013b4 <main+0x154>)
 80012da:	f000 f92b 	bl	8001534 <PID_Regulation>
 80012de:	4603      	mov	r3, r0
 80012e0:	4618      	mov	r0, r3
 80012e2:	f7ff fe7f 	bl	8000fe4 <__aeabi_f2uiz>
 80012e6:	4603      	mov	r3, r0
 80012e8:	80fb      	strh	r3, [r7, #6]

			if(PidValue >= 300 && PidValue >= 5000)
 80012ea:	88fb      	ldrh	r3, [r7, #6]
 80012ec:	f5b3 7f96 	cmp.w	r3, #300	; 0x12c
 80012f0:	d30a      	bcc.n	8001308 <main+0xa8>
 80012f2:	88fb      	ldrh	r3, [r7, #6]
 80012f4:	f241 3287 	movw	r2, #4999	; 0x1387
 80012f8:	4293      	cmp	r3, r2
 80012fa:	d905      	bls.n	8001308 <main+0xa8>
				PidValue = PidValue/50;
 80012fc:	88fb      	ldrh	r3, [r7, #6]
 80012fe:	4a2e      	ldr	r2, [pc, #184]	; (80013b8 <main+0x158>)
 8001300:	fba2 2303 	umull	r2, r3, r2, r3
 8001304:	091b      	lsrs	r3, r3, #4
 8001306:	80fb      	strh	r3, [r7, #6]

			SetFillFactorPWM(PidValue);            		// Send formated PidValue to PWM
 8001308:	88fb      	ldrh	r3, [r7, #6]
 800130a:	4618      	mov	r0, r3
 800130c:	f000 f9f2 	bl	80016f4 <SetFillFactorPWM>

/***************************Send DATA to USART****************************/

						sprintf (tempArr , "%0.2f", TempValue);
 8001310:	4b25      	ldr	r3, [pc, #148]	; (80013a8 <main+0x148>)
 8001312:	681b      	ldr	r3, [r3, #0]
 8001314:	4618      	mov	r0, r3
 8001316:	f7ff f887 	bl	8000428 <__aeabi_f2d>
 800131a:	4603      	mov	r3, r0
 800131c:	460c      	mov	r4, r1
 800131e:	461a      	mov	r2, r3
 8001320:	4623      	mov	r3, r4
 8001322:	4926      	ldr	r1, [pc, #152]	; (80013bc <main+0x15c>)
 8001324:	4826      	ldr	r0, [pc, #152]	; (80013c0 <main+0x160>)
 8001326:	f000 ffbd 	bl	80022a4 <siprintf>
						SendStringUSART_1("TMP result = ");
 800132a:	4826      	ldr	r0, [pc, #152]	; (80013c4 <main+0x164>)
 800132c:	f000 fafc 	bl	8001928 <SendStringUSART_1>
						SendStringUSART_1(tempArr);
 8001330:	4823      	ldr	r0, [pc, #140]	; (80013c0 <main+0x160>)
 8001332:	f000 faf9 	bl	8001928 <SendStringUSART_1>
						SendStringUSART_1("\r");
 8001336:	4824      	ldr	r0, [pc, #144]	; (80013c8 <main+0x168>)
 8001338:	f000 faf6 	bl	8001928 <SendStringUSART_1>

						sprintf (tempArr , "%0.2f", ADCVal);
 800133c:	4b18      	ldr	r3, [pc, #96]	; (80013a0 <main+0x140>)
 800133e:	681b      	ldr	r3, [r3, #0]
 8001340:	4618      	mov	r0, r3
 8001342:	f7ff f871 	bl	8000428 <__aeabi_f2d>
 8001346:	4603      	mov	r3, r0
 8001348:	460c      	mov	r4, r1
 800134a:	461a      	mov	r2, r3
 800134c:	4623      	mov	r3, r4
 800134e:	491b      	ldr	r1, [pc, #108]	; (80013bc <main+0x15c>)
 8001350:	481b      	ldr	r0, [pc, #108]	; (80013c0 <main+0x160>)
 8001352:	f000 ffa7 	bl	80022a4 <siprintf>
						SendStringUSART_1("ADC result = ");
 8001356:	481d      	ldr	r0, [pc, #116]	; (80013cc <main+0x16c>)
 8001358:	f000 fae6 	bl	8001928 <SendStringUSART_1>
						SendStringUSART_1(tempArr);
 800135c:	4818      	ldr	r0, [pc, #96]	; (80013c0 <main+0x160>)
 800135e:	f000 fae3 	bl	8001928 <SendStringUSART_1>
						SendStringUSART_1("\r");
 8001362:	4819      	ldr	r0, [pc, #100]	; (80013c8 <main+0x168>)
 8001364:	f000 fae0 	bl	8001928 <SendStringUSART_1>

						sprintf (tempArr , "%0.2f", VoltageVal);
 8001368:	4b0e      	ldr	r3, [pc, #56]	; (80013a4 <main+0x144>)
 800136a:	681b      	ldr	r3, [r3, #0]
 800136c:	4618      	mov	r0, r3
 800136e:	f7ff f85b 	bl	8000428 <__aeabi_f2d>
 8001372:	4603      	mov	r3, r0
 8001374:	460c      	mov	r4, r1
 8001376:	461a      	mov	r2, r3
 8001378:	4623      	mov	r3, r4
 800137a:	4910      	ldr	r1, [pc, #64]	; (80013bc <main+0x15c>)
 800137c:	4810      	ldr	r0, [pc, #64]	; (80013c0 <main+0x160>)
 800137e:	f000 ff91 	bl	80022a4 <siprintf>
						SendStringUSART_1("Voltage result = ");
 8001382:	4813      	ldr	r0, [pc, #76]	; (80013d0 <main+0x170>)
 8001384:	f000 fad0 	bl	8001928 <SendStringUSART_1>
						SendStringUSART_1(tempArr);
 8001388:	480d      	ldr	r0, [pc, #52]	; (80013c0 <main+0x160>)
 800138a:	f000 facd 	bl	8001928 <SendStringUSART_1>
						SendStringUSART_1("\r");
 800138e:	480e      	ldr	r0, [pc, #56]	; (80013c8 <main+0x168>)
 8001390:	f000 faca 	bl	8001928 <SendStringUSART_1>
		{
 8001394:	e77a      	b.n	800128c <main+0x2c>
 8001396:	bf00      	nop
 8001398:	20000000 	.word	0x20000000
 800139c:	10624dd3 	.word	0x10624dd3
 80013a0:	20000204 	.word	0x20000204
 80013a4:	2000020c 	.word	0x2000020c
 80013a8:	20000208 	.word	0x20000208
 80013ac:	20000004 	.word	0x20000004
 80013b0:	42480000 	.word	0x42480000
 80013b4:	42c80000 	.word	0x42c80000
 80013b8:	51eb851f 	.word	0x51eb851f
 80013bc:	08003ab0 	.word	0x08003ab0
 80013c0:	20000210 	.word	0x20000210
 80013c4:	08003ab8 	.word	0x08003ab8
 80013c8:	08003ac8 	.word	0x08003ac8
 80013cc:	08003acc 	.word	0x08003acc
 80013d0:	08003adc 	.word	0x08003adc
 80013d4:	00000000 	.word	0x00000000

080013d8 <GetVoltageFromSensor>:
 *  - ValueADC. You should to use function GetValueADC(). Where is you should to set
 *  numberOfSample also as argument in that function.
 *
 * */
float GetVoltageFromSensor(uint8_t numberOfSample, float ValueADC)
	{
 80013d8:	b590      	push	{r4, r7, lr}
 80013da:	b087      	sub	sp, #28
 80013dc:	af00      	add	r7, sp, #0
 80013de:	4603      	mov	r3, r0
 80013e0:	6039      	str	r1, [r7, #0]
 80013e2:	71fb      	strb	r3, [r7, #7]

		uint8_t couter = numberOfSample;
 80013e4:	79fb      	ldrb	r3, [r7, #7]
 80013e6:	75fb      	strb	r3, [r7, #23]

		float voltage = 0;
 80013e8:	f04f 0300 	mov.w	r3, #0
 80013ec:	60fb      	str	r3, [r7, #12]
		float averageValueVoltage=0;
 80013ee:	f04f 0300 	mov.w	r3, #0
 80013f2:	613b      	str	r3, [r7, #16]

/******************Calculate arithmetic mean of voltage********************/

		voltage = (3.3*ValueADC)/4095;						// ADC = (Vin * 2^n)/Vref
 80013f4:	6838      	ldr	r0, [r7, #0]
 80013f6:	f7ff f817 	bl	8000428 <__aeabi_f2d>
 80013fa:	a319      	add	r3, pc, #100	; (adr r3, 8001460 <GetVoltageFromSensor+0x88>)
 80013fc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001400:	f7ff f86a 	bl	80004d8 <__aeabi_dmul>
 8001404:	4603      	mov	r3, r0
 8001406:	460c      	mov	r4, r1
 8001408:	4618      	mov	r0, r3
 800140a:	4621      	mov	r1, r4
 800140c:	a316      	add	r3, pc, #88	; (adr r3, 8001468 <GetVoltageFromSensor+0x90>)
 800140e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001412:	f7ff f98b 	bl	800072c <__aeabi_ddiv>
 8001416:	4603      	mov	r3, r0
 8001418:	460c      	mov	r4, r1
 800141a:	4618      	mov	r0, r3
 800141c:	4621      	mov	r1, r4
 800141e:	f7ff fb33 	bl	8000a88 <__aeabi_d2f>
 8001422:	4603      	mov	r3, r0
 8001424:	60fb      	str	r3, [r7, #12]

		while(couter)
 8001426:	e008      	b.n	800143a <GetVoltageFromSensor+0x62>
			{
				averageValueVoltage += voltage;
 8001428:	68f9      	ldr	r1, [r7, #12]
 800142a:	6938      	ldr	r0, [r7, #16]
 800142c:	f7ff fb82 	bl	8000b34 <__addsf3>
 8001430:	4603      	mov	r3, r0
 8001432:	613b      	str	r3, [r7, #16]
				couter--;
 8001434:	7dfb      	ldrb	r3, [r7, #23]
 8001436:	3b01      	subs	r3, #1
 8001438:	75fb      	strb	r3, [r7, #23]
		while(couter)
 800143a:	7dfb      	ldrb	r3, [r7, #23]
 800143c:	2b00      	cmp	r3, #0
 800143e:	d1f3      	bne.n	8001428 <GetVoltageFromSensor+0x50>
			}

		averageValueVoltage = averageValueVoltage/numberOfSample;
 8001440:	79fb      	ldrb	r3, [r7, #7]
 8001442:	4618      	mov	r0, r3
 8001444:	f7ff fc2a 	bl	8000c9c <__aeabi_i2f>
 8001448:	4603      	mov	r3, r0
 800144a:	4619      	mov	r1, r3
 800144c:	6938      	ldr	r0, [r7, #16]
 800144e:	f7ff fd2d 	bl	8000eac <__aeabi_fdiv>
 8001452:	4603      	mov	r3, r0
 8001454:	613b      	str	r3, [r7, #16]

		return averageValueVoltage;
 8001456:	693b      	ldr	r3, [r7, #16]
	}
 8001458:	4618      	mov	r0, r3
 800145a:	371c      	adds	r7, #28
 800145c:	46bd      	mov	sp, r7
 800145e:	bd90      	pop	{r4, r7, pc}
 8001460:	66666666 	.word	0x66666666
 8001464:	400a6666 	.word	0x400a6666
 8001468:	00000000 	.word	0x00000000
 800146c:	40affe00 	.word	0x40affe00

08001470 <GetTemperatureFromSensor>:
 *  - ValtageValue. You should to use function GetVoltageFromSensor(). Where is you should to set
 *  numberOfSample also as argument in that function.
 *
 * */
float GetTemperatureFromSensor(uint8_t numberOfSample, float ValtageValue)
	{
 8001470:	b590      	push	{r4, r7, lr}
 8001472:	b087      	sub	sp, #28
 8001474:	af00      	add	r7, sp, #0
 8001476:	4603      	mov	r3, r0
 8001478:	6039      	str	r1, [r7, #0]
 800147a:	71fb      	strb	r3, [r7, #7]

		uint8_t couter = numberOfSample;
 800147c:	79fb      	ldrb	r3, [r7, #7]
 800147e:	75fb      	strb	r3, [r7, #23]
		float temp = 0;
 8001480:	f04f 0300 	mov.w	r3, #0
 8001484:	60fb      	str	r3, [r7, #12]
		float avarageTemp = 0;
 8001486:	f04f 0300 	mov.w	r3, #0
 800148a:	613b      	str	r3, [r7, #16]

		temp = ValtageValue / 0.03;							//	In manual 10mV/C, but chose an experimental number
 800148c:	6838      	ldr	r0, [r7, #0]
 800148e:	f7fe ffcb 	bl	8000428 <__aeabi_f2d>
 8001492:	a315      	add	r3, pc, #84	; (adr r3, 80014e8 <GetTemperatureFromSensor+0x78>)
 8001494:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001498:	f7ff f948 	bl	800072c <__aeabi_ddiv>
 800149c:	4603      	mov	r3, r0
 800149e:	460c      	mov	r4, r1
 80014a0:	4618      	mov	r0, r3
 80014a2:	4621      	mov	r1, r4
 80014a4:	f7ff faf0 	bl	8000a88 <__aeabi_d2f>
 80014a8:	4603      	mov	r3, r0
 80014aa:	60fb      	str	r3, [r7, #12]

/******************Calculate arithmetic mean of temperature*****************/
		while(couter)
 80014ac:	e008      	b.n	80014c0 <GetTemperatureFromSensor+0x50>
			{
				avarageTemp += temp;
 80014ae:	68f9      	ldr	r1, [r7, #12]
 80014b0:	6938      	ldr	r0, [r7, #16]
 80014b2:	f7ff fb3f 	bl	8000b34 <__addsf3>
 80014b6:	4603      	mov	r3, r0
 80014b8:	613b      	str	r3, [r7, #16]
				couter--;
 80014ba:	7dfb      	ldrb	r3, [r7, #23]
 80014bc:	3b01      	subs	r3, #1
 80014be:	75fb      	strb	r3, [r7, #23]
		while(couter)
 80014c0:	7dfb      	ldrb	r3, [r7, #23]
 80014c2:	2b00      	cmp	r3, #0
 80014c4:	d1f3      	bne.n	80014ae <GetTemperatureFromSensor+0x3e>
			}

		avarageTemp = avarageTemp/numberOfSample;
 80014c6:	79fb      	ldrb	r3, [r7, #7]
 80014c8:	4618      	mov	r0, r3
 80014ca:	f7ff fbe7 	bl	8000c9c <__aeabi_i2f>
 80014ce:	4603      	mov	r3, r0
 80014d0:	4619      	mov	r1, r3
 80014d2:	6938      	ldr	r0, [r7, #16]
 80014d4:	f7ff fcea 	bl	8000eac <__aeabi_fdiv>
 80014d8:	4603      	mov	r3, r0
 80014da:	613b      	str	r3, [r7, #16]
		return avarageTemp;
 80014dc:	693b      	ldr	r3, [r7, #16]

	}
 80014de:	4618      	mov	r0, r3
 80014e0:	371c      	adds	r7, #28
 80014e2:	46bd      	mov	sp, r7
 80014e4:	bd90      	pop	{r4, r7, pc}
 80014e6:	bf00      	nop
 80014e8:	eb851eb8 	.word	0xeb851eb8
 80014ec:	3f9eb851 	.word	0x3f9eb851

080014f0 <SysTick_Handler>:

/******************************END Functions********************************/
/*=========================================================================*/
/********************************Interrupts**********************************/
void SysTick_Handler(void)
{
 80014f0:	b480      	push	{r7}
 80014f2:	af00      	add	r7, sp, #0
	msTick++;
 80014f4:	4b04      	ldr	r3, [pc, #16]	; (8001508 <SysTick_Handler+0x18>)
 80014f6:	681b      	ldr	r3, [r3, #0]
 80014f8:	3301      	adds	r3, #1
 80014fa:	4a03      	ldr	r2, [pc, #12]	; (8001508 <SysTick_Handler+0x18>)
 80014fc:	6013      	str	r3, [r2, #0]
}
 80014fe:	bf00      	nop
 8001500:	46bd      	mov	sp, r7
 8001502:	bc80      	pop	{r7}
 8001504:	4770      	bx	lr
 8001506:	bf00      	nop
 8001508:	20000200 	.word	0x20000200

0800150c <USART1_IRQHandler>:

void USART1_IRQHandler (void){
 800150c:	b480      	push	{r7}
 800150e:	af00      	add	r7, sp, #0

	if (USART1->SR & USART_CR1_RXNEIE){
 8001510:	4b07      	ldr	r3, [pc, #28]	; (8001530 <USART1_IRQHandler+0x24>)
 8001512:	681b      	ldr	r3, [r3, #0]
 8001514:	f003 0320 	and.w	r3, r3, #32
 8001518:	2b00      	cmp	r3, #0
 800151a:	d005      	beq.n	8001528 <USART1_IRQHandler+0x1c>

		USART1->SR &= ~USART_CR1_RXNEIE;
 800151c:	4b04      	ldr	r3, [pc, #16]	; (8001530 <USART1_IRQHandler+0x24>)
 800151e:	681b      	ldr	r3, [r3, #0]
 8001520:	4a03      	ldr	r2, [pc, #12]	; (8001530 <USART1_IRQHandler+0x24>)
 8001522:	f023 0320 	bic.w	r3, r3, #32
 8001526:	6013      	str	r3, [r2, #0]

	}

}
 8001528:	bf00      	nop
 800152a:	46bd      	mov	sp, r7
 800152c:	bc80      	pop	{r7}
 800152e:	4770      	bx	lr
 8001530:	40013800 	.word	0x40013800

08001534 <PID_Regulation>:
/*******************************END Variables******************************/
/*========================================================================*/
/********************************Functions*********************************/

float PID_Regulation(float coefP, float coefI, float coefD, float currValue, float reqValue)
{
 8001534:	b580      	push	{r7, lr}
 8001536:	b084      	sub	sp, #16
 8001538:	af00      	add	r7, sp, #0
 800153a:	60f8      	str	r0, [r7, #12]
 800153c:	60b9      	str	r1, [r7, #8]
 800153e:	607a      	str	r2, [r7, #4]
 8001540:	603b      	str	r3, [r7, #0]

	lastError = error;
 8001542:	4b33      	ldr	r3, [pc, #204]	; (8001610 <PID_Regulation+0xdc>)
 8001544:	681b      	ldr	r3, [r3, #0]
 8001546:	4a33      	ldr	r2, [pc, #204]	; (8001614 <PID_Regulation+0xe0>)
 8001548:	6013      	str	r3, [r2, #0]
	error = currValue - reqValue;								// Calculate curr error
 800154a:	69b9      	ldr	r1, [r7, #24]
 800154c:	6838      	ldr	r0, [r7, #0]
 800154e:	f7ff faef 	bl	8000b30 <__aeabi_fsub>
 8001552:	4603      	mov	r3, r0
 8001554:	461a      	mov	r2, r3
 8001556:	4b2e      	ldr	r3, [pc, #184]	; (8001610 <PID_Regulation+0xdc>)
 8001558:	601a      	str	r2, [r3, #0]
	Int = Int + (error + lastError)/2; 							// Integral
 800155a:	4b2d      	ldr	r3, [pc, #180]	; (8001610 <PID_Regulation+0xdc>)
 800155c:	681a      	ldr	r2, [r3, #0]
 800155e:	4b2d      	ldr	r3, [pc, #180]	; (8001614 <PID_Regulation+0xe0>)
 8001560:	681b      	ldr	r3, [r3, #0]
 8001562:	4619      	mov	r1, r3
 8001564:	4610      	mov	r0, r2
 8001566:	f7ff fae5 	bl	8000b34 <__addsf3>
 800156a:	4603      	mov	r3, r0
 800156c:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 8001570:	4618      	mov	r0, r3
 8001572:	f7ff fc9b 	bl	8000eac <__aeabi_fdiv>
 8001576:	4603      	mov	r3, r0
 8001578:	461a      	mov	r2, r3
 800157a:	4b27      	ldr	r3, [pc, #156]	; (8001618 <PID_Regulation+0xe4>)
 800157c:	681b      	ldr	r3, [r3, #0]
 800157e:	4619      	mov	r1, r3
 8001580:	4610      	mov	r0, r2
 8001582:	f7ff fad7 	bl	8000b34 <__addsf3>
 8001586:	4603      	mov	r3, r0
 8001588:	461a      	mov	r2, r3
 800158a:	4b23      	ldr	r3, [pc, #140]	; (8001618 <PID_Regulation+0xe4>)
 800158c:	601a      	str	r2, [r3, #0]
	calcInt = Int*(1/coefI); 									// Calculate integral
 800158e:	68b9      	ldr	r1, [r7, #8]
 8001590:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
 8001594:	f7ff fc8a 	bl	8000eac <__aeabi_fdiv>
 8001598:	4603      	mov	r3, r0
 800159a:	461a      	mov	r2, r3
 800159c:	4b1e      	ldr	r3, [pc, #120]	; (8001618 <PID_Regulation+0xe4>)
 800159e:	681b      	ldr	r3, [r3, #0]
 80015a0:	4619      	mov	r1, r3
 80015a2:	4610      	mov	r0, r2
 80015a4:	f7ff fbce 	bl	8000d44 <__aeabi_fmul>
 80015a8:	4603      	mov	r3, r0
 80015aa:	461a      	mov	r2, r3
 80015ac:	4b1b      	ldr	r3, [pc, #108]	; (800161c <PID_Regulation+0xe8>)
 80015ae:	601a      	str	r2, [r3, #0]

	calcDif = coefD*(error-lastError); 							// Calculate deffirincial
 80015b0:	4b17      	ldr	r3, [pc, #92]	; (8001610 <PID_Regulation+0xdc>)
 80015b2:	681a      	ldr	r2, [r3, #0]
 80015b4:	4b17      	ldr	r3, [pc, #92]	; (8001614 <PID_Regulation+0xe0>)
 80015b6:	681b      	ldr	r3, [r3, #0]
 80015b8:	4619      	mov	r1, r3
 80015ba:	4610      	mov	r0, r2
 80015bc:	f7ff fab8 	bl	8000b30 <__aeabi_fsub>
 80015c0:	4603      	mov	r3, r0
 80015c2:	6879      	ldr	r1, [r7, #4]
 80015c4:	4618      	mov	r0, r3
 80015c6:	f7ff fbbd 	bl	8000d44 <__aeabi_fmul>
 80015ca:	4603      	mov	r3, r0
 80015cc:	461a      	mov	r2, r3
 80015ce:	4b14      	ldr	r3, [pc, #80]	; (8001620 <PID_Regulation+0xec>)
 80015d0:	601a      	str	r2, [r3, #0]

	return PID = (coefP * error + calcInt + calcDif);			// Output PID value
 80015d2:	4b0f      	ldr	r3, [pc, #60]	; (8001610 <PID_Regulation+0xdc>)
 80015d4:	681b      	ldr	r3, [r3, #0]
 80015d6:	68f9      	ldr	r1, [r7, #12]
 80015d8:	4618      	mov	r0, r3
 80015da:	f7ff fbb3 	bl	8000d44 <__aeabi_fmul>
 80015de:	4603      	mov	r3, r0
 80015e0:	461a      	mov	r2, r3
 80015e2:	4b0e      	ldr	r3, [pc, #56]	; (800161c <PID_Regulation+0xe8>)
 80015e4:	681b      	ldr	r3, [r3, #0]
 80015e6:	4619      	mov	r1, r3
 80015e8:	4610      	mov	r0, r2
 80015ea:	f7ff faa3 	bl	8000b34 <__addsf3>
 80015ee:	4603      	mov	r3, r0
 80015f0:	461a      	mov	r2, r3
 80015f2:	4b0b      	ldr	r3, [pc, #44]	; (8001620 <PID_Regulation+0xec>)
 80015f4:	681b      	ldr	r3, [r3, #0]
 80015f6:	4619      	mov	r1, r3
 80015f8:	4610      	mov	r0, r2
 80015fa:	f7ff fa9b 	bl	8000b34 <__addsf3>
 80015fe:	4603      	mov	r3, r0
 8001600:	461a      	mov	r2, r3
 8001602:	4b08      	ldr	r3, [pc, #32]	; (8001624 <PID_Regulation+0xf0>)
 8001604:	601a      	str	r2, [r3, #0]
 8001606:	4613      	mov	r3, r2

}
 8001608:	4618      	mov	r0, r3
 800160a:	3710      	adds	r7, #16
 800160c:	46bd      	mov	sp, r7
 800160e:	bd80      	pop	{r7, pc}
 8001610:	20000228 	.word	0x20000228
 8001614:	20000220 	.word	0x20000220
 8001618:	20000224 	.word	0x20000224
 800161c:	2000021c 	.word	0x2000021c
 8001620:	20000218 	.word	0x20000218
 8001624:	20000214 	.word	0x20000214

08001628 <InitPWM>:
/*******************************END Variables******************************/
/*========================================================================*/
/********************************Functions*********************************/

void InitPWM(void)
{
 8001628:	b480      	push	{r7}
 800162a:	af00      	add	r7, sp, #0

	RCC->APB2ENR |= RCC_APB2ENR_IOPAEN								// Port A clock enable
 800162c:	4b2e      	ldr	r3, [pc, #184]	; (80016e8 <InitPWM+0xc0>)
 800162e:	699b      	ldr	r3, [r3, #24]
 8001630:	4a2d      	ldr	r2, [pc, #180]	; (80016e8 <InitPWM+0xc0>)
 8001632:	f043 0305 	orr.w	r3, r3, #5
 8001636:	6193      	str	r3, [r2, #24]
				 |  RCC_APB2ENR_AFIOEN;								// AF is enable
	RCC->APB1ENR |= RCC_APB1ENR_TIM2EN;								// TIM2 click is enable
 8001638:	4b2b      	ldr	r3, [pc, #172]	; (80016e8 <InitPWM+0xc0>)
 800163a:	69db      	ldr	r3, [r3, #28]
 800163c:	4a2a      	ldr	r2, [pc, #168]	; (80016e8 <InitPWM+0xc0>)
 800163e:	f043 0301 	orr.w	r3, r3, #1
 8001642:	61d3      	str	r3, [r2, #28]

	//RCC->CFGR |= RCC_CFGR_PPRE1_DIV2;								// APB1 prescaler is 2. 72MHz/2 = 36 MHz (is max clock for APB1)

	GPIOA->CRL &= ~GPIO_CRL_CNF1;									// Clear reg
 8001644:	4b29      	ldr	r3, [pc, #164]	; (80016ec <InitPWM+0xc4>)
 8001646:	681b      	ldr	r3, [r3, #0]
 8001648:	4a28      	ldr	r2, [pc, #160]	; (80016ec <InitPWM+0xc4>)
 800164a:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 800164e:	6013      	str	r3, [r2, #0]
	GPIOA->CRL &= ~GPIO_CRL_MODE1;
 8001650:	4b26      	ldr	r3, [pc, #152]	; (80016ec <InitPWM+0xc4>)
 8001652:	681b      	ldr	r3, [r3, #0]
 8001654:	4a25      	ldr	r2, [pc, #148]	; (80016ec <InitPWM+0xc4>)
 8001656:	f023 0330 	bic.w	r3, r3, #48	; 0x30
 800165a:	6013      	str	r3, [r2, #0]

	GPIOA->CRL |= GPIO_CRL_CNF1_1									// PA1 AF mode
 800165c:	4b23      	ldr	r3, [pc, #140]	; (80016ec <InitPWM+0xc4>)
 800165e:	681b      	ldr	r3, [r3, #0]
 8001660:	4a22      	ldr	r2, [pc, #136]	; (80016ec <InitPWM+0xc4>)
 8001662:	f043 03b0 	orr.w	r3, r3, #176	; 0xb0
 8001666:	6013      	str	r3, [r2, #0]
			   |  GPIO_CRL_MODE1;

	TIM2->PSC = 7200-1;												// Prescaler value
 8001668:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800166c:	f641 421f 	movw	r2, #7199	; 0x1c1f
 8001670:	629a      	str	r2, [r3, #40]	; 0x28
	TIM2->ARR = 100;												// Value to autoreload
 8001672:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001676:	2264      	movs	r2, #100	; 0x64
 8001678:	62da      	str	r2, [r3, #44]	; 0x2c
	TIM2->CCR2 = 100;												// fill factor
 800167a:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800167e:	2264      	movs	r2, #100	; 0x64
 8001680:	639a      	str	r2, [r3, #56]	; 0x38

	TIM1->BDTR |= TIM_BDTR_MOE;										//Main Output enable
 8001682:	4b1b      	ldr	r3, [pc, #108]	; (80016f0 <InitPWM+0xc8>)
 8001684:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001686:	4a1a      	ldr	r2, [pc, #104]	; (80016f0 <InitPWM+0xc8>)
 8001688:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800168c:	6453      	str	r3, [r2, #68]	; 0x44

	TIM2->CCMR1 |= TIM_CCMR1_OC2M_1									// PWM mode 1
 800168e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001692:	699b      	ldr	r3, [r3, #24]
 8001694:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001698:	f443 43c0 	orr.w	r3, r3, #24576	; 0x6000
 800169c:	6193      	str	r3, [r2, #24]
			   |  TIM_CCMR1_OC2M_2;

	TIM2->CCER |= TIM_CCER_CC2E;									// Capture/Compare 2 output enable
 800169e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80016a2:	6a1b      	ldr	r3, [r3, #32]
 80016a4:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80016a8:	f043 0310 	orr.w	r3, r3, #16
 80016ac:	6213      	str	r3, [r2, #32]
	TIM2->CCER &= ~TIM_CCER_CC2P;									// Capture/Compare 2 output Polarity - disable
 80016ae:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80016b2:	6a1b      	ldr	r3, [r3, #32]
 80016b4:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80016b8:	f023 0320 	bic.w	r3, r3, #32
 80016bc:	6213      	str	r3, [r2, #32]
	TIM2->CR1 &= ~TIM_CR1_DIR;										// Count direction
 80016be:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80016c2:	681b      	ldr	r3, [r3, #0]
 80016c4:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80016c8:	f023 0310 	bic.w	r3, r3, #16
 80016cc:	6013      	str	r3, [r2, #0]
	TIM2->CR1 |= TIM_CR1_CEN;										// Counter enable
 80016ce:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80016d2:	681b      	ldr	r3, [r3, #0]
 80016d4:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80016d8:	f043 0301 	orr.w	r3, r3, #1
 80016dc:	6013      	str	r3, [r2, #0]
}
 80016de:	bf00      	nop
 80016e0:	46bd      	mov	sp, r7
 80016e2:	bc80      	pop	{r7}
 80016e4:	4770      	bx	lr
 80016e6:	bf00      	nop
 80016e8:	40021000 	.word	0x40021000
 80016ec:	40010800 	.word	0x40010800
 80016f0:	40012c00 	.word	0x40012c00

080016f4 <SetFillFactorPWM>:

void SetFillFactorPWM(int ValCCR2)
{
 80016f4:	b480      	push	{r7}
 80016f6:	b083      	sub	sp, #12
 80016f8:	af00      	add	r7, sp, #0
 80016fa:	6078      	str	r0, [r7, #4]

	TIM2->CCR2 = ValCCR2;											// fill factor
 80016fc:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001700:	687b      	ldr	r3, [r7, #4]
 8001702:	6393      	str	r3, [r2, #56]	; 0x38

}
 8001704:	bf00      	nop
 8001706:	370c      	adds	r7, #12
 8001708:	46bd      	mov	sp, r7
 800170a:	bc80      	pop	{r7}
 800170c:	4770      	bx	lr
	...

08001710 <InitRCC>:
#include "sysInit.h"
/*******************************END Includes*******************************/
/*========================================================================*/
/********************************Functions**********************************/
void InitRCC(void)
{
 8001710:	b480      	push	{r7}
 8001712:	af00      	add	r7, sp, #0

	RCC->CR |= (uint32_t)RCC_CR_HSEON;						//source freq is HSE
 8001714:	4b30      	ldr	r3, [pc, #192]	; (80017d8 <InitRCC+0xc8>)
 8001716:	681b      	ldr	r3, [r3, #0]
 8001718:	4a2f      	ldr	r2, [pc, #188]	; (80017d8 <InitRCC+0xc8>)
 800171a:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800171e:	6013      	str	r3, [r2, #0]
	while(!(RCC->CR & RCC_CR_HSERDY));						//we wait for sourse freq change. Default - HSI, but we have activated HSE
 8001720:	bf00      	nop
 8001722:	4b2d      	ldr	r3, [pc, #180]	; (80017d8 <InitRCC+0xc8>)
 8001724:	681b      	ldr	r3, [r3, #0]
 8001726:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800172a:	2b00      	cmp	r3, #0
 800172c:	d0f9      	beq.n	8001722 <InitRCC+0x12>

	FLASH->ACR = FLASH_ACR_PRFTBE | FLASH_ACR_LATENCY;		//clock flash memory
 800172e:	4b2b      	ldr	r3, [pc, #172]	; (80017dc <InitRCC+0xcc>)
 8001730:	2217      	movs	r2, #23
 8001732:	601a      	str	r2, [r3, #0]

	RCC->CFGR |= RCC_CFGR_HPRE_DIV1;						//AHB = SYSCLK/1
 8001734:	4b28      	ldr	r3, [pc, #160]	; (80017d8 <InitRCC+0xc8>)
 8001736:	4a28      	ldr	r2, [pc, #160]	; (80017d8 <InitRCC+0xc8>)
 8001738:	685b      	ldr	r3, [r3, #4]
 800173a:	6053      	str	r3, [r2, #4]
	RCC->CFGR |= RCC_CFGR_PPRE1_DIV1;						//APB1 = HCLK/1
 800173c:	4b26      	ldr	r3, [pc, #152]	; (80017d8 <InitRCC+0xc8>)
 800173e:	4a26      	ldr	r2, [pc, #152]	; (80017d8 <InitRCC+0xc8>)
 8001740:	685b      	ldr	r3, [r3, #4]
 8001742:	6053      	str	r3, [r2, #4]
	RCC->CFGR |= RCC_CFGR_PPRE2_DIV1;                       //APB2 = HCLK/1
 8001744:	4b24      	ldr	r3, [pc, #144]	; (80017d8 <InitRCC+0xc8>)
 8001746:	4a24      	ldr	r2, [pc, #144]	; (80017d8 <InitRCC+0xc8>)
 8001748:	685b      	ldr	r3, [r3, #4]
 800174a:	6053      	str	r3, [r2, #4]

	RCC->CFGR &= ~RCC_CFGR_PLLMULL;	                        //CLEAR REGISTERS
 800174c:	4b22      	ldr	r3, [pc, #136]	; (80017d8 <InitRCC+0xc8>)
 800174e:	685b      	ldr	r3, [r3, #4]
 8001750:	4a21      	ldr	r2, [pc, #132]	; (80017d8 <InitRCC+0xc8>)
 8001752:	f423 1370 	bic.w	r3, r3, #3932160	; 0x3c0000
 8001756:	6053      	str	r3, [r2, #4]
	RCC->CFGR &= ~RCC_CFGR_PLLSRC;                          //CLEAR REGISTERS
 8001758:	4b1f      	ldr	r3, [pc, #124]	; (80017d8 <InitRCC+0xc8>)
 800175a:	685b      	ldr	r3, [r3, #4]
 800175c:	4a1e      	ldr	r2, [pc, #120]	; (80017d8 <InitRCC+0xc8>)
 800175e:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001762:	6053      	str	r3, [r2, #4]
	RCC->CFGR &= ~RCC_CFGR_PLLXTPRE;                        //CLEAR REGISTERS
 8001764:	4b1c      	ldr	r3, [pc, #112]	; (80017d8 <InitRCC+0xc8>)
 8001766:	685b      	ldr	r3, [r3, #4]
 8001768:	4a1b      	ldr	r2, [pc, #108]	; (80017d8 <InitRCC+0xc8>)
 800176a:	f423 3300 	bic.w	r3, r3, #131072	; 0x20000
 800176e:	6053      	str	r3, [r2, #4]

	RCC->CFGR |= RCC_CFGR_PLLSRC;							//Clock from PREDIV1 selected as PLL input clock
 8001770:	4b19      	ldr	r3, [pc, #100]	; (80017d8 <InitRCC+0xc8>)
 8001772:	685b      	ldr	r3, [r3, #4]
 8001774:	4a18      	ldr	r2, [pc, #96]	; (80017d8 <InitRCC+0xc8>)
 8001776:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800177a:	6053      	str	r3, [r2, #4]
	RCC->CFGR |= RCC_CFGR_PLLXTPRE_HSE ;						//Config predivision
 800177c:	4b16      	ldr	r3, [pc, #88]	; (80017d8 <InitRCC+0xc8>)
 800177e:	4a16      	ldr	r2, [pc, #88]	; (80017d8 <InitRCC+0xc8>)
 8001780:	685b      	ldr	r3, [r3, #4]
 8001782:	6053      	str	r3, [r2, #4]
	RCC->CFGR |= RCC_CFGR_PLLMULL9;							//PLLx9. 8 MHz * 9 = 72 MHz
 8001784:	4b14      	ldr	r3, [pc, #80]	; (80017d8 <InitRCC+0xc8>)
 8001786:	685b      	ldr	r3, [r3, #4]
 8001788:	4a13      	ldr	r2, [pc, #76]	; (80017d8 <InitRCC+0xc8>)
 800178a:	f443 13e0 	orr.w	r3, r3, #1835008	; 0x1c0000
 800178e:	6053      	str	r3, [r2, #4]

	RCC->CR |= RCC_CR_PLLON;								//PLL enable
 8001790:	4b11      	ldr	r3, [pc, #68]	; (80017d8 <InitRCC+0xc8>)
 8001792:	681b      	ldr	r3, [r3, #0]
 8001794:	4a10      	ldr	r2, [pc, #64]	; (80017d8 <InitRCC+0xc8>)
 8001796:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 800179a:	6013      	str	r3, [r2, #0]
	while((RCC->CR & RCC_CR_PLLRDY) == 0) {}				//we are waiting for PLL enable
 800179c:	bf00      	nop
 800179e:	4b0e      	ldr	r3, [pc, #56]	; (80017d8 <InitRCC+0xc8>)
 80017a0:	681b      	ldr	r3, [r3, #0]
 80017a2:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80017a6:	2b00      	cmp	r3, #0
 80017a8:	d0f9      	beq.n	800179e <InitRCC+0x8e>

	RCC->CFGR &= ~RCC_CFGR_SW;								//CLEAR_BIT SW bits
 80017aa:	4b0b      	ldr	r3, [pc, #44]	; (80017d8 <InitRCC+0xc8>)
 80017ac:	685b      	ldr	r3, [r3, #4]
 80017ae:	4a0a      	ldr	r2, [pc, #40]	; (80017d8 <InitRCC+0xc8>)
 80017b0:	f023 0303 	bic.w	r3, r3, #3
 80017b4:	6053      	str	r3, [r2, #4]
	RCC->CFGR |= RCC_CFGR_SW_PLL;							//select source SYSCLK = PLL
 80017b6:	4b08      	ldr	r3, [pc, #32]	; (80017d8 <InitRCC+0xc8>)
 80017b8:	685b      	ldr	r3, [r3, #4]
 80017ba:	4a07      	ldr	r2, [pc, #28]	; (80017d8 <InitRCC+0xc8>)
 80017bc:	f043 0302 	orr.w	r3, r3, #2
 80017c0:	6053      	str	r3, [r2, #4]
	while((RCC->CFGR & RCC_CFGR_SWS) != RCC_CFGR_SWS_1) {}	//wait till PLL is used
 80017c2:	bf00      	nop
 80017c4:	4b04      	ldr	r3, [pc, #16]	; (80017d8 <InitRCC+0xc8>)
 80017c6:	685b      	ldr	r3, [r3, #4]
 80017c8:	f003 030c 	and.w	r3, r3, #12
 80017cc:	2b08      	cmp	r3, #8
 80017ce:	d1f9      	bne.n	80017c4 <InitRCC+0xb4>

}
 80017d0:	bf00      	nop
 80017d2:	46bd      	mov	sp, r7
 80017d4:	bc80      	pop	{r7}
 80017d6:	4770      	bx	lr
 80017d8:	40021000 	.word	0x40021000
 80017dc:	40022000 	.word	0x40022000

080017e0 <InitGPIO>:

void InitGPIO(void)
{
 80017e0:	b480      	push	{r7}
 80017e2:	af00      	add	r7, sp, #0
		RCC->APB2ENR |= RCC_APB2ENR_IOPCEN;						//enable clock for PORT C
 80017e4:	4b0a      	ldr	r3, [pc, #40]	; (8001810 <InitGPIO+0x30>)
 80017e6:	699b      	ldr	r3, [r3, #24]
 80017e8:	4a09      	ldr	r2, [pc, #36]	; (8001810 <InitGPIO+0x30>)
 80017ea:	f043 0310 	orr.w	r3, r3, #16
 80017ee:	6193      	str	r3, [r2, #24]

		GPIOC->CRH &= ~GPIO_CRH_CNF13;
 80017f0:	4b08      	ldr	r3, [pc, #32]	; (8001814 <InitGPIO+0x34>)
 80017f2:	685b      	ldr	r3, [r3, #4]
 80017f4:	4a07      	ldr	r2, [pc, #28]	; (8001814 <InitGPIO+0x34>)
 80017f6:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 80017fa:	6053      	str	r3, [r2, #4]
		GPIOC->CRH |=  GPIO_CRH_MODE13;
 80017fc:	4b05      	ldr	r3, [pc, #20]	; (8001814 <InitGPIO+0x34>)
 80017fe:	685b      	ldr	r3, [r3, #4]
 8001800:	4a04      	ldr	r2, [pc, #16]	; (8001814 <InitGPIO+0x34>)
 8001802:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 8001806:	6053      	str	r3, [r2, #4]
}
 8001808:	bf00      	nop
 800180a:	46bd      	mov	sp, r7
 800180c:	bc80      	pop	{r7}
 800180e:	4770      	bx	lr
 8001810:	40021000 	.word	0x40021000
 8001814:	40011000 	.word	0x40011000

08001818 <__NVIC_EnableIRQ>:
{
 8001818:	b480      	push	{r7}
 800181a:	b083      	sub	sp, #12
 800181c:	af00      	add	r7, sp, #0
 800181e:	4603      	mov	r3, r0
 8001820:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8001822:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001826:	2b00      	cmp	r3, #0
 8001828:	db0b      	blt.n	8001842 <__NVIC_EnableIRQ+0x2a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800182a:	79fb      	ldrb	r3, [r7, #7]
 800182c:	f003 021f 	and.w	r2, r3, #31
 8001830:	4906      	ldr	r1, [pc, #24]	; (800184c <__NVIC_EnableIRQ+0x34>)
 8001832:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001836:	095b      	lsrs	r3, r3, #5
 8001838:	2001      	movs	r0, #1
 800183a:	fa00 f202 	lsl.w	r2, r0, r2
 800183e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 8001842:	bf00      	nop
 8001844:	370c      	adds	r7, #12
 8001846:	46bd      	mov	sp, r7
 8001848:	bc80      	pop	{r7}
 800184a:	4770      	bx	lr
 800184c:	e000e100 	.word	0xe000e100

08001850 <InitUSART_1>:
/*******************************END Variables******************************/
/*========================================================================*/
/********************************Functions*********************************/

void InitUSART_1(void)
{
 8001850:	b580      	push	{r7, lr}
 8001852:	af00      	add	r7, sp, #0

		RCC->APB2ENR |= RCC_APB2ENR_USART1EN;					// Clock UART is enable
 8001854:	4b26      	ldr	r3, [pc, #152]	; (80018f0 <InitUSART_1+0xa0>)
 8001856:	699b      	ldr	r3, [r3, #24]
 8001858:	4a25      	ldr	r2, [pc, #148]	; (80018f0 <InitUSART_1+0xa0>)
 800185a:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800185e:	6193      	str	r3, [r2, #24]
		RCC->APB2ENR |= RCC_APB2ENR_IOPAEN;						// Clock port A is enable
 8001860:	4b23      	ldr	r3, [pc, #140]	; (80018f0 <InitUSART_1+0xa0>)
 8001862:	699b      	ldr	r3, [r3, #24]
 8001864:	4a22      	ldr	r2, [pc, #136]	; (80018f0 <InitUSART_1+0xa0>)
 8001866:	f043 0304 	orr.w	r3, r3, #4
 800186a:	6193      	str	r3, [r2, #24]
		RCC->APB2ENR |= RCC_APB2ENR_AFIOEN;						// Alternative funct clock is enable
 800186c:	4b20      	ldr	r3, [pc, #128]	; (80018f0 <InitUSART_1+0xa0>)
 800186e:	699b      	ldr	r3, [r3, #24]
 8001870:	4a1f      	ldr	r2, [pc, #124]	; (80018f0 <InitUSART_1+0xa0>)
 8001872:	f043 0301 	orr.w	r3, r3, #1
 8001876:	6193      	str	r3, [r2, #24]

		/*Setting PIN9 PORTA - TX*/
		GPIOA->CRH &= ~GPIO_CRH_CNF9;							// Clear bits
 8001878:	4b1e      	ldr	r3, [pc, #120]	; (80018f4 <InitUSART_1+0xa4>)
 800187a:	685b      	ldr	r3, [r3, #4]
 800187c:	4a1d      	ldr	r2, [pc, #116]	; (80018f4 <InitUSART_1+0xa4>)
 800187e:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 8001882:	6053      	str	r3, [r2, #4]
		GPIOA->CRH &= ~GPIO_CRH_MODE9;						// Clear bits
 8001884:	4b1b      	ldr	r3, [pc, #108]	; (80018f4 <InitUSART_1+0xa4>)
 8001886:	685b      	ldr	r3, [r3, #4]
 8001888:	4a1a      	ldr	r2, [pc, #104]	; (80018f4 <InitUSART_1+0xa4>)
 800188a:	f023 0330 	bic.w	r3, r3, #48	; 0x30
 800188e:	6053      	str	r3, [r2, #4]
		GPIOA->CRH |= GPIO_CRH_MODE9_0 							// Output mode, 10 MHz.
 8001890:	4b18      	ldr	r3, [pc, #96]	; (80018f4 <InitUSART_1+0xa4>)
 8001892:	685b      	ldr	r3, [r3, #4]
 8001894:	4a17      	ldr	r2, [pc, #92]	; (80018f4 <InitUSART_1+0xa4>)
 8001896:	f043 0390 	orr.w	r3, r3, #144	; 0x90
 800189a:	6053      	str	r3, [r2, #4]
				   |  GPIO_CRH_CNF9_1;							// Setting AF Push-Pull output (TX)

		/*Setting PIN10 PORTA - RX*/
		GPIOA->CRH &= ~GPIO_CRH_CNF10;							// Clear bits
 800189c:	4b15      	ldr	r3, [pc, #84]	; (80018f4 <InitUSART_1+0xa4>)
 800189e:	685b      	ldr	r3, [r3, #4]
 80018a0:	4a14      	ldr	r2, [pc, #80]	; (80018f4 <InitUSART_1+0xa4>)
 80018a2:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
 80018a6:	6053      	str	r3, [r2, #4]
		GPIOA->CRH &= ~GPIO_CRH_MODE10;						// Clear bits also use mode Input
 80018a8:	4b12      	ldr	r3, [pc, #72]	; (80018f4 <InitUSART_1+0xa4>)
 80018aa:	685b      	ldr	r3, [r3, #4]
 80018ac:	4a11      	ldr	r2, [pc, #68]	; (80018f4 <InitUSART_1+0xa4>)
 80018ae:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80018b2:	6053      	str	r3, [r2, #4]
		GPIOA->CRH |=  GPIO_CRH_CNF10_1;						// Setting Push-Up input (RX)
 80018b4:	4b0f      	ldr	r3, [pc, #60]	; (80018f4 <InitUSART_1+0xa4>)
 80018b6:	685b      	ldr	r3, [r3, #4]
 80018b8:	4a0e      	ldr	r2, [pc, #56]	; (80018f4 <InitUSART_1+0xa4>)
 80018ba:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 80018be:	6053      	str	r3, [r2, #4]
		GPIOA->BSRR |= GPIO_ODR_ODR10;
 80018c0:	4b0c      	ldr	r3, [pc, #48]	; (80018f4 <InitUSART_1+0xa4>)
 80018c2:	691b      	ldr	r3, [r3, #16]
 80018c4:	4a0b      	ldr	r2, [pc, #44]	; (80018f4 <InitUSART_1+0xa4>)
 80018c6:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80018ca:	6113      	str	r3, [r2, #16]

		USART1->BRR = 0x1D4D;									//Speed is 9600 baud
 80018cc:	4b0a      	ldr	r3, [pc, #40]	; (80018f8 <InitUSART_1+0xa8>)
 80018ce:	f641 524d 	movw	r2, #7501	; 0x1d4d
 80018d2:	609a      	str	r2, [r3, #8]

		USART1->CR1 |= USART_CR1_TE 							// Transmitter enable
 80018d4:	4b08      	ldr	r3, [pc, #32]	; (80018f8 <InitUSART_1+0xa8>)
 80018d6:	68db      	ldr	r3, [r3, #12]
 80018d8:	4a07      	ldr	r2, [pc, #28]	; (80018f8 <InitUSART_1+0xa8>)
 80018da:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80018de:	f043 032c 	orr.w	r3, r3, #44	; 0x2c
 80018e2:	60d3      	str	r3, [r2, #12]
					|  USART_CR1_RE 							// Receiver enable
					|  USART_CR1_UE 							// USART1 enable
					|  USART_CR1_RXNEIE;						// Interrupt for receive enable

		NVIC_EnableIRQ(USART1_IRQn);							// Enable a device specific interrupt in the NVIC interrupt controller.
 80018e4:	2025      	movs	r0, #37	; 0x25
 80018e6:	f7ff ff97 	bl	8001818 <__NVIC_EnableIRQ>

}
 80018ea:	bf00      	nop
 80018ec:	bd80      	pop	{r7, pc}
 80018ee:	bf00      	nop
 80018f0:	40021000 	.word	0x40021000
 80018f4:	40010800 	.word	0x40010800
 80018f8:	40013800 	.word	0x40013800

080018fc <TransmitUSART_1>:

void TransmitUSART_1(char chr)
{
 80018fc:	b480      	push	{r7}
 80018fe:	b083      	sub	sp, #12
 8001900:	af00      	add	r7, sp, #0
 8001902:	4603      	mov	r3, r0
 8001904:	71fb      	strb	r3, [r7, #7]

	while (!(USART1->SR & USART_SR_TC));						// Wait for transmission copleting
 8001906:	bf00      	nop
 8001908:	4b06      	ldr	r3, [pc, #24]	; (8001924 <TransmitUSART_1+0x28>)
 800190a:	681b      	ldr	r3, [r3, #0]
 800190c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8001910:	2b00      	cmp	r3, #0
 8001912:	d0f9      	beq.n	8001908 <TransmitUSART_1+0xc>
	USART1->DR = chr;											// Transfer data to DR (data registr)
 8001914:	4a03      	ldr	r2, [pc, #12]	; (8001924 <TransmitUSART_1+0x28>)
 8001916:	79fb      	ldrb	r3, [r7, #7]
 8001918:	6053      	str	r3, [r2, #4]

}
 800191a:	bf00      	nop
 800191c:	370c      	adds	r7, #12
 800191e:	46bd      	mov	sp, r7
 8001920:	bc80      	pop	{r7}
 8001922:	4770      	bx	lr
 8001924:	40013800 	.word	0x40013800

08001928 <SendStringUSART_1>:

void SendStringUSART_1(char* str)
{
 8001928:	b580      	push	{r7, lr}
 800192a:	b084      	sub	sp, #16
 800192c:	af00      	add	r7, sp, #0
 800192e:	6078      	str	r0, [r7, #4]
	uint8_t i = 0;
 8001930:	2300      	movs	r3, #0
 8001932:	73fb      	strb	r3, [r7, #15]

	while(str[i])
 8001934:	e009      	b.n	800194a <SendStringUSART_1+0x22>
		TransmitUSART_1(str[i++]);
 8001936:	7bfb      	ldrb	r3, [r7, #15]
 8001938:	1c5a      	adds	r2, r3, #1
 800193a:	73fa      	strb	r2, [r7, #15]
 800193c:	461a      	mov	r2, r3
 800193e:	687b      	ldr	r3, [r7, #4]
 8001940:	4413      	add	r3, r2
 8001942:	781b      	ldrb	r3, [r3, #0]
 8001944:	4618      	mov	r0, r3
 8001946:	f7ff ffd9 	bl	80018fc <TransmitUSART_1>
	while(str[i])
 800194a:	7bfb      	ldrb	r3, [r7, #15]
 800194c:	687a      	ldr	r2, [r7, #4]
 800194e:	4413      	add	r3, r2
 8001950:	781b      	ldrb	r3, [r3, #0]
 8001952:	2b00      	cmp	r3, #0
 8001954:	d1ef      	bne.n	8001936 <SendStringUSART_1+0xe>
}
 8001956:	bf00      	nop
 8001958:	3710      	adds	r7, #16
 800195a:	46bd      	mov	sp, r7
 800195c:	bd80      	pop	{r7, pc}
	...

08001960 <Reset_Handler>:
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:

/* Copy the data segment initializers from flash to SRAM */
  movs r1, #0
 8001960:	2100      	movs	r1, #0
  b LoopCopyDataInit
 8001962:	e003      	b.n	800196c <LoopCopyDataInit>

08001964 <CopyDataInit>:

CopyDataInit:
  ldr r3, =_sidata
 8001964:	4b0b      	ldr	r3, [pc, #44]	; (8001994 <LoopFillZerobss+0x14>)
  ldr r3, [r3, r1]
 8001966:	585b      	ldr	r3, [r3, r1]
  str r3, [r0, r1]
 8001968:	5043      	str	r3, [r0, r1]
  adds r1, r1, #4
 800196a:	3104      	adds	r1, #4

0800196c <LoopCopyDataInit>:

LoopCopyDataInit:
  ldr r0, =_sdata
 800196c:	480a      	ldr	r0, [pc, #40]	; (8001998 <LoopFillZerobss+0x18>)
  ldr r3, =_edata
 800196e:	4b0b      	ldr	r3, [pc, #44]	; (800199c <LoopFillZerobss+0x1c>)
  adds r2, r0, r1
 8001970:	1842      	adds	r2, r0, r1
  cmp r2, r3
 8001972:	429a      	cmp	r2, r3
  bcc CopyDataInit
 8001974:	d3f6      	bcc.n	8001964 <CopyDataInit>
  ldr r2, =_sbss
 8001976:	4a0a      	ldr	r2, [pc, #40]	; (80019a0 <LoopFillZerobss+0x20>)
  b LoopFillZerobss
 8001978:	e002      	b.n	8001980 <LoopFillZerobss>

0800197a <FillZerobss>:
/* Zero fill the bss segment. */
FillZerobss:
  movs r3, #0
 800197a:	2300      	movs	r3, #0
  str r3, [r2], #4
 800197c:	f842 3b04 	str.w	r3, [r2], #4

08001980 <LoopFillZerobss>:

LoopFillZerobss:
  ldr r3, = _ebss
 8001980:	4b08      	ldr	r3, [pc, #32]	; (80019a4 <LoopFillZerobss+0x24>)
  cmp r2, r3
 8001982:	429a      	cmp	r2, r3
  bcc FillZerobss
 8001984:	d3f9      	bcc.n	800197a <FillZerobss>

/* Call the clock system intitialization function.*/
    bl  SystemInit
 8001986:	f7ff fb4d 	bl	8001024 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 800198a:	f000 f80f 	bl	80019ac <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800198e:	f7ff fc67 	bl	8001260 <main>
  bx lr
 8001992:	4770      	bx	lr
  ldr r3, =_sidata
 8001994:	08003d50 	.word	0x08003d50
  ldr r0, =_sdata
 8001998:	20000000 	.word	0x20000000
  ldr r3, =_edata
 800199c:	200001d8 	.word	0x200001d8
  ldr r2, =_sbss
 80019a0:	200001d8 	.word	0x200001d8
  ldr r3, = _ebss
 80019a4:	20000230 	.word	0x20000230

080019a8 <ADC1_2_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80019a8:	e7fe      	b.n	80019a8 <ADC1_2_IRQHandler>
	...

080019ac <__libc_init_array>:
 80019ac:	b570      	push	{r4, r5, r6, lr}
 80019ae:	2500      	movs	r5, #0
 80019b0:	4e0c      	ldr	r6, [pc, #48]	; (80019e4 <__libc_init_array+0x38>)
 80019b2:	4c0d      	ldr	r4, [pc, #52]	; (80019e8 <__libc_init_array+0x3c>)
 80019b4:	1ba4      	subs	r4, r4, r6
 80019b6:	10a4      	asrs	r4, r4, #2
 80019b8:	42a5      	cmp	r5, r4
 80019ba:	d109      	bne.n	80019d0 <__libc_init_array+0x24>
 80019bc:	f002 f86c 	bl	8003a98 <_init>
 80019c0:	2500      	movs	r5, #0
 80019c2:	4e0a      	ldr	r6, [pc, #40]	; (80019ec <__libc_init_array+0x40>)
 80019c4:	4c0a      	ldr	r4, [pc, #40]	; (80019f0 <__libc_init_array+0x44>)
 80019c6:	1ba4      	subs	r4, r4, r6
 80019c8:	10a4      	asrs	r4, r4, #2
 80019ca:	42a5      	cmp	r5, r4
 80019cc:	d105      	bne.n	80019da <__libc_init_array+0x2e>
 80019ce:	bd70      	pop	{r4, r5, r6, pc}
 80019d0:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80019d4:	4798      	blx	r3
 80019d6:	3501      	adds	r5, #1
 80019d8:	e7ee      	b.n	80019b8 <__libc_init_array+0xc>
 80019da:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80019de:	4798      	blx	r3
 80019e0:	3501      	adds	r5, #1
 80019e2:	e7f2      	b.n	80019ca <__libc_init_array+0x1e>
 80019e4:	08003d48 	.word	0x08003d48
 80019e8:	08003d48 	.word	0x08003d48
 80019ec:	08003d48 	.word	0x08003d48
 80019f0:	08003d4c 	.word	0x08003d4c

080019f4 <memset>:
 80019f4:	4603      	mov	r3, r0
 80019f6:	4402      	add	r2, r0
 80019f8:	4293      	cmp	r3, r2
 80019fa:	d100      	bne.n	80019fe <memset+0xa>
 80019fc:	4770      	bx	lr
 80019fe:	f803 1b01 	strb.w	r1, [r3], #1
 8001a02:	e7f9      	b.n	80019f8 <memset+0x4>

08001a04 <__cvt>:
 8001a04:	2b00      	cmp	r3, #0
 8001a06:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001a0a:	461e      	mov	r6, r3
 8001a0c:	bfbb      	ittet	lt
 8001a0e:	f103 4300 	addlt.w	r3, r3, #2147483648	; 0x80000000
 8001a12:	461e      	movlt	r6, r3
 8001a14:	2300      	movge	r3, #0
 8001a16:	232d      	movlt	r3, #45	; 0x2d
 8001a18:	b088      	sub	sp, #32
 8001a1a:	9f14      	ldr	r7, [sp, #80]	; 0x50
 8001a1c:	e9dd 1a12 	ldrd	r1, sl, [sp, #72]	; 0x48
 8001a20:	f027 0720 	bic.w	r7, r7, #32
 8001a24:	2f46      	cmp	r7, #70	; 0x46
 8001a26:	4614      	mov	r4, r2
 8001a28:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8001a2a:	700b      	strb	r3, [r1, #0]
 8001a2c:	d004      	beq.n	8001a38 <__cvt+0x34>
 8001a2e:	2f45      	cmp	r7, #69	; 0x45
 8001a30:	d100      	bne.n	8001a34 <__cvt+0x30>
 8001a32:	3501      	adds	r5, #1
 8001a34:	2302      	movs	r3, #2
 8001a36:	e000      	b.n	8001a3a <__cvt+0x36>
 8001a38:	2303      	movs	r3, #3
 8001a3a:	aa07      	add	r2, sp, #28
 8001a3c:	9204      	str	r2, [sp, #16]
 8001a3e:	aa06      	add	r2, sp, #24
 8001a40:	e9cd a202 	strd	sl, r2, [sp, #8]
 8001a44:	e9cd 3500 	strd	r3, r5, [sp]
 8001a48:	4622      	mov	r2, r4
 8001a4a:	4633      	mov	r3, r6
 8001a4c:	f000 fcd8 	bl	8002400 <_dtoa_r>
 8001a50:	2f47      	cmp	r7, #71	; 0x47
 8001a52:	4680      	mov	r8, r0
 8001a54:	d102      	bne.n	8001a5c <__cvt+0x58>
 8001a56:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8001a58:	07db      	lsls	r3, r3, #31
 8001a5a:	d526      	bpl.n	8001aaa <__cvt+0xa6>
 8001a5c:	2f46      	cmp	r7, #70	; 0x46
 8001a5e:	eb08 0905 	add.w	r9, r8, r5
 8001a62:	d111      	bne.n	8001a88 <__cvt+0x84>
 8001a64:	f898 3000 	ldrb.w	r3, [r8]
 8001a68:	2b30      	cmp	r3, #48	; 0x30
 8001a6a:	d10a      	bne.n	8001a82 <__cvt+0x7e>
 8001a6c:	2200      	movs	r2, #0
 8001a6e:	2300      	movs	r3, #0
 8001a70:	4620      	mov	r0, r4
 8001a72:	4631      	mov	r1, r6
 8001a74:	f7fe ff98 	bl	80009a8 <__aeabi_dcmpeq>
 8001a78:	b918      	cbnz	r0, 8001a82 <__cvt+0x7e>
 8001a7a:	f1c5 0501 	rsb	r5, r5, #1
 8001a7e:	f8ca 5000 	str.w	r5, [sl]
 8001a82:	f8da 3000 	ldr.w	r3, [sl]
 8001a86:	4499      	add	r9, r3
 8001a88:	2200      	movs	r2, #0
 8001a8a:	2300      	movs	r3, #0
 8001a8c:	4620      	mov	r0, r4
 8001a8e:	4631      	mov	r1, r6
 8001a90:	f7fe ff8a 	bl	80009a8 <__aeabi_dcmpeq>
 8001a94:	b938      	cbnz	r0, 8001aa6 <__cvt+0xa2>
 8001a96:	2230      	movs	r2, #48	; 0x30
 8001a98:	9b07      	ldr	r3, [sp, #28]
 8001a9a:	454b      	cmp	r3, r9
 8001a9c:	d205      	bcs.n	8001aaa <__cvt+0xa6>
 8001a9e:	1c59      	adds	r1, r3, #1
 8001aa0:	9107      	str	r1, [sp, #28]
 8001aa2:	701a      	strb	r2, [r3, #0]
 8001aa4:	e7f8      	b.n	8001a98 <__cvt+0x94>
 8001aa6:	f8cd 901c 	str.w	r9, [sp, #28]
 8001aaa:	4640      	mov	r0, r8
 8001aac:	9b07      	ldr	r3, [sp, #28]
 8001aae:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8001ab0:	eba3 0308 	sub.w	r3, r3, r8
 8001ab4:	6013      	str	r3, [r2, #0]
 8001ab6:	b008      	add	sp, #32
 8001ab8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08001abc <__exponent>:
 8001abc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001abe:	2900      	cmp	r1, #0
 8001ac0:	bfb4      	ite	lt
 8001ac2:	232d      	movlt	r3, #45	; 0x2d
 8001ac4:	232b      	movge	r3, #43	; 0x2b
 8001ac6:	4604      	mov	r4, r0
 8001ac8:	bfb8      	it	lt
 8001aca:	4249      	neglt	r1, r1
 8001acc:	2909      	cmp	r1, #9
 8001ace:	f804 2b02 	strb.w	r2, [r4], #2
 8001ad2:	7043      	strb	r3, [r0, #1]
 8001ad4:	dd21      	ble.n	8001b1a <__exponent+0x5e>
 8001ad6:	f10d 0307 	add.w	r3, sp, #7
 8001ada:	461f      	mov	r7, r3
 8001adc:	260a      	movs	r6, #10
 8001ade:	fb91 f5f6 	sdiv	r5, r1, r6
 8001ae2:	fb06 1115 	mls	r1, r6, r5, r1
 8001ae6:	2d09      	cmp	r5, #9
 8001ae8:	f101 0130 	add.w	r1, r1, #48	; 0x30
 8001aec:	f803 1c01 	strb.w	r1, [r3, #-1]
 8001af0:	f103 32ff 	add.w	r2, r3, #4294967295
 8001af4:	4629      	mov	r1, r5
 8001af6:	dc09      	bgt.n	8001b0c <__exponent+0x50>
 8001af8:	3130      	adds	r1, #48	; 0x30
 8001afa:	3b02      	subs	r3, #2
 8001afc:	f802 1c01 	strb.w	r1, [r2, #-1]
 8001b00:	42bb      	cmp	r3, r7
 8001b02:	4622      	mov	r2, r4
 8001b04:	d304      	bcc.n	8001b10 <__exponent+0x54>
 8001b06:	1a10      	subs	r0, r2, r0
 8001b08:	b003      	add	sp, #12
 8001b0a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001b0c:	4613      	mov	r3, r2
 8001b0e:	e7e6      	b.n	8001ade <__exponent+0x22>
 8001b10:	f813 2b01 	ldrb.w	r2, [r3], #1
 8001b14:	f804 2b01 	strb.w	r2, [r4], #1
 8001b18:	e7f2      	b.n	8001b00 <__exponent+0x44>
 8001b1a:	2330      	movs	r3, #48	; 0x30
 8001b1c:	4419      	add	r1, r3
 8001b1e:	7083      	strb	r3, [r0, #2]
 8001b20:	1d02      	adds	r2, r0, #4
 8001b22:	70c1      	strb	r1, [r0, #3]
 8001b24:	e7ef      	b.n	8001b06 <__exponent+0x4a>
	...

08001b28 <_printf_float>:
 8001b28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001b2c:	b091      	sub	sp, #68	; 0x44
 8001b2e:	460c      	mov	r4, r1
 8001b30:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 8001b32:	4693      	mov	fp, r2
 8001b34:	461e      	mov	r6, r3
 8001b36:	4605      	mov	r5, r0
 8001b38:	f001 fa16 	bl	8002f68 <_localeconv_r>
 8001b3c:	6803      	ldr	r3, [r0, #0]
 8001b3e:	4618      	mov	r0, r3
 8001b40:	9309      	str	r3, [sp, #36]	; 0x24
 8001b42:	f7fe fb05 	bl	8000150 <strlen>
 8001b46:	2300      	movs	r3, #0
 8001b48:	930e      	str	r3, [sp, #56]	; 0x38
 8001b4a:	683b      	ldr	r3, [r7, #0]
 8001b4c:	900a      	str	r0, [sp, #40]	; 0x28
 8001b4e:	3307      	adds	r3, #7
 8001b50:	f023 0307 	bic.w	r3, r3, #7
 8001b54:	f103 0208 	add.w	r2, r3, #8
 8001b58:	f894 8018 	ldrb.w	r8, [r4, #24]
 8001b5c:	f8d4 a000 	ldr.w	sl, [r4]
 8001b60:	603a      	str	r2, [r7, #0]
 8001b62:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001b66:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 8001b6a:	e9d4 7912 	ldrd	r7, r9, [r4, #72]	; 0x48
 8001b6e:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8001b72:	930b      	str	r3, [sp, #44]	; 0x2c
 8001b74:	f04f 32ff 	mov.w	r2, #4294967295
 8001b78:	4ba6      	ldr	r3, [pc, #664]	; (8001e14 <_printf_float+0x2ec>)
 8001b7a:	4638      	mov	r0, r7
 8001b7c:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8001b7e:	f7fe ff45 	bl	8000a0c <__aeabi_dcmpun>
 8001b82:	bb68      	cbnz	r0, 8001be0 <_printf_float+0xb8>
 8001b84:	f04f 32ff 	mov.w	r2, #4294967295
 8001b88:	4ba2      	ldr	r3, [pc, #648]	; (8001e14 <_printf_float+0x2ec>)
 8001b8a:	4638      	mov	r0, r7
 8001b8c:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8001b8e:	f7fe ff1f 	bl	80009d0 <__aeabi_dcmple>
 8001b92:	bb28      	cbnz	r0, 8001be0 <_printf_float+0xb8>
 8001b94:	2200      	movs	r2, #0
 8001b96:	2300      	movs	r3, #0
 8001b98:	4638      	mov	r0, r7
 8001b9a:	4649      	mov	r1, r9
 8001b9c:	f7fe ff0e 	bl	80009bc <__aeabi_dcmplt>
 8001ba0:	b110      	cbz	r0, 8001ba8 <_printf_float+0x80>
 8001ba2:	232d      	movs	r3, #45	; 0x2d
 8001ba4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001ba8:	4f9b      	ldr	r7, [pc, #620]	; (8001e18 <_printf_float+0x2f0>)
 8001baa:	4b9c      	ldr	r3, [pc, #624]	; (8001e1c <_printf_float+0x2f4>)
 8001bac:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 8001bb0:	bf98      	it	ls
 8001bb2:	461f      	movls	r7, r3
 8001bb4:	2303      	movs	r3, #3
 8001bb6:	f04f 0900 	mov.w	r9, #0
 8001bba:	6123      	str	r3, [r4, #16]
 8001bbc:	f02a 0304 	bic.w	r3, sl, #4
 8001bc0:	6023      	str	r3, [r4, #0]
 8001bc2:	9600      	str	r6, [sp, #0]
 8001bc4:	465b      	mov	r3, fp
 8001bc6:	aa0f      	add	r2, sp, #60	; 0x3c
 8001bc8:	4621      	mov	r1, r4
 8001bca:	4628      	mov	r0, r5
 8001bcc:	f000 f9e2 	bl	8001f94 <_printf_common>
 8001bd0:	3001      	adds	r0, #1
 8001bd2:	f040 8090 	bne.w	8001cf6 <_printf_float+0x1ce>
 8001bd6:	f04f 30ff 	mov.w	r0, #4294967295
 8001bda:	b011      	add	sp, #68	; 0x44
 8001bdc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001be0:	463a      	mov	r2, r7
 8001be2:	464b      	mov	r3, r9
 8001be4:	4638      	mov	r0, r7
 8001be6:	4649      	mov	r1, r9
 8001be8:	f7fe ff10 	bl	8000a0c <__aeabi_dcmpun>
 8001bec:	b110      	cbz	r0, 8001bf4 <_printf_float+0xcc>
 8001bee:	4f8c      	ldr	r7, [pc, #560]	; (8001e20 <_printf_float+0x2f8>)
 8001bf0:	4b8c      	ldr	r3, [pc, #560]	; (8001e24 <_printf_float+0x2fc>)
 8001bf2:	e7db      	b.n	8001bac <_printf_float+0x84>
 8001bf4:	6863      	ldr	r3, [r4, #4]
 8001bf6:	f44a 6280 	orr.w	r2, sl, #1024	; 0x400
 8001bfa:	1c59      	adds	r1, r3, #1
 8001bfc:	a80d      	add	r0, sp, #52	; 0x34
 8001bfe:	a90e      	add	r1, sp, #56	; 0x38
 8001c00:	d140      	bne.n	8001c84 <_printf_float+0x15c>
 8001c02:	2306      	movs	r3, #6
 8001c04:	6063      	str	r3, [r4, #4]
 8001c06:	f04f 0c00 	mov.w	ip, #0
 8001c0a:	f10d 0333 	add.w	r3, sp, #51	; 0x33
 8001c0e:	e9cd 2301 	strd	r2, r3, [sp, #4]
 8001c12:	6863      	ldr	r3, [r4, #4]
 8001c14:	6022      	str	r2, [r4, #0]
 8001c16:	e9cd 0803 	strd	r0, r8, [sp, #12]
 8001c1a:	9300      	str	r3, [sp, #0]
 8001c1c:	463a      	mov	r2, r7
 8001c1e:	464b      	mov	r3, r9
 8001c20:	e9cd 1c05 	strd	r1, ip, [sp, #20]
 8001c24:	4628      	mov	r0, r5
 8001c26:	f7ff feed 	bl	8001a04 <__cvt>
 8001c2a:	f008 03df 	and.w	r3, r8, #223	; 0xdf
 8001c2e:	2b47      	cmp	r3, #71	; 0x47
 8001c30:	4607      	mov	r7, r0
 8001c32:	d109      	bne.n	8001c48 <_printf_float+0x120>
 8001c34:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8001c36:	1cd8      	adds	r0, r3, #3
 8001c38:	db02      	blt.n	8001c40 <_printf_float+0x118>
 8001c3a:	6862      	ldr	r2, [r4, #4]
 8001c3c:	4293      	cmp	r3, r2
 8001c3e:	dd47      	ble.n	8001cd0 <_printf_float+0x1a8>
 8001c40:	f1a8 0802 	sub.w	r8, r8, #2
 8001c44:	fa5f f888 	uxtb.w	r8, r8
 8001c48:	f1b8 0f65 	cmp.w	r8, #101	; 0x65
 8001c4c:	990d      	ldr	r1, [sp, #52]	; 0x34
 8001c4e:	d824      	bhi.n	8001c9a <_printf_float+0x172>
 8001c50:	3901      	subs	r1, #1
 8001c52:	4642      	mov	r2, r8
 8001c54:	f104 0050 	add.w	r0, r4, #80	; 0x50
 8001c58:	910d      	str	r1, [sp, #52]	; 0x34
 8001c5a:	f7ff ff2f 	bl	8001abc <__exponent>
 8001c5e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8001c60:	4681      	mov	r9, r0
 8001c62:	1813      	adds	r3, r2, r0
 8001c64:	2a01      	cmp	r2, #1
 8001c66:	6123      	str	r3, [r4, #16]
 8001c68:	dc02      	bgt.n	8001c70 <_printf_float+0x148>
 8001c6a:	6822      	ldr	r2, [r4, #0]
 8001c6c:	07d1      	lsls	r1, r2, #31
 8001c6e:	d501      	bpl.n	8001c74 <_printf_float+0x14c>
 8001c70:	3301      	adds	r3, #1
 8001c72:	6123      	str	r3, [r4, #16]
 8001c74:	f89d 3033 	ldrb.w	r3, [sp, #51]	; 0x33
 8001c78:	2b00      	cmp	r3, #0
 8001c7a:	d0a2      	beq.n	8001bc2 <_printf_float+0x9a>
 8001c7c:	232d      	movs	r3, #45	; 0x2d
 8001c7e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001c82:	e79e      	b.n	8001bc2 <_printf_float+0x9a>
 8001c84:	f1b8 0f67 	cmp.w	r8, #103	; 0x67
 8001c88:	f000 816e 	beq.w	8001f68 <_printf_float+0x440>
 8001c8c:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 8001c90:	d1b9      	bne.n	8001c06 <_printf_float+0xde>
 8001c92:	2b00      	cmp	r3, #0
 8001c94:	d1b7      	bne.n	8001c06 <_printf_float+0xde>
 8001c96:	2301      	movs	r3, #1
 8001c98:	e7b4      	b.n	8001c04 <_printf_float+0xdc>
 8001c9a:	f1b8 0f66 	cmp.w	r8, #102	; 0x66
 8001c9e:	d119      	bne.n	8001cd4 <_printf_float+0x1ac>
 8001ca0:	2900      	cmp	r1, #0
 8001ca2:	6863      	ldr	r3, [r4, #4]
 8001ca4:	dd0c      	ble.n	8001cc0 <_printf_float+0x198>
 8001ca6:	6121      	str	r1, [r4, #16]
 8001ca8:	b913      	cbnz	r3, 8001cb0 <_printf_float+0x188>
 8001caa:	6822      	ldr	r2, [r4, #0]
 8001cac:	07d2      	lsls	r2, r2, #31
 8001cae:	d502      	bpl.n	8001cb6 <_printf_float+0x18e>
 8001cb0:	3301      	adds	r3, #1
 8001cb2:	440b      	add	r3, r1
 8001cb4:	6123      	str	r3, [r4, #16]
 8001cb6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8001cb8:	f04f 0900 	mov.w	r9, #0
 8001cbc:	65a3      	str	r3, [r4, #88]	; 0x58
 8001cbe:	e7d9      	b.n	8001c74 <_printf_float+0x14c>
 8001cc0:	b913      	cbnz	r3, 8001cc8 <_printf_float+0x1a0>
 8001cc2:	6822      	ldr	r2, [r4, #0]
 8001cc4:	07d0      	lsls	r0, r2, #31
 8001cc6:	d501      	bpl.n	8001ccc <_printf_float+0x1a4>
 8001cc8:	3302      	adds	r3, #2
 8001cca:	e7f3      	b.n	8001cb4 <_printf_float+0x18c>
 8001ccc:	2301      	movs	r3, #1
 8001cce:	e7f1      	b.n	8001cb4 <_printf_float+0x18c>
 8001cd0:	f04f 0867 	mov.w	r8, #103	; 0x67
 8001cd4:	e9dd 320d 	ldrd	r3, r2, [sp, #52]	; 0x34
 8001cd8:	4293      	cmp	r3, r2
 8001cda:	db05      	blt.n	8001ce8 <_printf_float+0x1c0>
 8001cdc:	6822      	ldr	r2, [r4, #0]
 8001cde:	6123      	str	r3, [r4, #16]
 8001ce0:	07d1      	lsls	r1, r2, #31
 8001ce2:	d5e8      	bpl.n	8001cb6 <_printf_float+0x18e>
 8001ce4:	3301      	adds	r3, #1
 8001ce6:	e7e5      	b.n	8001cb4 <_printf_float+0x18c>
 8001ce8:	2b00      	cmp	r3, #0
 8001cea:	bfcc      	ite	gt
 8001cec:	2301      	movgt	r3, #1
 8001cee:	f1c3 0302 	rsble	r3, r3, #2
 8001cf2:	4413      	add	r3, r2
 8001cf4:	e7de      	b.n	8001cb4 <_printf_float+0x18c>
 8001cf6:	6823      	ldr	r3, [r4, #0]
 8001cf8:	055a      	lsls	r2, r3, #21
 8001cfa:	d407      	bmi.n	8001d0c <_printf_float+0x1e4>
 8001cfc:	6923      	ldr	r3, [r4, #16]
 8001cfe:	463a      	mov	r2, r7
 8001d00:	4659      	mov	r1, fp
 8001d02:	4628      	mov	r0, r5
 8001d04:	47b0      	blx	r6
 8001d06:	3001      	adds	r0, #1
 8001d08:	d129      	bne.n	8001d5e <_printf_float+0x236>
 8001d0a:	e764      	b.n	8001bd6 <_printf_float+0xae>
 8001d0c:	f1b8 0f65 	cmp.w	r8, #101	; 0x65
 8001d10:	f240 80d7 	bls.w	8001ec2 <_printf_float+0x39a>
 8001d14:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8001d18:	2200      	movs	r2, #0
 8001d1a:	2300      	movs	r3, #0
 8001d1c:	f7fe fe44 	bl	80009a8 <__aeabi_dcmpeq>
 8001d20:	b388      	cbz	r0, 8001d86 <_printf_float+0x25e>
 8001d22:	2301      	movs	r3, #1
 8001d24:	4a40      	ldr	r2, [pc, #256]	; (8001e28 <_printf_float+0x300>)
 8001d26:	4659      	mov	r1, fp
 8001d28:	4628      	mov	r0, r5
 8001d2a:	47b0      	blx	r6
 8001d2c:	3001      	adds	r0, #1
 8001d2e:	f43f af52 	beq.w	8001bd6 <_printf_float+0xae>
 8001d32:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 8001d36:	429a      	cmp	r2, r3
 8001d38:	db02      	blt.n	8001d40 <_printf_float+0x218>
 8001d3a:	6823      	ldr	r3, [r4, #0]
 8001d3c:	07d8      	lsls	r0, r3, #31
 8001d3e:	d50e      	bpl.n	8001d5e <_printf_float+0x236>
 8001d40:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8001d44:	4659      	mov	r1, fp
 8001d46:	4628      	mov	r0, r5
 8001d48:	47b0      	blx	r6
 8001d4a:	3001      	adds	r0, #1
 8001d4c:	f43f af43 	beq.w	8001bd6 <_printf_float+0xae>
 8001d50:	2700      	movs	r7, #0
 8001d52:	f104 081a 	add.w	r8, r4, #26
 8001d56:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8001d58:	3b01      	subs	r3, #1
 8001d5a:	42bb      	cmp	r3, r7
 8001d5c:	dc09      	bgt.n	8001d72 <_printf_float+0x24a>
 8001d5e:	6823      	ldr	r3, [r4, #0]
 8001d60:	079f      	lsls	r7, r3, #30
 8001d62:	f100 80fd 	bmi.w	8001f60 <_printf_float+0x438>
 8001d66:	68e0      	ldr	r0, [r4, #12]
 8001d68:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8001d6a:	4298      	cmp	r0, r3
 8001d6c:	bfb8      	it	lt
 8001d6e:	4618      	movlt	r0, r3
 8001d70:	e733      	b.n	8001bda <_printf_float+0xb2>
 8001d72:	2301      	movs	r3, #1
 8001d74:	4642      	mov	r2, r8
 8001d76:	4659      	mov	r1, fp
 8001d78:	4628      	mov	r0, r5
 8001d7a:	47b0      	blx	r6
 8001d7c:	3001      	adds	r0, #1
 8001d7e:	f43f af2a 	beq.w	8001bd6 <_printf_float+0xae>
 8001d82:	3701      	adds	r7, #1
 8001d84:	e7e7      	b.n	8001d56 <_printf_float+0x22e>
 8001d86:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8001d88:	2b00      	cmp	r3, #0
 8001d8a:	dc2b      	bgt.n	8001de4 <_printf_float+0x2bc>
 8001d8c:	2301      	movs	r3, #1
 8001d8e:	4a26      	ldr	r2, [pc, #152]	; (8001e28 <_printf_float+0x300>)
 8001d90:	4659      	mov	r1, fp
 8001d92:	4628      	mov	r0, r5
 8001d94:	47b0      	blx	r6
 8001d96:	3001      	adds	r0, #1
 8001d98:	f43f af1d 	beq.w	8001bd6 <_printf_float+0xae>
 8001d9c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8001d9e:	b923      	cbnz	r3, 8001daa <_printf_float+0x282>
 8001da0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8001da2:	b913      	cbnz	r3, 8001daa <_printf_float+0x282>
 8001da4:	6823      	ldr	r3, [r4, #0]
 8001da6:	07d9      	lsls	r1, r3, #31
 8001da8:	d5d9      	bpl.n	8001d5e <_printf_float+0x236>
 8001daa:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8001dae:	4659      	mov	r1, fp
 8001db0:	4628      	mov	r0, r5
 8001db2:	47b0      	blx	r6
 8001db4:	3001      	adds	r0, #1
 8001db6:	f43f af0e 	beq.w	8001bd6 <_printf_float+0xae>
 8001dba:	f04f 0800 	mov.w	r8, #0
 8001dbe:	f104 091a 	add.w	r9, r4, #26
 8001dc2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8001dc4:	425b      	negs	r3, r3
 8001dc6:	4543      	cmp	r3, r8
 8001dc8:	dc01      	bgt.n	8001dce <_printf_float+0x2a6>
 8001dca:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8001dcc:	e797      	b.n	8001cfe <_printf_float+0x1d6>
 8001dce:	2301      	movs	r3, #1
 8001dd0:	464a      	mov	r2, r9
 8001dd2:	4659      	mov	r1, fp
 8001dd4:	4628      	mov	r0, r5
 8001dd6:	47b0      	blx	r6
 8001dd8:	3001      	adds	r0, #1
 8001dda:	f43f aefc 	beq.w	8001bd6 <_printf_float+0xae>
 8001dde:	f108 0801 	add.w	r8, r8, #1
 8001de2:	e7ee      	b.n	8001dc2 <_printf_float+0x29a>
 8001de4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8001de6:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8001de8:	429a      	cmp	r2, r3
 8001dea:	bfa8      	it	ge
 8001dec:	461a      	movge	r2, r3
 8001dee:	2a00      	cmp	r2, #0
 8001df0:	4690      	mov	r8, r2
 8001df2:	dd07      	ble.n	8001e04 <_printf_float+0x2dc>
 8001df4:	4613      	mov	r3, r2
 8001df6:	4659      	mov	r1, fp
 8001df8:	463a      	mov	r2, r7
 8001dfa:	4628      	mov	r0, r5
 8001dfc:	47b0      	blx	r6
 8001dfe:	3001      	adds	r0, #1
 8001e00:	f43f aee9 	beq.w	8001bd6 <_printf_float+0xae>
 8001e04:	f104 031a 	add.w	r3, r4, #26
 8001e08:	f04f 0a00 	mov.w	sl, #0
 8001e0c:	ea28 78e8 	bic.w	r8, r8, r8, asr #31
 8001e10:	930b      	str	r3, [sp, #44]	; 0x2c
 8001e12:	e015      	b.n	8001e40 <_printf_float+0x318>
 8001e14:	7fefffff 	.word	0x7fefffff
 8001e18:	08003af2 	.word	0x08003af2
 8001e1c:	08003aee 	.word	0x08003aee
 8001e20:	08003afa 	.word	0x08003afa
 8001e24:	08003af6 	.word	0x08003af6
 8001e28:	08003afe 	.word	0x08003afe
 8001e2c:	2301      	movs	r3, #1
 8001e2e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8001e30:	4659      	mov	r1, fp
 8001e32:	4628      	mov	r0, r5
 8001e34:	47b0      	blx	r6
 8001e36:	3001      	adds	r0, #1
 8001e38:	f43f aecd 	beq.w	8001bd6 <_printf_float+0xae>
 8001e3c:	f10a 0a01 	add.w	sl, sl, #1
 8001e40:	f8d4 9058 	ldr.w	r9, [r4, #88]	; 0x58
 8001e44:	eba9 0308 	sub.w	r3, r9, r8
 8001e48:	4553      	cmp	r3, sl
 8001e4a:	dcef      	bgt.n	8001e2c <_printf_float+0x304>
 8001e4c:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 8001e50:	429a      	cmp	r2, r3
 8001e52:	444f      	add	r7, r9
 8001e54:	db14      	blt.n	8001e80 <_printf_float+0x358>
 8001e56:	6823      	ldr	r3, [r4, #0]
 8001e58:	07da      	lsls	r2, r3, #31
 8001e5a:	d411      	bmi.n	8001e80 <_printf_float+0x358>
 8001e5c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8001e5e:	990d      	ldr	r1, [sp, #52]	; 0x34
 8001e60:	eba3 0209 	sub.w	r2, r3, r9
 8001e64:	eba3 0901 	sub.w	r9, r3, r1
 8001e68:	4591      	cmp	r9, r2
 8001e6a:	bfa8      	it	ge
 8001e6c:	4691      	movge	r9, r2
 8001e6e:	f1b9 0f00 	cmp.w	r9, #0
 8001e72:	dc0d      	bgt.n	8001e90 <_printf_float+0x368>
 8001e74:	2700      	movs	r7, #0
 8001e76:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8001e7a:	f104 081a 	add.w	r8, r4, #26
 8001e7e:	e018      	b.n	8001eb2 <_printf_float+0x38a>
 8001e80:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8001e84:	4659      	mov	r1, fp
 8001e86:	4628      	mov	r0, r5
 8001e88:	47b0      	blx	r6
 8001e8a:	3001      	adds	r0, #1
 8001e8c:	d1e6      	bne.n	8001e5c <_printf_float+0x334>
 8001e8e:	e6a2      	b.n	8001bd6 <_printf_float+0xae>
 8001e90:	464b      	mov	r3, r9
 8001e92:	463a      	mov	r2, r7
 8001e94:	4659      	mov	r1, fp
 8001e96:	4628      	mov	r0, r5
 8001e98:	47b0      	blx	r6
 8001e9a:	3001      	adds	r0, #1
 8001e9c:	d1ea      	bne.n	8001e74 <_printf_float+0x34c>
 8001e9e:	e69a      	b.n	8001bd6 <_printf_float+0xae>
 8001ea0:	2301      	movs	r3, #1
 8001ea2:	4642      	mov	r2, r8
 8001ea4:	4659      	mov	r1, fp
 8001ea6:	4628      	mov	r0, r5
 8001ea8:	47b0      	blx	r6
 8001eaa:	3001      	adds	r0, #1
 8001eac:	f43f ae93 	beq.w	8001bd6 <_printf_float+0xae>
 8001eb0:	3701      	adds	r7, #1
 8001eb2:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 8001eb6:	1a9b      	subs	r3, r3, r2
 8001eb8:	eba3 0309 	sub.w	r3, r3, r9
 8001ebc:	42bb      	cmp	r3, r7
 8001ebe:	dcef      	bgt.n	8001ea0 <_printf_float+0x378>
 8001ec0:	e74d      	b.n	8001d5e <_printf_float+0x236>
 8001ec2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8001ec4:	2a01      	cmp	r2, #1
 8001ec6:	dc01      	bgt.n	8001ecc <_printf_float+0x3a4>
 8001ec8:	07db      	lsls	r3, r3, #31
 8001eca:	d538      	bpl.n	8001f3e <_printf_float+0x416>
 8001ecc:	2301      	movs	r3, #1
 8001ece:	463a      	mov	r2, r7
 8001ed0:	4659      	mov	r1, fp
 8001ed2:	4628      	mov	r0, r5
 8001ed4:	47b0      	blx	r6
 8001ed6:	3001      	adds	r0, #1
 8001ed8:	f43f ae7d 	beq.w	8001bd6 <_printf_float+0xae>
 8001edc:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8001ee0:	4659      	mov	r1, fp
 8001ee2:	4628      	mov	r0, r5
 8001ee4:	47b0      	blx	r6
 8001ee6:	3001      	adds	r0, #1
 8001ee8:	f107 0701 	add.w	r7, r7, #1
 8001eec:	f43f ae73 	beq.w	8001bd6 <_printf_float+0xae>
 8001ef0:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8001ef4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8001ef6:	2200      	movs	r2, #0
 8001ef8:	f103 38ff 	add.w	r8, r3, #4294967295
 8001efc:	2300      	movs	r3, #0
 8001efe:	f7fe fd53 	bl	80009a8 <__aeabi_dcmpeq>
 8001f02:	b9c0      	cbnz	r0, 8001f36 <_printf_float+0x40e>
 8001f04:	4643      	mov	r3, r8
 8001f06:	463a      	mov	r2, r7
 8001f08:	4659      	mov	r1, fp
 8001f0a:	4628      	mov	r0, r5
 8001f0c:	47b0      	blx	r6
 8001f0e:	3001      	adds	r0, #1
 8001f10:	d10d      	bne.n	8001f2e <_printf_float+0x406>
 8001f12:	e660      	b.n	8001bd6 <_printf_float+0xae>
 8001f14:	2301      	movs	r3, #1
 8001f16:	4642      	mov	r2, r8
 8001f18:	4659      	mov	r1, fp
 8001f1a:	4628      	mov	r0, r5
 8001f1c:	47b0      	blx	r6
 8001f1e:	3001      	adds	r0, #1
 8001f20:	f43f ae59 	beq.w	8001bd6 <_printf_float+0xae>
 8001f24:	3701      	adds	r7, #1
 8001f26:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8001f28:	3b01      	subs	r3, #1
 8001f2a:	42bb      	cmp	r3, r7
 8001f2c:	dcf2      	bgt.n	8001f14 <_printf_float+0x3ec>
 8001f2e:	464b      	mov	r3, r9
 8001f30:	f104 0250 	add.w	r2, r4, #80	; 0x50
 8001f34:	e6e4      	b.n	8001d00 <_printf_float+0x1d8>
 8001f36:	2700      	movs	r7, #0
 8001f38:	f104 081a 	add.w	r8, r4, #26
 8001f3c:	e7f3      	b.n	8001f26 <_printf_float+0x3fe>
 8001f3e:	2301      	movs	r3, #1
 8001f40:	e7e1      	b.n	8001f06 <_printf_float+0x3de>
 8001f42:	2301      	movs	r3, #1
 8001f44:	4642      	mov	r2, r8
 8001f46:	4659      	mov	r1, fp
 8001f48:	4628      	mov	r0, r5
 8001f4a:	47b0      	blx	r6
 8001f4c:	3001      	adds	r0, #1
 8001f4e:	f43f ae42 	beq.w	8001bd6 <_printf_float+0xae>
 8001f52:	3701      	adds	r7, #1
 8001f54:	68e3      	ldr	r3, [r4, #12]
 8001f56:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8001f58:	1a9b      	subs	r3, r3, r2
 8001f5a:	42bb      	cmp	r3, r7
 8001f5c:	dcf1      	bgt.n	8001f42 <_printf_float+0x41a>
 8001f5e:	e702      	b.n	8001d66 <_printf_float+0x23e>
 8001f60:	2700      	movs	r7, #0
 8001f62:	f104 0819 	add.w	r8, r4, #25
 8001f66:	e7f5      	b.n	8001f54 <_printf_float+0x42c>
 8001f68:	2b00      	cmp	r3, #0
 8001f6a:	f43f ae94 	beq.w	8001c96 <_printf_float+0x16e>
 8001f6e:	f04f 0c00 	mov.w	ip, #0
 8001f72:	e9cd 1c05 	strd	r1, ip, [sp, #20]
 8001f76:	f10d 0133 	add.w	r1, sp, #51	; 0x33
 8001f7a:	6022      	str	r2, [r4, #0]
 8001f7c:	e9cd 0803 	strd	r0, r8, [sp, #12]
 8001f80:	e9cd 2101 	strd	r2, r1, [sp, #4]
 8001f84:	9300      	str	r3, [sp, #0]
 8001f86:	463a      	mov	r2, r7
 8001f88:	464b      	mov	r3, r9
 8001f8a:	4628      	mov	r0, r5
 8001f8c:	f7ff fd3a 	bl	8001a04 <__cvt>
 8001f90:	4607      	mov	r7, r0
 8001f92:	e64f      	b.n	8001c34 <_printf_float+0x10c>

08001f94 <_printf_common>:
 8001f94:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001f98:	4691      	mov	r9, r2
 8001f9a:	461f      	mov	r7, r3
 8001f9c:	688a      	ldr	r2, [r1, #8]
 8001f9e:	690b      	ldr	r3, [r1, #16]
 8001fa0:	4606      	mov	r6, r0
 8001fa2:	4293      	cmp	r3, r2
 8001fa4:	bfb8      	it	lt
 8001fa6:	4613      	movlt	r3, r2
 8001fa8:	f8c9 3000 	str.w	r3, [r9]
 8001fac:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8001fb0:	460c      	mov	r4, r1
 8001fb2:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8001fb6:	b112      	cbz	r2, 8001fbe <_printf_common+0x2a>
 8001fb8:	3301      	adds	r3, #1
 8001fba:	f8c9 3000 	str.w	r3, [r9]
 8001fbe:	6823      	ldr	r3, [r4, #0]
 8001fc0:	0699      	lsls	r1, r3, #26
 8001fc2:	bf42      	ittt	mi
 8001fc4:	f8d9 3000 	ldrmi.w	r3, [r9]
 8001fc8:	3302      	addmi	r3, #2
 8001fca:	f8c9 3000 	strmi.w	r3, [r9]
 8001fce:	6825      	ldr	r5, [r4, #0]
 8001fd0:	f015 0506 	ands.w	r5, r5, #6
 8001fd4:	d107      	bne.n	8001fe6 <_printf_common+0x52>
 8001fd6:	f104 0a19 	add.w	sl, r4, #25
 8001fda:	68e3      	ldr	r3, [r4, #12]
 8001fdc:	f8d9 2000 	ldr.w	r2, [r9]
 8001fe0:	1a9b      	subs	r3, r3, r2
 8001fe2:	42ab      	cmp	r3, r5
 8001fe4:	dc29      	bgt.n	800203a <_printf_common+0xa6>
 8001fe6:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 8001fea:	6822      	ldr	r2, [r4, #0]
 8001fec:	3300      	adds	r3, #0
 8001fee:	bf18      	it	ne
 8001ff0:	2301      	movne	r3, #1
 8001ff2:	0692      	lsls	r2, r2, #26
 8001ff4:	d42e      	bmi.n	8002054 <_printf_common+0xc0>
 8001ff6:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8001ffa:	4639      	mov	r1, r7
 8001ffc:	4630      	mov	r0, r6
 8001ffe:	47c0      	blx	r8
 8002000:	3001      	adds	r0, #1
 8002002:	d021      	beq.n	8002048 <_printf_common+0xb4>
 8002004:	6823      	ldr	r3, [r4, #0]
 8002006:	68e5      	ldr	r5, [r4, #12]
 8002008:	f003 0306 	and.w	r3, r3, #6
 800200c:	2b04      	cmp	r3, #4
 800200e:	bf18      	it	ne
 8002010:	2500      	movne	r5, #0
 8002012:	f8d9 2000 	ldr.w	r2, [r9]
 8002016:	f04f 0900 	mov.w	r9, #0
 800201a:	bf08      	it	eq
 800201c:	1aad      	subeq	r5, r5, r2
 800201e:	68a3      	ldr	r3, [r4, #8]
 8002020:	6922      	ldr	r2, [r4, #16]
 8002022:	bf08      	it	eq
 8002024:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8002028:	4293      	cmp	r3, r2
 800202a:	bfc4      	itt	gt
 800202c:	1a9b      	subgt	r3, r3, r2
 800202e:	18ed      	addgt	r5, r5, r3
 8002030:	341a      	adds	r4, #26
 8002032:	454d      	cmp	r5, r9
 8002034:	d11a      	bne.n	800206c <_printf_common+0xd8>
 8002036:	2000      	movs	r0, #0
 8002038:	e008      	b.n	800204c <_printf_common+0xb8>
 800203a:	2301      	movs	r3, #1
 800203c:	4652      	mov	r2, sl
 800203e:	4639      	mov	r1, r7
 8002040:	4630      	mov	r0, r6
 8002042:	47c0      	blx	r8
 8002044:	3001      	adds	r0, #1
 8002046:	d103      	bne.n	8002050 <_printf_common+0xbc>
 8002048:	f04f 30ff 	mov.w	r0, #4294967295
 800204c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002050:	3501      	adds	r5, #1
 8002052:	e7c2      	b.n	8001fda <_printf_common+0x46>
 8002054:	2030      	movs	r0, #48	; 0x30
 8002056:	18e1      	adds	r1, r4, r3
 8002058:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 800205c:	1c5a      	adds	r2, r3, #1
 800205e:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8002062:	4422      	add	r2, r4
 8002064:	3302      	adds	r3, #2
 8002066:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 800206a:	e7c4      	b.n	8001ff6 <_printf_common+0x62>
 800206c:	2301      	movs	r3, #1
 800206e:	4622      	mov	r2, r4
 8002070:	4639      	mov	r1, r7
 8002072:	4630      	mov	r0, r6
 8002074:	47c0      	blx	r8
 8002076:	3001      	adds	r0, #1
 8002078:	d0e6      	beq.n	8002048 <_printf_common+0xb4>
 800207a:	f109 0901 	add.w	r9, r9, #1
 800207e:	e7d8      	b.n	8002032 <_printf_common+0x9e>

08002080 <_printf_i>:
 8002080:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002084:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 8002088:	460c      	mov	r4, r1
 800208a:	7e09      	ldrb	r1, [r1, #24]
 800208c:	b085      	sub	sp, #20
 800208e:	296e      	cmp	r1, #110	; 0x6e
 8002090:	4617      	mov	r7, r2
 8002092:	4606      	mov	r6, r0
 8002094:	4698      	mov	r8, r3
 8002096:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8002098:	f000 80b3 	beq.w	8002202 <_printf_i+0x182>
 800209c:	d822      	bhi.n	80020e4 <_printf_i+0x64>
 800209e:	2963      	cmp	r1, #99	; 0x63
 80020a0:	d036      	beq.n	8002110 <_printf_i+0x90>
 80020a2:	d80a      	bhi.n	80020ba <_printf_i+0x3a>
 80020a4:	2900      	cmp	r1, #0
 80020a6:	f000 80b9 	beq.w	800221c <_printf_i+0x19c>
 80020aa:	2958      	cmp	r1, #88	; 0x58
 80020ac:	f000 8083 	beq.w	80021b6 <_printf_i+0x136>
 80020b0:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80020b4:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 80020b8:	e032      	b.n	8002120 <_printf_i+0xa0>
 80020ba:	2964      	cmp	r1, #100	; 0x64
 80020bc:	d001      	beq.n	80020c2 <_printf_i+0x42>
 80020be:	2969      	cmp	r1, #105	; 0x69
 80020c0:	d1f6      	bne.n	80020b0 <_printf_i+0x30>
 80020c2:	6820      	ldr	r0, [r4, #0]
 80020c4:	6813      	ldr	r3, [r2, #0]
 80020c6:	0605      	lsls	r5, r0, #24
 80020c8:	f103 0104 	add.w	r1, r3, #4
 80020cc:	d52a      	bpl.n	8002124 <_printf_i+0xa4>
 80020ce:	681b      	ldr	r3, [r3, #0]
 80020d0:	6011      	str	r1, [r2, #0]
 80020d2:	2b00      	cmp	r3, #0
 80020d4:	da03      	bge.n	80020de <_printf_i+0x5e>
 80020d6:	222d      	movs	r2, #45	; 0x2d
 80020d8:	425b      	negs	r3, r3
 80020da:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 80020de:	486f      	ldr	r0, [pc, #444]	; (800229c <_printf_i+0x21c>)
 80020e0:	220a      	movs	r2, #10
 80020e2:	e039      	b.n	8002158 <_printf_i+0xd8>
 80020e4:	2973      	cmp	r1, #115	; 0x73
 80020e6:	f000 809d 	beq.w	8002224 <_printf_i+0x1a4>
 80020ea:	d808      	bhi.n	80020fe <_printf_i+0x7e>
 80020ec:	296f      	cmp	r1, #111	; 0x6f
 80020ee:	d020      	beq.n	8002132 <_printf_i+0xb2>
 80020f0:	2970      	cmp	r1, #112	; 0x70
 80020f2:	d1dd      	bne.n	80020b0 <_printf_i+0x30>
 80020f4:	6823      	ldr	r3, [r4, #0]
 80020f6:	f043 0320 	orr.w	r3, r3, #32
 80020fa:	6023      	str	r3, [r4, #0]
 80020fc:	e003      	b.n	8002106 <_printf_i+0x86>
 80020fe:	2975      	cmp	r1, #117	; 0x75
 8002100:	d017      	beq.n	8002132 <_printf_i+0xb2>
 8002102:	2978      	cmp	r1, #120	; 0x78
 8002104:	d1d4      	bne.n	80020b0 <_printf_i+0x30>
 8002106:	2378      	movs	r3, #120	; 0x78
 8002108:	4865      	ldr	r0, [pc, #404]	; (80022a0 <_printf_i+0x220>)
 800210a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800210e:	e055      	b.n	80021bc <_printf_i+0x13c>
 8002110:	6813      	ldr	r3, [r2, #0]
 8002112:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8002116:	1d19      	adds	r1, r3, #4
 8002118:	681b      	ldr	r3, [r3, #0]
 800211a:	6011      	str	r1, [r2, #0]
 800211c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8002120:	2301      	movs	r3, #1
 8002122:	e08c      	b.n	800223e <_printf_i+0x1be>
 8002124:	681b      	ldr	r3, [r3, #0]
 8002126:	f010 0f40 	tst.w	r0, #64	; 0x40
 800212a:	6011      	str	r1, [r2, #0]
 800212c:	bf18      	it	ne
 800212e:	b21b      	sxthne	r3, r3
 8002130:	e7cf      	b.n	80020d2 <_printf_i+0x52>
 8002132:	6813      	ldr	r3, [r2, #0]
 8002134:	6825      	ldr	r5, [r4, #0]
 8002136:	1d18      	adds	r0, r3, #4
 8002138:	6010      	str	r0, [r2, #0]
 800213a:	0628      	lsls	r0, r5, #24
 800213c:	d501      	bpl.n	8002142 <_printf_i+0xc2>
 800213e:	681b      	ldr	r3, [r3, #0]
 8002140:	e002      	b.n	8002148 <_printf_i+0xc8>
 8002142:	0668      	lsls	r0, r5, #25
 8002144:	d5fb      	bpl.n	800213e <_printf_i+0xbe>
 8002146:	881b      	ldrh	r3, [r3, #0]
 8002148:	296f      	cmp	r1, #111	; 0x6f
 800214a:	bf14      	ite	ne
 800214c:	220a      	movne	r2, #10
 800214e:	2208      	moveq	r2, #8
 8002150:	4852      	ldr	r0, [pc, #328]	; (800229c <_printf_i+0x21c>)
 8002152:	2100      	movs	r1, #0
 8002154:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8002158:	6865      	ldr	r5, [r4, #4]
 800215a:	2d00      	cmp	r5, #0
 800215c:	60a5      	str	r5, [r4, #8]
 800215e:	f2c0 8095 	blt.w	800228c <_printf_i+0x20c>
 8002162:	6821      	ldr	r1, [r4, #0]
 8002164:	f021 0104 	bic.w	r1, r1, #4
 8002168:	6021      	str	r1, [r4, #0]
 800216a:	2b00      	cmp	r3, #0
 800216c:	d13d      	bne.n	80021ea <_printf_i+0x16a>
 800216e:	2d00      	cmp	r5, #0
 8002170:	f040 808e 	bne.w	8002290 <_printf_i+0x210>
 8002174:	4665      	mov	r5, ip
 8002176:	2a08      	cmp	r2, #8
 8002178:	d10b      	bne.n	8002192 <_printf_i+0x112>
 800217a:	6823      	ldr	r3, [r4, #0]
 800217c:	07db      	lsls	r3, r3, #31
 800217e:	d508      	bpl.n	8002192 <_printf_i+0x112>
 8002180:	6923      	ldr	r3, [r4, #16]
 8002182:	6862      	ldr	r2, [r4, #4]
 8002184:	429a      	cmp	r2, r3
 8002186:	bfde      	ittt	le
 8002188:	2330      	movle	r3, #48	; 0x30
 800218a:	f805 3c01 	strble.w	r3, [r5, #-1]
 800218e:	f105 35ff 	addle.w	r5, r5, #4294967295
 8002192:	ebac 0305 	sub.w	r3, ip, r5
 8002196:	6123      	str	r3, [r4, #16]
 8002198:	f8cd 8000 	str.w	r8, [sp]
 800219c:	463b      	mov	r3, r7
 800219e:	aa03      	add	r2, sp, #12
 80021a0:	4621      	mov	r1, r4
 80021a2:	4630      	mov	r0, r6
 80021a4:	f7ff fef6 	bl	8001f94 <_printf_common>
 80021a8:	3001      	adds	r0, #1
 80021aa:	d14d      	bne.n	8002248 <_printf_i+0x1c8>
 80021ac:	f04f 30ff 	mov.w	r0, #4294967295
 80021b0:	b005      	add	sp, #20
 80021b2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80021b6:	4839      	ldr	r0, [pc, #228]	; (800229c <_printf_i+0x21c>)
 80021b8:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 80021bc:	6813      	ldr	r3, [r2, #0]
 80021be:	6821      	ldr	r1, [r4, #0]
 80021c0:	1d1d      	adds	r5, r3, #4
 80021c2:	681b      	ldr	r3, [r3, #0]
 80021c4:	6015      	str	r5, [r2, #0]
 80021c6:	060a      	lsls	r2, r1, #24
 80021c8:	d50b      	bpl.n	80021e2 <_printf_i+0x162>
 80021ca:	07ca      	lsls	r2, r1, #31
 80021cc:	bf44      	itt	mi
 80021ce:	f041 0120 	orrmi.w	r1, r1, #32
 80021d2:	6021      	strmi	r1, [r4, #0]
 80021d4:	b91b      	cbnz	r3, 80021de <_printf_i+0x15e>
 80021d6:	6822      	ldr	r2, [r4, #0]
 80021d8:	f022 0220 	bic.w	r2, r2, #32
 80021dc:	6022      	str	r2, [r4, #0]
 80021de:	2210      	movs	r2, #16
 80021e0:	e7b7      	b.n	8002152 <_printf_i+0xd2>
 80021e2:	064d      	lsls	r5, r1, #25
 80021e4:	bf48      	it	mi
 80021e6:	b29b      	uxthmi	r3, r3
 80021e8:	e7ef      	b.n	80021ca <_printf_i+0x14a>
 80021ea:	4665      	mov	r5, ip
 80021ec:	fbb3 f1f2 	udiv	r1, r3, r2
 80021f0:	fb02 3311 	mls	r3, r2, r1, r3
 80021f4:	5cc3      	ldrb	r3, [r0, r3]
 80021f6:	f805 3d01 	strb.w	r3, [r5, #-1]!
 80021fa:	460b      	mov	r3, r1
 80021fc:	2900      	cmp	r1, #0
 80021fe:	d1f5      	bne.n	80021ec <_printf_i+0x16c>
 8002200:	e7b9      	b.n	8002176 <_printf_i+0xf6>
 8002202:	6813      	ldr	r3, [r2, #0]
 8002204:	6825      	ldr	r5, [r4, #0]
 8002206:	1d18      	adds	r0, r3, #4
 8002208:	6961      	ldr	r1, [r4, #20]
 800220a:	6010      	str	r0, [r2, #0]
 800220c:	0628      	lsls	r0, r5, #24
 800220e:	681b      	ldr	r3, [r3, #0]
 8002210:	d501      	bpl.n	8002216 <_printf_i+0x196>
 8002212:	6019      	str	r1, [r3, #0]
 8002214:	e002      	b.n	800221c <_printf_i+0x19c>
 8002216:	066a      	lsls	r2, r5, #25
 8002218:	d5fb      	bpl.n	8002212 <_printf_i+0x192>
 800221a:	8019      	strh	r1, [r3, #0]
 800221c:	2300      	movs	r3, #0
 800221e:	4665      	mov	r5, ip
 8002220:	6123      	str	r3, [r4, #16]
 8002222:	e7b9      	b.n	8002198 <_printf_i+0x118>
 8002224:	6813      	ldr	r3, [r2, #0]
 8002226:	1d19      	adds	r1, r3, #4
 8002228:	6011      	str	r1, [r2, #0]
 800222a:	681d      	ldr	r5, [r3, #0]
 800222c:	6862      	ldr	r2, [r4, #4]
 800222e:	2100      	movs	r1, #0
 8002230:	4628      	mov	r0, r5
 8002232:	f000 feaf 	bl	8002f94 <memchr>
 8002236:	b108      	cbz	r0, 800223c <_printf_i+0x1bc>
 8002238:	1b40      	subs	r0, r0, r5
 800223a:	6060      	str	r0, [r4, #4]
 800223c:	6863      	ldr	r3, [r4, #4]
 800223e:	6123      	str	r3, [r4, #16]
 8002240:	2300      	movs	r3, #0
 8002242:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8002246:	e7a7      	b.n	8002198 <_printf_i+0x118>
 8002248:	6923      	ldr	r3, [r4, #16]
 800224a:	462a      	mov	r2, r5
 800224c:	4639      	mov	r1, r7
 800224e:	4630      	mov	r0, r6
 8002250:	47c0      	blx	r8
 8002252:	3001      	adds	r0, #1
 8002254:	d0aa      	beq.n	80021ac <_printf_i+0x12c>
 8002256:	6823      	ldr	r3, [r4, #0]
 8002258:	079b      	lsls	r3, r3, #30
 800225a:	d413      	bmi.n	8002284 <_printf_i+0x204>
 800225c:	68e0      	ldr	r0, [r4, #12]
 800225e:	9b03      	ldr	r3, [sp, #12]
 8002260:	4298      	cmp	r0, r3
 8002262:	bfb8      	it	lt
 8002264:	4618      	movlt	r0, r3
 8002266:	e7a3      	b.n	80021b0 <_printf_i+0x130>
 8002268:	2301      	movs	r3, #1
 800226a:	464a      	mov	r2, r9
 800226c:	4639      	mov	r1, r7
 800226e:	4630      	mov	r0, r6
 8002270:	47c0      	blx	r8
 8002272:	3001      	adds	r0, #1
 8002274:	d09a      	beq.n	80021ac <_printf_i+0x12c>
 8002276:	3501      	adds	r5, #1
 8002278:	68e3      	ldr	r3, [r4, #12]
 800227a:	9a03      	ldr	r2, [sp, #12]
 800227c:	1a9b      	subs	r3, r3, r2
 800227e:	42ab      	cmp	r3, r5
 8002280:	dcf2      	bgt.n	8002268 <_printf_i+0x1e8>
 8002282:	e7eb      	b.n	800225c <_printf_i+0x1dc>
 8002284:	2500      	movs	r5, #0
 8002286:	f104 0919 	add.w	r9, r4, #25
 800228a:	e7f5      	b.n	8002278 <_printf_i+0x1f8>
 800228c:	2b00      	cmp	r3, #0
 800228e:	d1ac      	bne.n	80021ea <_printf_i+0x16a>
 8002290:	7803      	ldrb	r3, [r0, #0]
 8002292:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8002296:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800229a:	e76c      	b.n	8002176 <_printf_i+0xf6>
 800229c:	08003b00 	.word	0x08003b00
 80022a0:	08003b11 	.word	0x08003b11

080022a4 <siprintf>:
 80022a4:	b40e      	push	{r1, r2, r3}
 80022a6:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 80022aa:	b500      	push	{lr}
 80022ac:	b09c      	sub	sp, #112	; 0x70
 80022ae:	ab1d      	add	r3, sp, #116	; 0x74
 80022b0:	9002      	str	r0, [sp, #8]
 80022b2:	9006      	str	r0, [sp, #24]
 80022b4:	9107      	str	r1, [sp, #28]
 80022b6:	9104      	str	r1, [sp, #16]
 80022b8:	4808      	ldr	r0, [pc, #32]	; (80022dc <siprintf+0x38>)
 80022ba:	4909      	ldr	r1, [pc, #36]	; (80022e0 <siprintf+0x3c>)
 80022bc:	f853 2b04 	ldr.w	r2, [r3], #4
 80022c0:	9105      	str	r1, [sp, #20]
 80022c2:	6800      	ldr	r0, [r0, #0]
 80022c4:	a902      	add	r1, sp, #8
 80022c6:	9301      	str	r3, [sp, #4]
 80022c8:	f001 fa68 	bl	800379c <_svfiprintf_r>
 80022cc:	2200      	movs	r2, #0
 80022ce:	9b02      	ldr	r3, [sp, #8]
 80022d0:	701a      	strb	r2, [r3, #0]
 80022d2:	b01c      	add	sp, #112	; 0x70
 80022d4:	f85d eb04 	ldr.w	lr, [sp], #4
 80022d8:	b003      	add	sp, #12
 80022da:	4770      	bx	lr
 80022dc:	20000008 	.word	0x20000008
 80022e0:	ffff0208 	.word	0xffff0208

080022e4 <quorem>:
 80022e4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80022e8:	6903      	ldr	r3, [r0, #16]
 80022ea:	690c      	ldr	r4, [r1, #16]
 80022ec:	4680      	mov	r8, r0
 80022ee:	42a3      	cmp	r3, r4
 80022f0:	f2c0 8084 	blt.w	80023fc <quorem+0x118>
 80022f4:	3c01      	subs	r4, #1
 80022f6:	f101 0714 	add.w	r7, r1, #20
 80022fa:	f100 0614 	add.w	r6, r0, #20
 80022fe:	f857 5024 	ldr.w	r5, [r7, r4, lsl #2]
 8002302:	f856 0024 	ldr.w	r0, [r6, r4, lsl #2]
 8002306:	3501      	adds	r5, #1
 8002308:	fbb0 f5f5 	udiv	r5, r0, r5
 800230c:	ea4f 0c84 	mov.w	ip, r4, lsl #2
 8002310:	eb06 030c 	add.w	r3, r6, ip
 8002314:	eb07 090c 	add.w	r9, r7, ip
 8002318:	9301      	str	r3, [sp, #4]
 800231a:	b39d      	cbz	r5, 8002384 <quorem+0xa0>
 800231c:	f04f 0a00 	mov.w	sl, #0
 8002320:	4638      	mov	r0, r7
 8002322:	46b6      	mov	lr, r6
 8002324:	46d3      	mov	fp, sl
 8002326:	f850 2b04 	ldr.w	r2, [r0], #4
 800232a:	b293      	uxth	r3, r2
 800232c:	fb05 a303 	mla	r3, r5, r3, sl
 8002330:	0c12      	lsrs	r2, r2, #16
 8002332:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8002336:	fb05 a202 	mla	r2, r5, r2, sl
 800233a:	b29b      	uxth	r3, r3
 800233c:	ebab 0303 	sub.w	r3, fp, r3
 8002340:	f8de b000 	ldr.w	fp, [lr]
 8002344:	ea4f 4a12 	mov.w	sl, r2, lsr #16
 8002348:	fa1f fb8b 	uxth.w	fp, fp
 800234c:	445b      	add	r3, fp
 800234e:	fa1f fb82 	uxth.w	fp, r2
 8002352:	f8de 2000 	ldr.w	r2, [lr]
 8002356:	4581      	cmp	r9, r0
 8002358:	ebcb 4212 	rsb	r2, fp, r2, lsr #16
 800235c:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8002360:	b29b      	uxth	r3, r3
 8002362:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8002366:	ea4f 4b22 	mov.w	fp, r2, asr #16
 800236a:	f84e 3b04 	str.w	r3, [lr], #4
 800236e:	d2da      	bcs.n	8002326 <quorem+0x42>
 8002370:	f856 300c 	ldr.w	r3, [r6, ip]
 8002374:	b933      	cbnz	r3, 8002384 <quorem+0xa0>
 8002376:	9b01      	ldr	r3, [sp, #4]
 8002378:	3b04      	subs	r3, #4
 800237a:	429e      	cmp	r6, r3
 800237c:	461a      	mov	r2, r3
 800237e:	d331      	bcc.n	80023e4 <quorem+0x100>
 8002380:	f8c8 4010 	str.w	r4, [r8, #16]
 8002384:	4640      	mov	r0, r8
 8002386:	f001 f833 	bl	80033f0 <__mcmp>
 800238a:	2800      	cmp	r0, #0
 800238c:	db26      	blt.n	80023dc <quorem+0xf8>
 800238e:	4630      	mov	r0, r6
 8002390:	f04f 0c00 	mov.w	ip, #0
 8002394:	3501      	adds	r5, #1
 8002396:	f857 1b04 	ldr.w	r1, [r7], #4
 800239a:	f8d0 e000 	ldr.w	lr, [r0]
 800239e:	b28b      	uxth	r3, r1
 80023a0:	ebac 0303 	sub.w	r3, ip, r3
 80023a4:	fa1f f28e 	uxth.w	r2, lr
 80023a8:	4413      	add	r3, r2
 80023aa:	0c0a      	lsrs	r2, r1, #16
 80023ac:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 80023b0:	eb02 4223 	add.w	r2, r2, r3, asr #16
 80023b4:	b29b      	uxth	r3, r3
 80023b6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80023ba:	45b9      	cmp	r9, r7
 80023bc:	ea4f 4c22 	mov.w	ip, r2, asr #16
 80023c0:	f840 3b04 	str.w	r3, [r0], #4
 80023c4:	d2e7      	bcs.n	8002396 <quorem+0xb2>
 80023c6:	f856 2024 	ldr.w	r2, [r6, r4, lsl #2]
 80023ca:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 80023ce:	b92a      	cbnz	r2, 80023dc <quorem+0xf8>
 80023d0:	3b04      	subs	r3, #4
 80023d2:	429e      	cmp	r6, r3
 80023d4:	461a      	mov	r2, r3
 80023d6:	d30b      	bcc.n	80023f0 <quorem+0x10c>
 80023d8:	f8c8 4010 	str.w	r4, [r8, #16]
 80023dc:	4628      	mov	r0, r5
 80023de:	b003      	add	sp, #12
 80023e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80023e4:	6812      	ldr	r2, [r2, #0]
 80023e6:	3b04      	subs	r3, #4
 80023e8:	2a00      	cmp	r2, #0
 80023ea:	d1c9      	bne.n	8002380 <quorem+0x9c>
 80023ec:	3c01      	subs	r4, #1
 80023ee:	e7c4      	b.n	800237a <quorem+0x96>
 80023f0:	6812      	ldr	r2, [r2, #0]
 80023f2:	3b04      	subs	r3, #4
 80023f4:	2a00      	cmp	r2, #0
 80023f6:	d1ef      	bne.n	80023d8 <quorem+0xf4>
 80023f8:	3c01      	subs	r4, #1
 80023fa:	e7ea      	b.n	80023d2 <quorem+0xee>
 80023fc:	2000      	movs	r0, #0
 80023fe:	e7ee      	b.n	80023de <quorem+0xfa>

08002400 <_dtoa_r>:
 8002400:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002404:	4616      	mov	r6, r2
 8002406:	461f      	mov	r7, r3
 8002408:	6a45      	ldr	r5, [r0, #36]	; 0x24
 800240a:	b095      	sub	sp, #84	; 0x54
 800240c:	4604      	mov	r4, r0
 800240e:	f8dd 8084 	ldr.w	r8, [sp, #132]	; 0x84
 8002412:	e9cd 6702 	strd	r6, r7, [sp, #8]
 8002416:	b93d      	cbnz	r5, 8002428 <_dtoa_r+0x28>
 8002418:	2010      	movs	r0, #16
 800241a:	f000 fdb3 	bl	8002f84 <malloc>
 800241e:	6260      	str	r0, [r4, #36]	; 0x24
 8002420:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8002424:	6005      	str	r5, [r0, #0]
 8002426:	60c5      	str	r5, [r0, #12]
 8002428:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800242a:	6819      	ldr	r1, [r3, #0]
 800242c:	b151      	cbz	r1, 8002444 <_dtoa_r+0x44>
 800242e:	685a      	ldr	r2, [r3, #4]
 8002430:	2301      	movs	r3, #1
 8002432:	4093      	lsls	r3, r2
 8002434:	604a      	str	r2, [r1, #4]
 8002436:	608b      	str	r3, [r1, #8]
 8002438:	4620      	mov	r0, r4
 800243a:	f000 fdf8 	bl	800302e <_Bfree>
 800243e:	2200      	movs	r2, #0
 8002440:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002442:	601a      	str	r2, [r3, #0]
 8002444:	1e3b      	subs	r3, r7, #0
 8002446:	bfaf      	iteee	ge
 8002448:	2300      	movge	r3, #0
 800244a:	2201      	movlt	r2, #1
 800244c:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 8002450:	9303      	strlt	r3, [sp, #12]
 8002452:	bfac      	ite	ge
 8002454:	f8c8 3000 	strge.w	r3, [r8]
 8002458:	f8c8 2000 	strlt.w	r2, [r8]
 800245c:	4bae      	ldr	r3, [pc, #696]	; (8002718 <_dtoa_r+0x318>)
 800245e:	f8dd 800c 	ldr.w	r8, [sp, #12]
 8002462:	ea33 0308 	bics.w	r3, r3, r8
 8002466:	d11b      	bne.n	80024a0 <_dtoa_r+0xa0>
 8002468:	f242 730f 	movw	r3, #9999	; 0x270f
 800246c:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800246e:	6013      	str	r3, [r2, #0]
 8002470:	9b02      	ldr	r3, [sp, #8]
 8002472:	b923      	cbnz	r3, 800247e <_dtoa_r+0x7e>
 8002474:	f3c8 0013 	ubfx	r0, r8, #0, #20
 8002478:	2800      	cmp	r0, #0
 800247a:	f000 8545 	beq.w	8002f08 <_dtoa_r+0xb08>
 800247e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8002480:	b953      	cbnz	r3, 8002498 <_dtoa_r+0x98>
 8002482:	4ba6      	ldr	r3, [pc, #664]	; (800271c <_dtoa_r+0x31c>)
 8002484:	e021      	b.n	80024ca <_dtoa_r+0xca>
 8002486:	4ba6      	ldr	r3, [pc, #664]	; (8002720 <_dtoa_r+0x320>)
 8002488:	9306      	str	r3, [sp, #24]
 800248a:	3308      	adds	r3, #8
 800248c:	9a22      	ldr	r2, [sp, #136]	; 0x88
 800248e:	6013      	str	r3, [r2, #0]
 8002490:	9806      	ldr	r0, [sp, #24]
 8002492:	b015      	add	sp, #84	; 0x54
 8002494:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002498:	4ba0      	ldr	r3, [pc, #640]	; (800271c <_dtoa_r+0x31c>)
 800249a:	9306      	str	r3, [sp, #24]
 800249c:	3303      	adds	r3, #3
 800249e:	e7f5      	b.n	800248c <_dtoa_r+0x8c>
 80024a0:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 80024a4:	2200      	movs	r2, #0
 80024a6:	2300      	movs	r3, #0
 80024a8:	4630      	mov	r0, r6
 80024aa:	4639      	mov	r1, r7
 80024ac:	f7fe fa7c 	bl	80009a8 <__aeabi_dcmpeq>
 80024b0:	4682      	mov	sl, r0
 80024b2:	b160      	cbz	r0, 80024ce <_dtoa_r+0xce>
 80024b4:	2301      	movs	r3, #1
 80024b6:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80024b8:	6013      	str	r3, [r2, #0]
 80024ba:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80024bc:	2b00      	cmp	r3, #0
 80024be:	f000 8520 	beq.w	8002f02 <_dtoa_r+0xb02>
 80024c2:	4b98      	ldr	r3, [pc, #608]	; (8002724 <_dtoa_r+0x324>)
 80024c4:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80024c6:	6013      	str	r3, [r2, #0]
 80024c8:	3b01      	subs	r3, #1
 80024ca:	9306      	str	r3, [sp, #24]
 80024cc:	e7e0      	b.n	8002490 <_dtoa_r+0x90>
 80024ce:	ab12      	add	r3, sp, #72	; 0x48
 80024d0:	9301      	str	r3, [sp, #4]
 80024d2:	ab13      	add	r3, sp, #76	; 0x4c
 80024d4:	9300      	str	r3, [sp, #0]
 80024d6:	4632      	mov	r2, r6
 80024d8:	463b      	mov	r3, r7
 80024da:	4620      	mov	r0, r4
 80024dc:	f001 f800 	bl	80034e0 <__d2b>
 80024e0:	f3c8 550a 	ubfx	r5, r8, #20, #11
 80024e4:	4683      	mov	fp, r0
 80024e6:	2d00      	cmp	r5, #0
 80024e8:	d07d      	beq.n	80025e6 <_dtoa_r+0x1e6>
 80024ea:	46b0      	mov	r8, r6
 80024ec:	f3c7 0313 	ubfx	r3, r7, #0, #20
 80024f0:	f043 597f 	orr.w	r9, r3, #1069547520	; 0x3fc00000
 80024f4:	f449 1940 	orr.w	r9, r9, #3145728	; 0x300000
 80024f8:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 80024fc:	f8cd a040 	str.w	sl, [sp, #64]	; 0x40
 8002500:	2200      	movs	r2, #0
 8002502:	4b89      	ldr	r3, [pc, #548]	; (8002728 <_dtoa_r+0x328>)
 8002504:	4640      	mov	r0, r8
 8002506:	4649      	mov	r1, r9
 8002508:	f7fd fe2e 	bl	8000168 <__aeabi_dsub>
 800250c:	a37c      	add	r3, pc, #496	; (adr r3, 8002700 <_dtoa_r+0x300>)
 800250e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002512:	f7fd ffe1 	bl	80004d8 <__aeabi_dmul>
 8002516:	a37c      	add	r3, pc, #496	; (adr r3, 8002708 <_dtoa_r+0x308>)
 8002518:	e9d3 2300 	ldrd	r2, r3, [r3]
 800251c:	f7fd fe26 	bl	800016c <__adddf3>
 8002520:	4606      	mov	r6, r0
 8002522:	4628      	mov	r0, r5
 8002524:	460f      	mov	r7, r1
 8002526:	f7fd ff6d 	bl	8000404 <__aeabi_i2d>
 800252a:	a379      	add	r3, pc, #484	; (adr r3, 8002710 <_dtoa_r+0x310>)
 800252c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002530:	f7fd ffd2 	bl	80004d8 <__aeabi_dmul>
 8002534:	4602      	mov	r2, r0
 8002536:	460b      	mov	r3, r1
 8002538:	4630      	mov	r0, r6
 800253a:	4639      	mov	r1, r7
 800253c:	f7fd fe16 	bl	800016c <__adddf3>
 8002540:	4606      	mov	r6, r0
 8002542:	460f      	mov	r7, r1
 8002544:	f7fe fa78 	bl	8000a38 <__aeabi_d2iz>
 8002548:	2200      	movs	r2, #0
 800254a:	4682      	mov	sl, r0
 800254c:	2300      	movs	r3, #0
 800254e:	4630      	mov	r0, r6
 8002550:	4639      	mov	r1, r7
 8002552:	f7fe fa33 	bl	80009bc <__aeabi_dcmplt>
 8002556:	b148      	cbz	r0, 800256c <_dtoa_r+0x16c>
 8002558:	4650      	mov	r0, sl
 800255a:	f7fd ff53 	bl	8000404 <__aeabi_i2d>
 800255e:	4632      	mov	r2, r6
 8002560:	463b      	mov	r3, r7
 8002562:	f7fe fa21 	bl	80009a8 <__aeabi_dcmpeq>
 8002566:	b908      	cbnz	r0, 800256c <_dtoa_r+0x16c>
 8002568:	f10a 3aff 	add.w	sl, sl, #4294967295
 800256c:	f1ba 0f16 	cmp.w	sl, #22
 8002570:	d85a      	bhi.n	8002628 <_dtoa_r+0x228>
 8002572:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002576:	496d      	ldr	r1, [pc, #436]	; (800272c <_dtoa_r+0x32c>)
 8002578:	eb01 01ca 	add.w	r1, r1, sl, lsl #3
 800257c:	e9d1 0100 	ldrd	r0, r1, [r1]
 8002580:	f7fe fa3a 	bl	80009f8 <__aeabi_dcmpgt>
 8002584:	2800      	cmp	r0, #0
 8002586:	d051      	beq.n	800262c <_dtoa_r+0x22c>
 8002588:	2300      	movs	r3, #0
 800258a:	f10a 3aff 	add.w	sl, sl, #4294967295
 800258e:	930d      	str	r3, [sp, #52]	; 0x34
 8002590:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8002592:	1b5d      	subs	r5, r3, r5
 8002594:	1e6b      	subs	r3, r5, #1
 8002596:	9307      	str	r3, [sp, #28]
 8002598:	bf43      	ittte	mi
 800259a:	2300      	movmi	r3, #0
 800259c:	f1c5 0901 	rsbmi	r9, r5, #1
 80025a0:	9307      	strmi	r3, [sp, #28]
 80025a2:	f04f 0900 	movpl.w	r9, #0
 80025a6:	f1ba 0f00 	cmp.w	sl, #0
 80025aa:	db41      	blt.n	8002630 <_dtoa_r+0x230>
 80025ac:	9b07      	ldr	r3, [sp, #28]
 80025ae:	f8cd a030 	str.w	sl, [sp, #48]	; 0x30
 80025b2:	4453      	add	r3, sl
 80025b4:	9307      	str	r3, [sp, #28]
 80025b6:	2300      	movs	r3, #0
 80025b8:	9308      	str	r3, [sp, #32]
 80025ba:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80025bc:	2b09      	cmp	r3, #9
 80025be:	f200 808f 	bhi.w	80026e0 <_dtoa_r+0x2e0>
 80025c2:	2b05      	cmp	r3, #5
 80025c4:	bfc4      	itt	gt
 80025c6:	3b04      	subgt	r3, #4
 80025c8:	931e      	strgt	r3, [sp, #120]	; 0x78
 80025ca:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80025cc:	bfc8      	it	gt
 80025ce:	2500      	movgt	r5, #0
 80025d0:	f1a3 0302 	sub.w	r3, r3, #2
 80025d4:	bfd8      	it	le
 80025d6:	2501      	movle	r5, #1
 80025d8:	2b03      	cmp	r3, #3
 80025da:	f200 808d 	bhi.w	80026f8 <_dtoa_r+0x2f8>
 80025de:	e8df f003 	tbb	[pc, r3]
 80025e2:	7d7b      	.short	0x7d7b
 80025e4:	6f2f      	.short	0x6f2f
 80025e6:	e9dd 5312 	ldrd	r5, r3, [sp, #72]	; 0x48
 80025ea:	441d      	add	r5, r3
 80025ec:	f205 4032 	addw	r0, r5, #1074	; 0x432
 80025f0:	2820      	cmp	r0, #32
 80025f2:	dd13      	ble.n	800261c <_dtoa_r+0x21c>
 80025f4:	f1c0 0040 	rsb	r0, r0, #64	; 0x40
 80025f8:	9b02      	ldr	r3, [sp, #8]
 80025fa:	fa08 f800 	lsl.w	r8, r8, r0
 80025fe:	f205 4012 	addw	r0, r5, #1042	; 0x412
 8002602:	fa23 f000 	lsr.w	r0, r3, r0
 8002606:	ea48 0000 	orr.w	r0, r8, r0
 800260a:	f7fd feeb 	bl	80003e4 <__aeabi_ui2d>
 800260e:	2301      	movs	r3, #1
 8002610:	4680      	mov	r8, r0
 8002612:	f1a1 79f8 	sub.w	r9, r1, #32505856	; 0x1f00000
 8002616:	3d01      	subs	r5, #1
 8002618:	9310      	str	r3, [sp, #64]	; 0x40
 800261a:	e771      	b.n	8002500 <_dtoa_r+0x100>
 800261c:	9b02      	ldr	r3, [sp, #8]
 800261e:	f1c0 0020 	rsb	r0, r0, #32
 8002622:	fa03 f000 	lsl.w	r0, r3, r0
 8002626:	e7f0      	b.n	800260a <_dtoa_r+0x20a>
 8002628:	2301      	movs	r3, #1
 800262a:	e7b0      	b.n	800258e <_dtoa_r+0x18e>
 800262c:	900d      	str	r0, [sp, #52]	; 0x34
 800262e:	e7af      	b.n	8002590 <_dtoa_r+0x190>
 8002630:	f1ca 0300 	rsb	r3, sl, #0
 8002634:	9308      	str	r3, [sp, #32]
 8002636:	2300      	movs	r3, #0
 8002638:	eba9 090a 	sub.w	r9, r9, sl
 800263c:	930c      	str	r3, [sp, #48]	; 0x30
 800263e:	e7bc      	b.n	80025ba <_dtoa_r+0x1ba>
 8002640:	2301      	movs	r3, #1
 8002642:	9309      	str	r3, [sp, #36]	; 0x24
 8002644:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8002646:	2b00      	cmp	r3, #0
 8002648:	dd74      	ble.n	8002734 <_dtoa_r+0x334>
 800264a:	4698      	mov	r8, r3
 800264c:	9304      	str	r3, [sp, #16]
 800264e:	2200      	movs	r2, #0
 8002650:	6a66      	ldr	r6, [r4, #36]	; 0x24
 8002652:	6072      	str	r2, [r6, #4]
 8002654:	2204      	movs	r2, #4
 8002656:	f102 0014 	add.w	r0, r2, #20
 800265a:	4298      	cmp	r0, r3
 800265c:	6871      	ldr	r1, [r6, #4]
 800265e:	d96e      	bls.n	800273e <_dtoa_r+0x33e>
 8002660:	4620      	mov	r0, r4
 8002662:	f000 fcb0 	bl	8002fc6 <_Balloc>
 8002666:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002668:	6030      	str	r0, [r6, #0]
 800266a:	681b      	ldr	r3, [r3, #0]
 800266c:	f1b8 0f0e 	cmp.w	r8, #14
 8002670:	9306      	str	r3, [sp, #24]
 8002672:	f200 80ed 	bhi.w	8002850 <_dtoa_r+0x450>
 8002676:	2d00      	cmp	r5, #0
 8002678:	f000 80ea 	beq.w	8002850 <_dtoa_r+0x450>
 800267c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002680:	f1ba 0f00 	cmp.w	sl, #0
 8002684:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
 8002688:	dd77      	ble.n	800277a <_dtoa_r+0x37a>
 800268a:	4a28      	ldr	r2, [pc, #160]	; (800272c <_dtoa_r+0x32c>)
 800268c:	f00a 030f 	and.w	r3, sl, #15
 8002690:	ea4f 162a 	mov.w	r6, sl, asr #4
 8002694:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8002698:	06f0      	lsls	r0, r6, #27
 800269a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800269e:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 80026a2:	d568      	bpl.n	8002776 <_dtoa_r+0x376>
 80026a4:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 80026a8:	4b21      	ldr	r3, [pc, #132]	; (8002730 <_dtoa_r+0x330>)
 80026aa:	2503      	movs	r5, #3
 80026ac:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 80026b0:	f7fe f83c 	bl	800072c <__aeabi_ddiv>
 80026b4:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80026b8:	f006 060f 	and.w	r6, r6, #15
 80026bc:	4f1c      	ldr	r7, [pc, #112]	; (8002730 <_dtoa_r+0x330>)
 80026be:	e04f      	b.n	8002760 <_dtoa_r+0x360>
 80026c0:	2301      	movs	r3, #1
 80026c2:	9309      	str	r3, [sp, #36]	; 0x24
 80026c4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80026c6:	4453      	add	r3, sl
 80026c8:	f103 0801 	add.w	r8, r3, #1
 80026cc:	9304      	str	r3, [sp, #16]
 80026ce:	4643      	mov	r3, r8
 80026d0:	2b01      	cmp	r3, #1
 80026d2:	bfb8      	it	lt
 80026d4:	2301      	movlt	r3, #1
 80026d6:	e7ba      	b.n	800264e <_dtoa_r+0x24e>
 80026d8:	2300      	movs	r3, #0
 80026da:	e7b2      	b.n	8002642 <_dtoa_r+0x242>
 80026dc:	2300      	movs	r3, #0
 80026de:	e7f0      	b.n	80026c2 <_dtoa_r+0x2c2>
 80026e0:	2501      	movs	r5, #1
 80026e2:	2300      	movs	r3, #0
 80026e4:	9509      	str	r5, [sp, #36]	; 0x24
 80026e6:	931e      	str	r3, [sp, #120]	; 0x78
 80026e8:	f04f 33ff 	mov.w	r3, #4294967295
 80026ec:	2200      	movs	r2, #0
 80026ee:	9304      	str	r3, [sp, #16]
 80026f0:	4698      	mov	r8, r3
 80026f2:	2312      	movs	r3, #18
 80026f4:	921f      	str	r2, [sp, #124]	; 0x7c
 80026f6:	e7aa      	b.n	800264e <_dtoa_r+0x24e>
 80026f8:	2301      	movs	r3, #1
 80026fa:	9309      	str	r3, [sp, #36]	; 0x24
 80026fc:	e7f4      	b.n	80026e8 <_dtoa_r+0x2e8>
 80026fe:	bf00      	nop
 8002700:	636f4361 	.word	0x636f4361
 8002704:	3fd287a7 	.word	0x3fd287a7
 8002708:	8b60c8b3 	.word	0x8b60c8b3
 800270c:	3fc68a28 	.word	0x3fc68a28
 8002710:	509f79fb 	.word	0x509f79fb
 8002714:	3fd34413 	.word	0x3fd34413
 8002718:	7ff00000 	.word	0x7ff00000
 800271c:	08003b2b 	.word	0x08003b2b
 8002720:	08003b22 	.word	0x08003b22
 8002724:	08003aff 	.word	0x08003aff
 8002728:	3ff80000 	.word	0x3ff80000
 800272c:	08003b58 	.word	0x08003b58
 8002730:	08003b30 	.word	0x08003b30
 8002734:	2301      	movs	r3, #1
 8002736:	9304      	str	r3, [sp, #16]
 8002738:	4698      	mov	r8, r3
 800273a:	461a      	mov	r2, r3
 800273c:	e7da      	b.n	80026f4 <_dtoa_r+0x2f4>
 800273e:	3101      	adds	r1, #1
 8002740:	6071      	str	r1, [r6, #4]
 8002742:	0052      	lsls	r2, r2, #1
 8002744:	e787      	b.n	8002656 <_dtoa_r+0x256>
 8002746:	07f1      	lsls	r1, r6, #31
 8002748:	d508      	bpl.n	800275c <_dtoa_r+0x35c>
 800274a:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 800274e:	e9d7 2300 	ldrd	r2, r3, [r7]
 8002752:	f7fd fec1 	bl	80004d8 <__aeabi_dmul>
 8002756:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 800275a:	3501      	adds	r5, #1
 800275c:	1076      	asrs	r6, r6, #1
 800275e:	3708      	adds	r7, #8
 8002760:	2e00      	cmp	r6, #0
 8002762:	d1f0      	bne.n	8002746 <_dtoa_r+0x346>
 8002764:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8002768:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800276c:	f7fd ffde 	bl	800072c <__aeabi_ddiv>
 8002770:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002774:	e01b      	b.n	80027ae <_dtoa_r+0x3ae>
 8002776:	2502      	movs	r5, #2
 8002778:	e7a0      	b.n	80026bc <_dtoa_r+0x2bc>
 800277a:	f000 80a4 	beq.w	80028c6 <_dtoa_r+0x4c6>
 800277e:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 8002782:	f1ca 0600 	rsb	r6, sl, #0
 8002786:	4ba0      	ldr	r3, [pc, #640]	; (8002a08 <_dtoa_r+0x608>)
 8002788:	f006 020f 	and.w	r2, r6, #15
 800278c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8002790:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002794:	f7fd fea0 	bl	80004d8 <__aeabi_dmul>
 8002798:	2502      	movs	r5, #2
 800279a:	2300      	movs	r3, #0
 800279c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80027a0:	4f9a      	ldr	r7, [pc, #616]	; (8002a0c <_dtoa_r+0x60c>)
 80027a2:	1136      	asrs	r6, r6, #4
 80027a4:	2e00      	cmp	r6, #0
 80027a6:	f040 8083 	bne.w	80028b0 <_dtoa_r+0x4b0>
 80027aa:	2b00      	cmp	r3, #0
 80027ac:	d1e0      	bne.n	8002770 <_dtoa_r+0x370>
 80027ae:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80027b0:	2b00      	cmp	r3, #0
 80027b2:	f000 808a 	beq.w	80028ca <_dtoa_r+0x4ca>
 80027b6:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80027ba:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 80027be:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 80027c2:	2200      	movs	r2, #0
 80027c4:	4b92      	ldr	r3, [pc, #584]	; (8002a10 <_dtoa_r+0x610>)
 80027c6:	f7fe f8f9 	bl	80009bc <__aeabi_dcmplt>
 80027ca:	2800      	cmp	r0, #0
 80027cc:	d07d      	beq.n	80028ca <_dtoa_r+0x4ca>
 80027ce:	f1b8 0f00 	cmp.w	r8, #0
 80027d2:	d07a      	beq.n	80028ca <_dtoa_r+0x4ca>
 80027d4:	9b04      	ldr	r3, [sp, #16]
 80027d6:	2b00      	cmp	r3, #0
 80027d8:	dd36      	ble.n	8002848 <_dtoa_r+0x448>
 80027da:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 80027de:	2200      	movs	r2, #0
 80027e0:	4b8c      	ldr	r3, [pc, #560]	; (8002a14 <_dtoa_r+0x614>)
 80027e2:	f7fd fe79 	bl	80004d8 <__aeabi_dmul>
 80027e6:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80027ea:	9e04      	ldr	r6, [sp, #16]
 80027ec:	f10a 37ff 	add.w	r7, sl, #4294967295
 80027f0:	3501      	adds	r5, #1
 80027f2:	4628      	mov	r0, r5
 80027f4:	f7fd fe06 	bl	8000404 <__aeabi_i2d>
 80027f8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80027fc:	f7fd fe6c 	bl	80004d8 <__aeabi_dmul>
 8002800:	2200      	movs	r2, #0
 8002802:	4b85      	ldr	r3, [pc, #532]	; (8002a18 <_dtoa_r+0x618>)
 8002804:	f7fd fcb2 	bl	800016c <__adddf3>
 8002808:	f1a1 7550 	sub.w	r5, r1, #54525952	; 0x3400000
 800280c:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 8002810:	950b      	str	r5, [sp, #44]	; 0x2c
 8002812:	2e00      	cmp	r6, #0
 8002814:	d15c      	bne.n	80028d0 <_dtoa_r+0x4d0>
 8002816:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800281a:	2200      	movs	r2, #0
 800281c:	4b7f      	ldr	r3, [pc, #508]	; (8002a1c <_dtoa_r+0x61c>)
 800281e:	f7fd fca3 	bl	8000168 <__aeabi_dsub>
 8002822:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8002824:	462b      	mov	r3, r5
 8002826:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800282a:	f7fe f8e5 	bl	80009f8 <__aeabi_dcmpgt>
 800282e:	2800      	cmp	r0, #0
 8002830:	f040 8281 	bne.w	8002d36 <_dtoa_r+0x936>
 8002834:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002838:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800283a:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
 800283e:	f7fe f8bd 	bl	80009bc <__aeabi_dcmplt>
 8002842:	2800      	cmp	r0, #0
 8002844:	f040 8275 	bne.w	8002d32 <_dtoa_r+0x932>
 8002848:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
 800284c:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8002850:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8002852:	2b00      	cmp	r3, #0
 8002854:	f2c0 814b 	blt.w	8002aee <_dtoa_r+0x6ee>
 8002858:	f1ba 0f0e 	cmp.w	sl, #14
 800285c:	f300 8147 	bgt.w	8002aee <_dtoa_r+0x6ee>
 8002860:	4b69      	ldr	r3, [pc, #420]	; (8002a08 <_dtoa_r+0x608>)
 8002862:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 8002866:	e9d3 2300 	ldrd	r2, r3, [r3]
 800286a:	e9cd 2304 	strd	r2, r3, [sp, #16]
 800286e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8002870:	2b00      	cmp	r3, #0
 8002872:	f280 80d7 	bge.w	8002a24 <_dtoa_r+0x624>
 8002876:	f1b8 0f00 	cmp.w	r8, #0
 800287a:	f300 80d3 	bgt.w	8002a24 <_dtoa_r+0x624>
 800287e:	f040 8257 	bne.w	8002d30 <_dtoa_r+0x930>
 8002882:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002886:	2200      	movs	r2, #0
 8002888:	4b64      	ldr	r3, [pc, #400]	; (8002a1c <_dtoa_r+0x61c>)
 800288a:	f7fd fe25 	bl	80004d8 <__aeabi_dmul>
 800288e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002892:	f7fe f8a7 	bl	80009e4 <__aeabi_dcmpge>
 8002896:	4646      	mov	r6, r8
 8002898:	4647      	mov	r7, r8
 800289a:	2800      	cmp	r0, #0
 800289c:	f040 822d 	bne.w	8002cfa <_dtoa_r+0x8fa>
 80028a0:	9b06      	ldr	r3, [sp, #24]
 80028a2:	9a06      	ldr	r2, [sp, #24]
 80028a4:	1c5d      	adds	r5, r3, #1
 80028a6:	2331      	movs	r3, #49	; 0x31
 80028a8:	f10a 0a01 	add.w	sl, sl, #1
 80028ac:	7013      	strb	r3, [r2, #0]
 80028ae:	e228      	b.n	8002d02 <_dtoa_r+0x902>
 80028b0:	07f2      	lsls	r2, r6, #31
 80028b2:	d505      	bpl.n	80028c0 <_dtoa_r+0x4c0>
 80028b4:	e9d7 2300 	ldrd	r2, r3, [r7]
 80028b8:	f7fd fe0e 	bl	80004d8 <__aeabi_dmul>
 80028bc:	2301      	movs	r3, #1
 80028be:	3501      	adds	r5, #1
 80028c0:	1076      	asrs	r6, r6, #1
 80028c2:	3708      	adds	r7, #8
 80028c4:	e76e      	b.n	80027a4 <_dtoa_r+0x3a4>
 80028c6:	2502      	movs	r5, #2
 80028c8:	e771      	b.n	80027ae <_dtoa_r+0x3ae>
 80028ca:	4657      	mov	r7, sl
 80028cc:	4646      	mov	r6, r8
 80028ce:	e790      	b.n	80027f2 <_dtoa_r+0x3f2>
 80028d0:	4b4d      	ldr	r3, [pc, #308]	; (8002a08 <_dtoa_r+0x608>)
 80028d2:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 80028d6:	e953 0102 	ldrd	r0, r1, [r3, #-8]
 80028da:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80028dc:	2b00      	cmp	r3, #0
 80028de:	d048      	beq.n	8002972 <_dtoa_r+0x572>
 80028e0:	4602      	mov	r2, r0
 80028e2:	460b      	mov	r3, r1
 80028e4:	2000      	movs	r0, #0
 80028e6:	494e      	ldr	r1, [pc, #312]	; (8002a20 <_dtoa_r+0x620>)
 80028e8:	f7fd ff20 	bl	800072c <__aeabi_ddiv>
 80028ec:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 80028f0:	f7fd fc3a 	bl	8000168 <__aeabi_dsub>
 80028f4:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 80028f8:	9d06      	ldr	r5, [sp, #24]
 80028fa:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80028fe:	f7fe f89b 	bl	8000a38 <__aeabi_d2iz>
 8002902:	9011      	str	r0, [sp, #68]	; 0x44
 8002904:	f7fd fd7e 	bl	8000404 <__aeabi_i2d>
 8002908:	4602      	mov	r2, r0
 800290a:	460b      	mov	r3, r1
 800290c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002910:	f7fd fc2a 	bl	8000168 <__aeabi_dsub>
 8002914:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8002916:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800291a:	3330      	adds	r3, #48	; 0x30
 800291c:	f805 3b01 	strb.w	r3, [r5], #1
 8002920:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8002924:	f7fe f84a 	bl	80009bc <__aeabi_dcmplt>
 8002928:	2800      	cmp	r0, #0
 800292a:	d163      	bne.n	80029f4 <_dtoa_r+0x5f4>
 800292c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002930:	2000      	movs	r0, #0
 8002932:	4937      	ldr	r1, [pc, #220]	; (8002a10 <_dtoa_r+0x610>)
 8002934:	f7fd fc18 	bl	8000168 <__aeabi_dsub>
 8002938:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800293c:	f7fe f83e 	bl	80009bc <__aeabi_dcmplt>
 8002940:	2800      	cmp	r0, #0
 8002942:	f040 80b5 	bne.w	8002ab0 <_dtoa_r+0x6b0>
 8002946:	9b06      	ldr	r3, [sp, #24]
 8002948:	1aeb      	subs	r3, r5, r3
 800294a:	429e      	cmp	r6, r3
 800294c:	f77f af7c 	ble.w	8002848 <_dtoa_r+0x448>
 8002950:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8002954:	2200      	movs	r2, #0
 8002956:	4b2f      	ldr	r3, [pc, #188]	; (8002a14 <_dtoa_r+0x614>)
 8002958:	f7fd fdbe 	bl	80004d8 <__aeabi_dmul>
 800295c:	2200      	movs	r2, #0
 800295e:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 8002962:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002966:	4b2b      	ldr	r3, [pc, #172]	; (8002a14 <_dtoa_r+0x614>)
 8002968:	f7fd fdb6 	bl	80004d8 <__aeabi_dmul>
 800296c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002970:	e7c3      	b.n	80028fa <_dtoa_r+0x4fa>
 8002972:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8002976:	f7fd fdaf 	bl	80004d8 <__aeabi_dmul>
 800297a:	9b06      	ldr	r3, [sp, #24]
 800297c:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 8002980:	199d      	adds	r5, r3, r6
 8002982:	461e      	mov	r6, r3
 8002984:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002988:	f7fe f856 	bl	8000a38 <__aeabi_d2iz>
 800298c:	9011      	str	r0, [sp, #68]	; 0x44
 800298e:	f7fd fd39 	bl	8000404 <__aeabi_i2d>
 8002992:	4602      	mov	r2, r0
 8002994:	460b      	mov	r3, r1
 8002996:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800299a:	f7fd fbe5 	bl	8000168 <__aeabi_dsub>
 800299e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80029a0:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80029a4:	3330      	adds	r3, #48	; 0x30
 80029a6:	f806 3b01 	strb.w	r3, [r6], #1
 80029aa:	42ae      	cmp	r6, r5
 80029ac:	f04f 0200 	mov.w	r2, #0
 80029b0:	d124      	bne.n	80029fc <_dtoa_r+0x5fc>
 80029b2:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 80029b6:	4b1a      	ldr	r3, [pc, #104]	; (8002a20 <_dtoa_r+0x620>)
 80029b8:	f7fd fbd8 	bl	800016c <__adddf3>
 80029bc:	4602      	mov	r2, r0
 80029be:	460b      	mov	r3, r1
 80029c0:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80029c4:	f7fe f818 	bl	80009f8 <__aeabi_dcmpgt>
 80029c8:	2800      	cmp	r0, #0
 80029ca:	d171      	bne.n	8002ab0 <_dtoa_r+0x6b0>
 80029cc:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 80029d0:	2000      	movs	r0, #0
 80029d2:	4913      	ldr	r1, [pc, #76]	; (8002a20 <_dtoa_r+0x620>)
 80029d4:	f7fd fbc8 	bl	8000168 <__aeabi_dsub>
 80029d8:	4602      	mov	r2, r0
 80029da:	460b      	mov	r3, r1
 80029dc:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80029e0:	f7fd ffec 	bl	80009bc <__aeabi_dcmplt>
 80029e4:	2800      	cmp	r0, #0
 80029e6:	f43f af2f 	beq.w	8002848 <_dtoa_r+0x448>
 80029ea:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 80029ee:	1e6a      	subs	r2, r5, #1
 80029f0:	2b30      	cmp	r3, #48	; 0x30
 80029f2:	d001      	beq.n	80029f8 <_dtoa_r+0x5f8>
 80029f4:	46ba      	mov	sl, r7
 80029f6:	e04a      	b.n	8002a8e <_dtoa_r+0x68e>
 80029f8:	4615      	mov	r5, r2
 80029fa:	e7f6      	b.n	80029ea <_dtoa_r+0x5ea>
 80029fc:	4b05      	ldr	r3, [pc, #20]	; (8002a14 <_dtoa_r+0x614>)
 80029fe:	f7fd fd6b 	bl	80004d8 <__aeabi_dmul>
 8002a02:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002a06:	e7bd      	b.n	8002984 <_dtoa_r+0x584>
 8002a08:	08003b58 	.word	0x08003b58
 8002a0c:	08003b30 	.word	0x08003b30
 8002a10:	3ff00000 	.word	0x3ff00000
 8002a14:	40240000 	.word	0x40240000
 8002a18:	401c0000 	.word	0x401c0000
 8002a1c:	40140000 	.word	0x40140000
 8002a20:	3fe00000 	.word	0x3fe00000
 8002a24:	9d06      	ldr	r5, [sp, #24]
 8002a26:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 8002a2a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002a2e:	4630      	mov	r0, r6
 8002a30:	4639      	mov	r1, r7
 8002a32:	f7fd fe7b 	bl	800072c <__aeabi_ddiv>
 8002a36:	f7fd ffff 	bl	8000a38 <__aeabi_d2iz>
 8002a3a:	4681      	mov	r9, r0
 8002a3c:	f7fd fce2 	bl	8000404 <__aeabi_i2d>
 8002a40:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002a44:	f7fd fd48 	bl	80004d8 <__aeabi_dmul>
 8002a48:	4602      	mov	r2, r0
 8002a4a:	460b      	mov	r3, r1
 8002a4c:	4630      	mov	r0, r6
 8002a4e:	4639      	mov	r1, r7
 8002a50:	f7fd fb8a 	bl	8000168 <__aeabi_dsub>
 8002a54:	f109 0630 	add.w	r6, r9, #48	; 0x30
 8002a58:	f805 6b01 	strb.w	r6, [r5], #1
 8002a5c:	9e06      	ldr	r6, [sp, #24]
 8002a5e:	4602      	mov	r2, r0
 8002a60:	1bae      	subs	r6, r5, r6
 8002a62:	45b0      	cmp	r8, r6
 8002a64:	460b      	mov	r3, r1
 8002a66:	d135      	bne.n	8002ad4 <_dtoa_r+0x6d4>
 8002a68:	f7fd fb80 	bl	800016c <__adddf3>
 8002a6c:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002a70:	4606      	mov	r6, r0
 8002a72:	460f      	mov	r7, r1
 8002a74:	f7fd ffc0 	bl	80009f8 <__aeabi_dcmpgt>
 8002a78:	b9c8      	cbnz	r0, 8002aae <_dtoa_r+0x6ae>
 8002a7a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002a7e:	4630      	mov	r0, r6
 8002a80:	4639      	mov	r1, r7
 8002a82:	f7fd ff91 	bl	80009a8 <__aeabi_dcmpeq>
 8002a86:	b110      	cbz	r0, 8002a8e <_dtoa_r+0x68e>
 8002a88:	f019 0f01 	tst.w	r9, #1
 8002a8c:	d10f      	bne.n	8002aae <_dtoa_r+0x6ae>
 8002a8e:	4659      	mov	r1, fp
 8002a90:	4620      	mov	r0, r4
 8002a92:	f000 facc 	bl	800302e <_Bfree>
 8002a96:	2300      	movs	r3, #0
 8002a98:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8002a9a:	702b      	strb	r3, [r5, #0]
 8002a9c:	f10a 0301 	add.w	r3, sl, #1
 8002aa0:	6013      	str	r3, [r2, #0]
 8002aa2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8002aa4:	2b00      	cmp	r3, #0
 8002aa6:	f43f acf3 	beq.w	8002490 <_dtoa_r+0x90>
 8002aaa:	601d      	str	r5, [r3, #0]
 8002aac:	e4f0      	b.n	8002490 <_dtoa_r+0x90>
 8002aae:	4657      	mov	r7, sl
 8002ab0:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 8002ab4:	1e6b      	subs	r3, r5, #1
 8002ab6:	2a39      	cmp	r2, #57	; 0x39
 8002ab8:	d106      	bne.n	8002ac8 <_dtoa_r+0x6c8>
 8002aba:	9a06      	ldr	r2, [sp, #24]
 8002abc:	429a      	cmp	r2, r3
 8002abe:	d107      	bne.n	8002ad0 <_dtoa_r+0x6d0>
 8002ac0:	2330      	movs	r3, #48	; 0x30
 8002ac2:	7013      	strb	r3, [r2, #0]
 8002ac4:	4613      	mov	r3, r2
 8002ac6:	3701      	adds	r7, #1
 8002ac8:	781a      	ldrb	r2, [r3, #0]
 8002aca:	3201      	adds	r2, #1
 8002acc:	701a      	strb	r2, [r3, #0]
 8002ace:	e791      	b.n	80029f4 <_dtoa_r+0x5f4>
 8002ad0:	461d      	mov	r5, r3
 8002ad2:	e7ed      	b.n	8002ab0 <_dtoa_r+0x6b0>
 8002ad4:	2200      	movs	r2, #0
 8002ad6:	4b99      	ldr	r3, [pc, #612]	; (8002d3c <_dtoa_r+0x93c>)
 8002ad8:	f7fd fcfe 	bl	80004d8 <__aeabi_dmul>
 8002adc:	2200      	movs	r2, #0
 8002ade:	2300      	movs	r3, #0
 8002ae0:	4606      	mov	r6, r0
 8002ae2:	460f      	mov	r7, r1
 8002ae4:	f7fd ff60 	bl	80009a8 <__aeabi_dcmpeq>
 8002ae8:	2800      	cmp	r0, #0
 8002aea:	d09e      	beq.n	8002a2a <_dtoa_r+0x62a>
 8002aec:	e7cf      	b.n	8002a8e <_dtoa_r+0x68e>
 8002aee:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8002af0:	2a00      	cmp	r2, #0
 8002af2:	f000 8088 	beq.w	8002c06 <_dtoa_r+0x806>
 8002af6:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8002af8:	2a01      	cmp	r2, #1
 8002afa:	dc6d      	bgt.n	8002bd8 <_dtoa_r+0x7d8>
 8002afc:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8002afe:	2a00      	cmp	r2, #0
 8002b00:	d066      	beq.n	8002bd0 <_dtoa_r+0x7d0>
 8002b02:	f203 4333 	addw	r3, r3, #1075	; 0x433
 8002b06:	464d      	mov	r5, r9
 8002b08:	9e08      	ldr	r6, [sp, #32]
 8002b0a:	9a07      	ldr	r2, [sp, #28]
 8002b0c:	2101      	movs	r1, #1
 8002b0e:	441a      	add	r2, r3
 8002b10:	4620      	mov	r0, r4
 8002b12:	4499      	add	r9, r3
 8002b14:	9207      	str	r2, [sp, #28]
 8002b16:	f000 fb2a 	bl	800316e <__i2b>
 8002b1a:	4607      	mov	r7, r0
 8002b1c:	2d00      	cmp	r5, #0
 8002b1e:	dd0b      	ble.n	8002b38 <_dtoa_r+0x738>
 8002b20:	9b07      	ldr	r3, [sp, #28]
 8002b22:	2b00      	cmp	r3, #0
 8002b24:	dd08      	ble.n	8002b38 <_dtoa_r+0x738>
 8002b26:	42ab      	cmp	r3, r5
 8002b28:	bfa8      	it	ge
 8002b2a:	462b      	movge	r3, r5
 8002b2c:	9a07      	ldr	r2, [sp, #28]
 8002b2e:	eba9 0903 	sub.w	r9, r9, r3
 8002b32:	1aed      	subs	r5, r5, r3
 8002b34:	1ad3      	subs	r3, r2, r3
 8002b36:	9307      	str	r3, [sp, #28]
 8002b38:	9b08      	ldr	r3, [sp, #32]
 8002b3a:	b1eb      	cbz	r3, 8002b78 <_dtoa_r+0x778>
 8002b3c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002b3e:	2b00      	cmp	r3, #0
 8002b40:	d065      	beq.n	8002c0e <_dtoa_r+0x80e>
 8002b42:	b18e      	cbz	r6, 8002b68 <_dtoa_r+0x768>
 8002b44:	4639      	mov	r1, r7
 8002b46:	4632      	mov	r2, r6
 8002b48:	4620      	mov	r0, r4
 8002b4a:	f000 fbaf 	bl	80032ac <__pow5mult>
 8002b4e:	465a      	mov	r2, fp
 8002b50:	4601      	mov	r1, r0
 8002b52:	4607      	mov	r7, r0
 8002b54:	4620      	mov	r0, r4
 8002b56:	f000 fb13 	bl	8003180 <__multiply>
 8002b5a:	4659      	mov	r1, fp
 8002b5c:	900a      	str	r0, [sp, #40]	; 0x28
 8002b5e:	4620      	mov	r0, r4
 8002b60:	f000 fa65 	bl	800302e <_Bfree>
 8002b64:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002b66:	469b      	mov	fp, r3
 8002b68:	9b08      	ldr	r3, [sp, #32]
 8002b6a:	1b9a      	subs	r2, r3, r6
 8002b6c:	d004      	beq.n	8002b78 <_dtoa_r+0x778>
 8002b6e:	4659      	mov	r1, fp
 8002b70:	4620      	mov	r0, r4
 8002b72:	f000 fb9b 	bl	80032ac <__pow5mult>
 8002b76:	4683      	mov	fp, r0
 8002b78:	2101      	movs	r1, #1
 8002b7a:	4620      	mov	r0, r4
 8002b7c:	f000 faf7 	bl	800316e <__i2b>
 8002b80:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8002b82:	4606      	mov	r6, r0
 8002b84:	2b00      	cmp	r3, #0
 8002b86:	f000 81c6 	beq.w	8002f16 <_dtoa_r+0xb16>
 8002b8a:	461a      	mov	r2, r3
 8002b8c:	4601      	mov	r1, r0
 8002b8e:	4620      	mov	r0, r4
 8002b90:	f000 fb8c 	bl	80032ac <__pow5mult>
 8002b94:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8002b96:	4606      	mov	r6, r0
 8002b98:	2b01      	cmp	r3, #1
 8002b9a:	dc3e      	bgt.n	8002c1a <_dtoa_r+0x81a>
 8002b9c:	9b02      	ldr	r3, [sp, #8]
 8002b9e:	2b00      	cmp	r3, #0
 8002ba0:	d137      	bne.n	8002c12 <_dtoa_r+0x812>
 8002ba2:	9b03      	ldr	r3, [sp, #12]
 8002ba4:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002ba8:	2b00      	cmp	r3, #0
 8002baa:	d134      	bne.n	8002c16 <_dtoa_r+0x816>
 8002bac:	9b03      	ldr	r3, [sp, #12]
 8002bae:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8002bb2:	0d1b      	lsrs	r3, r3, #20
 8002bb4:	051b      	lsls	r3, r3, #20
 8002bb6:	b12b      	cbz	r3, 8002bc4 <_dtoa_r+0x7c4>
 8002bb8:	9b07      	ldr	r3, [sp, #28]
 8002bba:	f109 0901 	add.w	r9, r9, #1
 8002bbe:	3301      	adds	r3, #1
 8002bc0:	9307      	str	r3, [sp, #28]
 8002bc2:	2301      	movs	r3, #1
 8002bc4:	9308      	str	r3, [sp, #32]
 8002bc6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8002bc8:	2b00      	cmp	r3, #0
 8002bca:	d128      	bne.n	8002c1e <_dtoa_r+0x81e>
 8002bcc:	2001      	movs	r0, #1
 8002bce:	e02e      	b.n	8002c2e <_dtoa_r+0x82e>
 8002bd0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8002bd2:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 8002bd6:	e796      	b.n	8002b06 <_dtoa_r+0x706>
 8002bd8:	9b08      	ldr	r3, [sp, #32]
 8002bda:	f108 36ff 	add.w	r6, r8, #4294967295
 8002bde:	42b3      	cmp	r3, r6
 8002be0:	bfb7      	itett	lt
 8002be2:	9b08      	ldrlt	r3, [sp, #32]
 8002be4:	1b9e      	subge	r6, r3, r6
 8002be6:	1af2      	sublt	r2, r6, r3
 8002be8:	9b0c      	ldrlt	r3, [sp, #48]	; 0x30
 8002bea:	bfbf      	itttt	lt
 8002bec:	9608      	strlt	r6, [sp, #32]
 8002bee:	189b      	addlt	r3, r3, r2
 8002bf0:	930c      	strlt	r3, [sp, #48]	; 0x30
 8002bf2:	2600      	movlt	r6, #0
 8002bf4:	f1b8 0f00 	cmp.w	r8, #0
 8002bf8:	bfb9      	ittee	lt
 8002bfa:	eba9 0508 	sublt.w	r5, r9, r8
 8002bfe:	2300      	movlt	r3, #0
 8002c00:	464d      	movge	r5, r9
 8002c02:	4643      	movge	r3, r8
 8002c04:	e781      	b.n	8002b0a <_dtoa_r+0x70a>
 8002c06:	9e08      	ldr	r6, [sp, #32]
 8002c08:	464d      	mov	r5, r9
 8002c0a:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8002c0c:	e786      	b.n	8002b1c <_dtoa_r+0x71c>
 8002c0e:	9a08      	ldr	r2, [sp, #32]
 8002c10:	e7ad      	b.n	8002b6e <_dtoa_r+0x76e>
 8002c12:	2300      	movs	r3, #0
 8002c14:	e7d6      	b.n	8002bc4 <_dtoa_r+0x7c4>
 8002c16:	9b02      	ldr	r3, [sp, #8]
 8002c18:	e7d4      	b.n	8002bc4 <_dtoa_r+0x7c4>
 8002c1a:	2300      	movs	r3, #0
 8002c1c:	9308      	str	r3, [sp, #32]
 8002c1e:	6933      	ldr	r3, [r6, #16]
 8002c20:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 8002c24:	6918      	ldr	r0, [r3, #16]
 8002c26:	f000 fa54 	bl	80030d2 <__hi0bits>
 8002c2a:	f1c0 0020 	rsb	r0, r0, #32
 8002c2e:	9b07      	ldr	r3, [sp, #28]
 8002c30:	4418      	add	r0, r3
 8002c32:	f010 001f 	ands.w	r0, r0, #31
 8002c36:	d047      	beq.n	8002cc8 <_dtoa_r+0x8c8>
 8002c38:	f1c0 0320 	rsb	r3, r0, #32
 8002c3c:	2b04      	cmp	r3, #4
 8002c3e:	dd3b      	ble.n	8002cb8 <_dtoa_r+0x8b8>
 8002c40:	9b07      	ldr	r3, [sp, #28]
 8002c42:	f1c0 001c 	rsb	r0, r0, #28
 8002c46:	4481      	add	r9, r0
 8002c48:	4405      	add	r5, r0
 8002c4a:	4403      	add	r3, r0
 8002c4c:	9307      	str	r3, [sp, #28]
 8002c4e:	f1b9 0f00 	cmp.w	r9, #0
 8002c52:	dd05      	ble.n	8002c60 <_dtoa_r+0x860>
 8002c54:	4659      	mov	r1, fp
 8002c56:	464a      	mov	r2, r9
 8002c58:	4620      	mov	r0, r4
 8002c5a:	f000 fb75 	bl	8003348 <__lshift>
 8002c5e:	4683      	mov	fp, r0
 8002c60:	9b07      	ldr	r3, [sp, #28]
 8002c62:	2b00      	cmp	r3, #0
 8002c64:	dd05      	ble.n	8002c72 <_dtoa_r+0x872>
 8002c66:	4631      	mov	r1, r6
 8002c68:	461a      	mov	r2, r3
 8002c6a:	4620      	mov	r0, r4
 8002c6c:	f000 fb6c 	bl	8003348 <__lshift>
 8002c70:	4606      	mov	r6, r0
 8002c72:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8002c74:	b353      	cbz	r3, 8002ccc <_dtoa_r+0x8cc>
 8002c76:	4631      	mov	r1, r6
 8002c78:	4658      	mov	r0, fp
 8002c7a:	f000 fbb9 	bl	80033f0 <__mcmp>
 8002c7e:	2800      	cmp	r0, #0
 8002c80:	da24      	bge.n	8002ccc <_dtoa_r+0x8cc>
 8002c82:	2300      	movs	r3, #0
 8002c84:	4659      	mov	r1, fp
 8002c86:	220a      	movs	r2, #10
 8002c88:	4620      	mov	r0, r4
 8002c8a:	f000 f9e7 	bl	800305c <__multadd>
 8002c8e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002c90:	f10a 3aff 	add.w	sl, sl, #4294967295
 8002c94:	4683      	mov	fp, r0
 8002c96:	2b00      	cmp	r3, #0
 8002c98:	f000 8144 	beq.w	8002f24 <_dtoa_r+0xb24>
 8002c9c:	2300      	movs	r3, #0
 8002c9e:	4639      	mov	r1, r7
 8002ca0:	220a      	movs	r2, #10
 8002ca2:	4620      	mov	r0, r4
 8002ca4:	f000 f9da 	bl	800305c <__multadd>
 8002ca8:	9b04      	ldr	r3, [sp, #16]
 8002caa:	4607      	mov	r7, r0
 8002cac:	2b00      	cmp	r3, #0
 8002cae:	dc4d      	bgt.n	8002d4c <_dtoa_r+0x94c>
 8002cb0:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8002cb2:	2b02      	cmp	r3, #2
 8002cb4:	dd4a      	ble.n	8002d4c <_dtoa_r+0x94c>
 8002cb6:	e011      	b.n	8002cdc <_dtoa_r+0x8dc>
 8002cb8:	d0c9      	beq.n	8002c4e <_dtoa_r+0x84e>
 8002cba:	9a07      	ldr	r2, [sp, #28]
 8002cbc:	331c      	adds	r3, #28
 8002cbe:	441a      	add	r2, r3
 8002cc0:	4499      	add	r9, r3
 8002cc2:	441d      	add	r5, r3
 8002cc4:	4613      	mov	r3, r2
 8002cc6:	e7c1      	b.n	8002c4c <_dtoa_r+0x84c>
 8002cc8:	4603      	mov	r3, r0
 8002cca:	e7f6      	b.n	8002cba <_dtoa_r+0x8ba>
 8002ccc:	f1b8 0f00 	cmp.w	r8, #0
 8002cd0:	dc36      	bgt.n	8002d40 <_dtoa_r+0x940>
 8002cd2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8002cd4:	2b02      	cmp	r3, #2
 8002cd6:	dd33      	ble.n	8002d40 <_dtoa_r+0x940>
 8002cd8:	f8cd 8010 	str.w	r8, [sp, #16]
 8002cdc:	9b04      	ldr	r3, [sp, #16]
 8002cde:	b963      	cbnz	r3, 8002cfa <_dtoa_r+0x8fa>
 8002ce0:	4631      	mov	r1, r6
 8002ce2:	2205      	movs	r2, #5
 8002ce4:	4620      	mov	r0, r4
 8002ce6:	f000 f9b9 	bl	800305c <__multadd>
 8002cea:	4601      	mov	r1, r0
 8002cec:	4606      	mov	r6, r0
 8002cee:	4658      	mov	r0, fp
 8002cf0:	f000 fb7e 	bl	80033f0 <__mcmp>
 8002cf4:	2800      	cmp	r0, #0
 8002cf6:	f73f add3 	bgt.w	80028a0 <_dtoa_r+0x4a0>
 8002cfa:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8002cfc:	9d06      	ldr	r5, [sp, #24]
 8002cfe:	ea6f 0a03 	mvn.w	sl, r3
 8002d02:	f04f 0900 	mov.w	r9, #0
 8002d06:	4631      	mov	r1, r6
 8002d08:	4620      	mov	r0, r4
 8002d0a:	f000 f990 	bl	800302e <_Bfree>
 8002d0e:	2f00      	cmp	r7, #0
 8002d10:	f43f aebd 	beq.w	8002a8e <_dtoa_r+0x68e>
 8002d14:	f1b9 0f00 	cmp.w	r9, #0
 8002d18:	d005      	beq.n	8002d26 <_dtoa_r+0x926>
 8002d1a:	45b9      	cmp	r9, r7
 8002d1c:	d003      	beq.n	8002d26 <_dtoa_r+0x926>
 8002d1e:	4649      	mov	r1, r9
 8002d20:	4620      	mov	r0, r4
 8002d22:	f000 f984 	bl	800302e <_Bfree>
 8002d26:	4639      	mov	r1, r7
 8002d28:	4620      	mov	r0, r4
 8002d2a:	f000 f980 	bl	800302e <_Bfree>
 8002d2e:	e6ae      	b.n	8002a8e <_dtoa_r+0x68e>
 8002d30:	2600      	movs	r6, #0
 8002d32:	4637      	mov	r7, r6
 8002d34:	e7e1      	b.n	8002cfa <_dtoa_r+0x8fa>
 8002d36:	46ba      	mov	sl, r7
 8002d38:	4637      	mov	r7, r6
 8002d3a:	e5b1      	b.n	80028a0 <_dtoa_r+0x4a0>
 8002d3c:	40240000 	.word	0x40240000
 8002d40:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002d42:	f8cd 8010 	str.w	r8, [sp, #16]
 8002d46:	2b00      	cmp	r3, #0
 8002d48:	f000 80f3 	beq.w	8002f32 <_dtoa_r+0xb32>
 8002d4c:	2d00      	cmp	r5, #0
 8002d4e:	dd05      	ble.n	8002d5c <_dtoa_r+0x95c>
 8002d50:	4639      	mov	r1, r7
 8002d52:	462a      	mov	r2, r5
 8002d54:	4620      	mov	r0, r4
 8002d56:	f000 faf7 	bl	8003348 <__lshift>
 8002d5a:	4607      	mov	r7, r0
 8002d5c:	9b08      	ldr	r3, [sp, #32]
 8002d5e:	2b00      	cmp	r3, #0
 8002d60:	d04c      	beq.n	8002dfc <_dtoa_r+0x9fc>
 8002d62:	6879      	ldr	r1, [r7, #4]
 8002d64:	4620      	mov	r0, r4
 8002d66:	f000 f92e 	bl	8002fc6 <_Balloc>
 8002d6a:	4605      	mov	r5, r0
 8002d6c:	693a      	ldr	r2, [r7, #16]
 8002d6e:	f107 010c 	add.w	r1, r7, #12
 8002d72:	3202      	adds	r2, #2
 8002d74:	0092      	lsls	r2, r2, #2
 8002d76:	300c      	adds	r0, #12
 8002d78:	f000 f91a 	bl	8002fb0 <memcpy>
 8002d7c:	2201      	movs	r2, #1
 8002d7e:	4629      	mov	r1, r5
 8002d80:	4620      	mov	r0, r4
 8002d82:	f000 fae1 	bl	8003348 <__lshift>
 8002d86:	46b9      	mov	r9, r7
 8002d88:	4607      	mov	r7, r0
 8002d8a:	9b06      	ldr	r3, [sp, #24]
 8002d8c:	9307      	str	r3, [sp, #28]
 8002d8e:	9b02      	ldr	r3, [sp, #8]
 8002d90:	f003 0301 	and.w	r3, r3, #1
 8002d94:	9308      	str	r3, [sp, #32]
 8002d96:	4631      	mov	r1, r6
 8002d98:	4658      	mov	r0, fp
 8002d9a:	f7ff faa3 	bl	80022e4 <quorem>
 8002d9e:	4649      	mov	r1, r9
 8002da0:	4605      	mov	r5, r0
 8002da2:	f100 0830 	add.w	r8, r0, #48	; 0x30
 8002da6:	4658      	mov	r0, fp
 8002da8:	f000 fb22 	bl	80033f0 <__mcmp>
 8002dac:	463a      	mov	r2, r7
 8002dae:	9002      	str	r0, [sp, #8]
 8002db0:	4631      	mov	r1, r6
 8002db2:	4620      	mov	r0, r4
 8002db4:	f000 fb36 	bl	8003424 <__mdiff>
 8002db8:	68c3      	ldr	r3, [r0, #12]
 8002dba:	4602      	mov	r2, r0
 8002dbc:	bb03      	cbnz	r3, 8002e00 <_dtoa_r+0xa00>
 8002dbe:	4601      	mov	r1, r0
 8002dc0:	9009      	str	r0, [sp, #36]	; 0x24
 8002dc2:	4658      	mov	r0, fp
 8002dc4:	f000 fb14 	bl	80033f0 <__mcmp>
 8002dc8:	4603      	mov	r3, r0
 8002dca:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8002dcc:	4611      	mov	r1, r2
 8002dce:	4620      	mov	r0, r4
 8002dd0:	9309      	str	r3, [sp, #36]	; 0x24
 8002dd2:	f000 f92c 	bl	800302e <_Bfree>
 8002dd6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002dd8:	b9a3      	cbnz	r3, 8002e04 <_dtoa_r+0xa04>
 8002dda:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8002ddc:	b992      	cbnz	r2, 8002e04 <_dtoa_r+0xa04>
 8002dde:	9a08      	ldr	r2, [sp, #32]
 8002de0:	b982      	cbnz	r2, 8002e04 <_dtoa_r+0xa04>
 8002de2:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
 8002de6:	d029      	beq.n	8002e3c <_dtoa_r+0xa3c>
 8002de8:	9b02      	ldr	r3, [sp, #8]
 8002dea:	2b00      	cmp	r3, #0
 8002dec:	dd01      	ble.n	8002df2 <_dtoa_r+0x9f2>
 8002dee:	f105 0831 	add.w	r8, r5, #49	; 0x31
 8002df2:	9b07      	ldr	r3, [sp, #28]
 8002df4:	1c5d      	adds	r5, r3, #1
 8002df6:	f883 8000 	strb.w	r8, [r3]
 8002dfa:	e784      	b.n	8002d06 <_dtoa_r+0x906>
 8002dfc:	4638      	mov	r0, r7
 8002dfe:	e7c2      	b.n	8002d86 <_dtoa_r+0x986>
 8002e00:	2301      	movs	r3, #1
 8002e02:	e7e3      	b.n	8002dcc <_dtoa_r+0x9cc>
 8002e04:	9a02      	ldr	r2, [sp, #8]
 8002e06:	2a00      	cmp	r2, #0
 8002e08:	db04      	blt.n	8002e14 <_dtoa_r+0xa14>
 8002e0a:	d123      	bne.n	8002e54 <_dtoa_r+0xa54>
 8002e0c:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8002e0e:	bb0a      	cbnz	r2, 8002e54 <_dtoa_r+0xa54>
 8002e10:	9a08      	ldr	r2, [sp, #32]
 8002e12:	b9fa      	cbnz	r2, 8002e54 <_dtoa_r+0xa54>
 8002e14:	2b00      	cmp	r3, #0
 8002e16:	ddec      	ble.n	8002df2 <_dtoa_r+0x9f2>
 8002e18:	4659      	mov	r1, fp
 8002e1a:	2201      	movs	r2, #1
 8002e1c:	4620      	mov	r0, r4
 8002e1e:	f000 fa93 	bl	8003348 <__lshift>
 8002e22:	4631      	mov	r1, r6
 8002e24:	4683      	mov	fp, r0
 8002e26:	f000 fae3 	bl	80033f0 <__mcmp>
 8002e2a:	2800      	cmp	r0, #0
 8002e2c:	dc03      	bgt.n	8002e36 <_dtoa_r+0xa36>
 8002e2e:	d1e0      	bne.n	8002df2 <_dtoa_r+0x9f2>
 8002e30:	f018 0f01 	tst.w	r8, #1
 8002e34:	d0dd      	beq.n	8002df2 <_dtoa_r+0x9f2>
 8002e36:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
 8002e3a:	d1d8      	bne.n	8002dee <_dtoa_r+0x9ee>
 8002e3c:	9b07      	ldr	r3, [sp, #28]
 8002e3e:	9a07      	ldr	r2, [sp, #28]
 8002e40:	1c5d      	adds	r5, r3, #1
 8002e42:	2339      	movs	r3, #57	; 0x39
 8002e44:	7013      	strb	r3, [r2, #0]
 8002e46:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8002e4a:	1e6a      	subs	r2, r5, #1
 8002e4c:	2b39      	cmp	r3, #57	; 0x39
 8002e4e:	d04d      	beq.n	8002eec <_dtoa_r+0xaec>
 8002e50:	3301      	adds	r3, #1
 8002e52:	e052      	b.n	8002efa <_dtoa_r+0xafa>
 8002e54:	9a07      	ldr	r2, [sp, #28]
 8002e56:	2b00      	cmp	r3, #0
 8002e58:	f102 0501 	add.w	r5, r2, #1
 8002e5c:	dd06      	ble.n	8002e6c <_dtoa_r+0xa6c>
 8002e5e:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
 8002e62:	d0eb      	beq.n	8002e3c <_dtoa_r+0xa3c>
 8002e64:	f108 0801 	add.w	r8, r8, #1
 8002e68:	9b07      	ldr	r3, [sp, #28]
 8002e6a:	e7c4      	b.n	8002df6 <_dtoa_r+0x9f6>
 8002e6c:	9b06      	ldr	r3, [sp, #24]
 8002e6e:	9a04      	ldr	r2, [sp, #16]
 8002e70:	1aeb      	subs	r3, r5, r3
 8002e72:	4293      	cmp	r3, r2
 8002e74:	f805 8c01 	strb.w	r8, [r5, #-1]
 8002e78:	d021      	beq.n	8002ebe <_dtoa_r+0xabe>
 8002e7a:	4659      	mov	r1, fp
 8002e7c:	2300      	movs	r3, #0
 8002e7e:	220a      	movs	r2, #10
 8002e80:	4620      	mov	r0, r4
 8002e82:	f000 f8eb 	bl	800305c <__multadd>
 8002e86:	45b9      	cmp	r9, r7
 8002e88:	4683      	mov	fp, r0
 8002e8a:	f04f 0300 	mov.w	r3, #0
 8002e8e:	f04f 020a 	mov.w	r2, #10
 8002e92:	4649      	mov	r1, r9
 8002e94:	4620      	mov	r0, r4
 8002e96:	d105      	bne.n	8002ea4 <_dtoa_r+0xaa4>
 8002e98:	f000 f8e0 	bl	800305c <__multadd>
 8002e9c:	4681      	mov	r9, r0
 8002e9e:	4607      	mov	r7, r0
 8002ea0:	9507      	str	r5, [sp, #28]
 8002ea2:	e778      	b.n	8002d96 <_dtoa_r+0x996>
 8002ea4:	f000 f8da 	bl	800305c <__multadd>
 8002ea8:	4639      	mov	r1, r7
 8002eaa:	4681      	mov	r9, r0
 8002eac:	2300      	movs	r3, #0
 8002eae:	220a      	movs	r2, #10
 8002eb0:	4620      	mov	r0, r4
 8002eb2:	f000 f8d3 	bl	800305c <__multadd>
 8002eb6:	4607      	mov	r7, r0
 8002eb8:	e7f2      	b.n	8002ea0 <_dtoa_r+0xaa0>
 8002eba:	f04f 0900 	mov.w	r9, #0
 8002ebe:	4659      	mov	r1, fp
 8002ec0:	2201      	movs	r2, #1
 8002ec2:	4620      	mov	r0, r4
 8002ec4:	f000 fa40 	bl	8003348 <__lshift>
 8002ec8:	4631      	mov	r1, r6
 8002eca:	4683      	mov	fp, r0
 8002ecc:	f000 fa90 	bl	80033f0 <__mcmp>
 8002ed0:	2800      	cmp	r0, #0
 8002ed2:	dcb8      	bgt.n	8002e46 <_dtoa_r+0xa46>
 8002ed4:	d102      	bne.n	8002edc <_dtoa_r+0xadc>
 8002ed6:	f018 0f01 	tst.w	r8, #1
 8002eda:	d1b4      	bne.n	8002e46 <_dtoa_r+0xa46>
 8002edc:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8002ee0:	1e6a      	subs	r2, r5, #1
 8002ee2:	2b30      	cmp	r3, #48	; 0x30
 8002ee4:	f47f af0f 	bne.w	8002d06 <_dtoa_r+0x906>
 8002ee8:	4615      	mov	r5, r2
 8002eea:	e7f7      	b.n	8002edc <_dtoa_r+0xadc>
 8002eec:	9b06      	ldr	r3, [sp, #24]
 8002eee:	4293      	cmp	r3, r2
 8002ef0:	d105      	bne.n	8002efe <_dtoa_r+0xafe>
 8002ef2:	2331      	movs	r3, #49	; 0x31
 8002ef4:	9a06      	ldr	r2, [sp, #24]
 8002ef6:	f10a 0a01 	add.w	sl, sl, #1
 8002efa:	7013      	strb	r3, [r2, #0]
 8002efc:	e703      	b.n	8002d06 <_dtoa_r+0x906>
 8002efe:	4615      	mov	r5, r2
 8002f00:	e7a1      	b.n	8002e46 <_dtoa_r+0xa46>
 8002f02:	4b17      	ldr	r3, [pc, #92]	; (8002f60 <_dtoa_r+0xb60>)
 8002f04:	f7ff bae1 	b.w	80024ca <_dtoa_r+0xca>
 8002f08:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8002f0a:	2b00      	cmp	r3, #0
 8002f0c:	f47f aabb 	bne.w	8002486 <_dtoa_r+0x86>
 8002f10:	4b14      	ldr	r3, [pc, #80]	; (8002f64 <_dtoa_r+0xb64>)
 8002f12:	f7ff bada 	b.w	80024ca <_dtoa_r+0xca>
 8002f16:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8002f18:	2b01      	cmp	r3, #1
 8002f1a:	f77f ae3f 	ble.w	8002b9c <_dtoa_r+0x79c>
 8002f1e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8002f20:	9308      	str	r3, [sp, #32]
 8002f22:	e653      	b.n	8002bcc <_dtoa_r+0x7cc>
 8002f24:	9b04      	ldr	r3, [sp, #16]
 8002f26:	2b00      	cmp	r3, #0
 8002f28:	dc03      	bgt.n	8002f32 <_dtoa_r+0xb32>
 8002f2a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8002f2c:	2b02      	cmp	r3, #2
 8002f2e:	f73f aed5 	bgt.w	8002cdc <_dtoa_r+0x8dc>
 8002f32:	9d06      	ldr	r5, [sp, #24]
 8002f34:	4631      	mov	r1, r6
 8002f36:	4658      	mov	r0, fp
 8002f38:	f7ff f9d4 	bl	80022e4 <quorem>
 8002f3c:	9b06      	ldr	r3, [sp, #24]
 8002f3e:	f100 0830 	add.w	r8, r0, #48	; 0x30
 8002f42:	f805 8b01 	strb.w	r8, [r5], #1
 8002f46:	9a04      	ldr	r2, [sp, #16]
 8002f48:	1aeb      	subs	r3, r5, r3
 8002f4a:	429a      	cmp	r2, r3
 8002f4c:	ddb5      	ble.n	8002eba <_dtoa_r+0xaba>
 8002f4e:	4659      	mov	r1, fp
 8002f50:	2300      	movs	r3, #0
 8002f52:	220a      	movs	r2, #10
 8002f54:	4620      	mov	r0, r4
 8002f56:	f000 f881 	bl	800305c <__multadd>
 8002f5a:	4683      	mov	fp, r0
 8002f5c:	e7ea      	b.n	8002f34 <_dtoa_r+0xb34>
 8002f5e:	bf00      	nop
 8002f60:	08003afe 	.word	0x08003afe
 8002f64:	08003b22 	.word	0x08003b22

08002f68 <_localeconv_r>:
 8002f68:	4b04      	ldr	r3, [pc, #16]	; (8002f7c <_localeconv_r+0x14>)
 8002f6a:	681b      	ldr	r3, [r3, #0]
 8002f6c:	6a18      	ldr	r0, [r3, #32]
 8002f6e:	4b04      	ldr	r3, [pc, #16]	; (8002f80 <_localeconv_r+0x18>)
 8002f70:	2800      	cmp	r0, #0
 8002f72:	bf08      	it	eq
 8002f74:	4618      	moveq	r0, r3
 8002f76:	30f0      	adds	r0, #240	; 0xf0
 8002f78:	4770      	bx	lr
 8002f7a:	bf00      	nop
 8002f7c:	20000008 	.word	0x20000008
 8002f80:	2000006c 	.word	0x2000006c

08002f84 <malloc>:
 8002f84:	4b02      	ldr	r3, [pc, #8]	; (8002f90 <malloc+0xc>)
 8002f86:	4601      	mov	r1, r0
 8002f88:	6818      	ldr	r0, [r3, #0]
 8002f8a:	f000 bb53 	b.w	8003634 <_malloc_r>
 8002f8e:	bf00      	nop
 8002f90:	20000008 	.word	0x20000008

08002f94 <memchr>:
 8002f94:	b510      	push	{r4, lr}
 8002f96:	b2c9      	uxtb	r1, r1
 8002f98:	4402      	add	r2, r0
 8002f9a:	4290      	cmp	r0, r2
 8002f9c:	4603      	mov	r3, r0
 8002f9e:	d101      	bne.n	8002fa4 <memchr+0x10>
 8002fa0:	2300      	movs	r3, #0
 8002fa2:	e003      	b.n	8002fac <memchr+0x18>
 8002fa4:	781c      	ldrb	r4, [r3, #0]
 8002fa6:	3001      	adds	r0, #1
 8002fa8:	428c      	cmp	r4, r1
 8002faa:	d1f6      	bne.n	8002f9a <memchr+0x6>
 8002fac:	4618      	mov	r0, r3
 8002fae:	bd10      	pop	{r4, pc}

08002fb0 <memcpy>:
 8002fb0:	b510      	push	{r4, lr}
 8002fb2:	1e43      	subs	r3, r0, #1
 8002fb4:	440a      	add	r2, r1
 8002fb6:	4291      	cmp	r1, r2
 8002fb8:	d100      	bne.n	8002fbc <memcpy+0xc>
 8002fba:	bd10      	pop	{r4, pc}
 8002fbc:	f811 4b01 	ldrb.w	r4, [r1], #1
 8002fc0:	f803 4f01 	strb.w	r4, [r3, #1]!
 8002fc4:	e7f7      	b.n	8002fb6 <memcpy+0x6>

08002fc6 <_Balloc>:
 8002fc6:	b570      	push	{r4, r5, r6, lr}
 8002fc8:	6a45      	ldr	r5, [r0, #36]	; 0x24
 8002fca:	4604      	mov	r4, r0
 8002fcc:	460e      	mov	r6, r1
 8002fce:	b93d      	cbnz	r5, 8002fe0 <_Balloc+0x1a>
 8002fd0:	2010      	movs	r0, #16
 8002fd2:	f7ff ffd7 	bl	8002f84 <malloc>
 8002fd6:	6260      	str	r0, [r4, #36]	; 0x24
 8002fd8:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8002fdc:	6005      	str	r5, [r0, #0]
 8002fde:	60c5      	str	r5, [r0, #12]
 8002fe0:	6a65      	ldr	r5, [r4, #36]	; 0x24
 8002fe2:	68eb      	ldr	r3, [r5, #12]
 8002fe4:	b183      	cbz	r3, 8003008 <_Balloc+0x42>
 8002fe6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002fe8:	68db      	ldr	r3, [r3, #12]
 8002fea:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
 8002fee:	b9b8      	cbnz	r0, 8003020 <_Balloc+0x5a>
 8002ff0:	2101      	movs	r1, #1
 8002ff2:	fa01 f506 	lsl.w	r5, r1, r6
 8002ff6:	1d6a      	adds	r2, r5, #5
 8002ff8:	0092      	lsls	r2, r2, #2
 8002ffa:	4620      	mov	r0, r4
 8002ffc:	f000 fabf 	bl	800357e <_calloc_r>
 8003000:	b160      	cbz	r0, 800301c <_Balloc+0x56>
 8003002:	e9c0 6501 	strd	r6, r5, [r0, #4]
 8003006:	e00e      	b.n	8003026 <_Balloc+0x60>
 8003008:	2221      	movs	r2, #33	; 0x21
 800300a:	2104      	movs	r1, #4
 800300c:	4620      	mov	r0, r4
 800300e:	f000 fab6 	bl	800357e <_calloc_r>
 8003012:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8003014:	60e8      	str	r0, [r5, #12]
 8003016:	68db      	ldr	r3, [r3, #12]
 8003018:	2b00      	cmp	r3, #0
 800301a:	d1e4      	bne.n	8002fe6 <_Balloc+0x20>
 800301c:	2000      	movs	r0, #0
 800301e:	bd70      	pop	{r4, r5, r6, pc}
 8003020:	6802      	ldr	r2, [r0, #0]
 8003022:	f843 2026 	str.w	r2, [r3, r6, lsl #2]
 8003026:	2300      	movs	r3, #0
 8003028:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800302c:	e7f7      	b.n	800301e <_Balloc+0x58>

0800302e <_Bfree>:
 800302e:	b570      	push	{r4, r5, r6, lr}
 8003030:	6a44      	ldr	r4, [r0, #36]	; 0x24
 8003032:	4606      	mov	r6, r0
 8003034:	460d      	mov	r5, r1
 8003036:	b93c      	cbnz	r4, 8003048 <_Bfree+0x1a>
 8003038:	2010      	movs	r0, #16
 800303a:	f7ff ffa3 	bl	8002f84 <malloc>
 800303e:	6270      	str	r0, [r6, #36]	; 0x24
 8003040:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8003044:	6004      	str	r4, [r0, #0]
 8003046:	60c4      	str	r4, [r0, #12]
 8003048:	b13d      	cbz	r5, 800305a <_Bfree+0x2c>
 800304a:	6a73      	ldr	r3, [r6, #36]	; 0x24
 800304c:	686a      	ldr	r2, [r5, #4]
 800304e:	68db      	ldr	r3, [r3, #12]
 8003050:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8003054:	6029      	str	r1, [r5, #0]
 8003056:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
 800305a:	bd70      	pop	{r4, r5, r6, pc}

0800305c <__multadd>:
 800305c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003060:	461f      	mov	r7, r3
 8003062:	4606      	mov	r6, r0
 8003064:	460c      	mov	r4, r1
 8003066:	2300      	movs	r3, #0
 8003068:	690d      	ldr	r5, [r1, #16]
 800306a:	f101 0c14 	add.w	ip, r1, #20
 800306e:	f8dc 0000 	ldr.w	r0, [ip]
 8003072:	3301      	adds	r3, #1
 8003074:	b281      	uxth	r1, r0
 8003076:	fb02 7101 	mla	r1, r2, r1, r7
 800307a:	0c00      	lsrs	r0, r0, #16
 800307c:	0c0f      	lsrs	r7, r1, #16
 800307e:	fb02 7000 	mla	r0, r2, r0, r7
 8003082:	b289      	uxth	r1, r1
 8003084:	eb01 4100 	add.w	r1, r1, r0, lsl #16
 8003088:	429d      	cmp	r5, r3
 800308a:	ea4f 4710 	mov.w	r7, r0, lsr #16
 800308e:	f84c 1b04 	str.w	r1, [ip], #4
 8003092:	dcec      	bgt.n	800306e <__multadd+0x12>
 8003094:	b1d7      	cbz	r7, 80030cc <__multadd+0x70>
 8003096:	68a3      	ldr	r3, [r4, #8]
 8003098:	42ab      	cmp	r3, r5
 800309a:	dc12      	bgt.n	80030c2 <__multadd+0x66>
 800309c:	6861      	ldr	r1, [r4, #4]
 800309e:	4630      	mov	r0, r6
 80030a0:	3101      	adds	r1, #1
 80030a2:	f7ff ff90 	bl	8002fc6 <_Balloc>
 80030a6:	4680      	mov	r8, r0
 80030a8:	6922      	ldr	r2, [r4, #16]
 80030aa:	f104 010c 	add.w	r1, r4, #12
 80030ae:	3202      	adds	r2, #2
 80030b0:	0092      	lsls	r2, r2, #2
 80030b2:	300c      	adds	r0, #12
 80030b4:	f7ff ff7c 	bl	8002fb0 <memcpy>
 80030b8:	4621      	mov	r1, r4
 80030ba:	4630      	mov	r0, r6
 80030bc:	f7ff ffb7 	bl	800302e <_Bfree>
 80030c0:	4644      	mov	r4, r8
 80030c2:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 80030c6:	3501      	adds	r5, #1
 80030c8:	615f      	str	r7, [r3, #20]
 80030ca:	6125      	str	r5, [r4, #16]
 80030cc:	4620      	mov	r0, r4
 80030ce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080030d2 <__hi0bits>:
 80030d2:	0c02      	lsrs	r2, r0, #16
 80030d4:	0412      	lsls	r2, r2, #16
 80030d6:	4603      	mov	r3, r0
 80030d8:	b9b2      	cbnz	r2, 8003108 <__hi0bits+0x36>
 80030da:	0403      	lsls	r3, r0, #16
 80030dc:	2010      	movs	r0, #16
 80030de:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 80030e2:	bf04      	itt	eq
 80030e4:	021b      	lsleq	r3, r3, #8
 80030e6:	3008      	addeq	r0, #8
 80030e8:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 80030ec:	bf04      	itt	eq
 80030ee:	011b      	lsleq	r3, r3, #4
 80030f0:	3004      	addeq	r0, #4
 80030f2:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 80030f6:	bf04      	itt	eq
 80030f8:	009b      	lsleq	r3, r3, #2
 80030fa:	3002      	addeq	r0, #2
 80030fc:	2b00      	cmp	r3, #0
 80030fe:	db06      	blt.n	800310e <__hi0bits+0x3c>
 8003100:	005b      	lsls	r3, r3, #1
 8003102:	d503      	bpl.n	800310c <__hi0bits+0x3a>
 8003104:	3001      	adds	r0, #1
 8003106:	4770      	bx	lr
 8003108:	2000      	movs	r0, #0
 800310a:	e7e8      	b.n	80030de <__hi0bits+0xc>
 800310c:	2020      	movs	r0, #32
 800310e:	4770      	bx	lr

08003110 <__lo0bits>:
 8003110:	6803      	ldr	r3, [r0, #0]
 8003112:	4601      	mov	r1, r0
 8003114:	f013 0207 	ands.w	r2, r3, #7
 8003118:	d00b      	beq.n	8003132 <__lo0bits+0x22>
 800311a:	07da      	lsls	r2, r3, #31
 800311c:	d423      	bmi.n	8003166 <__lo0bits+0x56>
 800311e:	0798      	lsls	r0, r3, #30
 8003120:	bf49      	itett	mi
 8003122:	085b      	lsrmi	r3, r3, #1
 8003124:	089b      	lsrpl	r3, r3, #2
 8003126:	2001      	movmi	r0, #1
 8003128:	600b      	strmi	r3, [r1, #0]
 800312a:	bf5c      	itt	pl
 800312c:	600b      	strpl	r3, [r1, #0]
 800312e:	2002      	movpl	r0, #2
 8003130:	4770      	bx	lr
 8003132:	b298      	uxth	r0, r3
 8003134:	b9a8      	cbnz	r0, 8003162 <__lo0bits+0x52>
 8003136:	2010      	movs	r0, #16
 8003138:	0c1b      	lsrs	r3, r3, #16
 800313a:	f013 0fff 	tst.w	r3, #255	; 0xff
 800313e:	bf04      	itt	eq
 8003140:	0a1b      	lsreq	r3, r3, #8
 8003142:	3008      	addeq	r0, #8
 8003144:	071a      	lsls	r2, r3, #28
 8003146:	bf04      	itt	eq
 8003148:	091b      	lsreq	r3, r3, #4
 800314a:	3004      	addeq	r0, #4
 800314c:	079a      	lsls	r2, r3, #30
 800314e:	bf04      	itt	eq
 8003150:	089b      	lsreq	r3, r3, #2
 8003152:	3002      	addeq	r0, #2
 8003154:	07da      	lsls	r2, r3, #31
 8003156:	d402      	bmi.n	800315e <__lo0bits+0x4e>
 8003158:	085b      	lsrs	r3, r3, #1
 800315a:	d006      	beq.n	800316a <__lo0bits+0x5a>
 800315c:	3001      	adds	r0, #1
 800315e:	600b      	str	r3, [r1, #0]
 8003160:	4770      	bx	lr
 8003162:	4610      	mov	r0, r2
 8003164:	e7e9      	b.n	800313a <__lo0bits+0x2a>
 8003166:	2000      	movs	r0, #0
 8003168:	4770      	bx	lr
 800316a:	2020      	movs	r0, #32
 800316c:	4770      	bx	lr

0800316e <__i2b>:
 800316e:	b510      	push	{r4, lr}
 8003170:	460c      	mov	r4, r1
 8003172:	2101      	movs	r1, #1
 8003174:	f7ff ff27 	bl	8002fc6 <_Balloc>
 8003178:	2201      	movs	r2, #1
 800317a:	6144      	str	r4, [r0, #20]
 800317c:	6102      	str	r2, [r0, #16]
 800317e:	bd10      	pop	{r4, pc}

08003180 <__multiply>:
 8003180:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003184:	4614      	mov	r4, r2
 8003186:	690a      	ldr	r2, [r1, #16]
 8003188:	6923      	ldr	r3, [r4, #16]
 800318a:	4688      	mov	r8, r1
 800318c:	429a      	cmp	r2, r3
 800318e:	bfbe      	ittt	lt
 8003190:	460b      	movlt	r3, r1
 8003192:	46a0      	movlt	r8, r4
 8003194:	461c      	movlt	r4, r3
 8003196:	f8d8 7010 	ldr.w	r7, [r8, #16]
 800319a:	f8d4 9010 	ldr.w	r9, [r4, #16]
 800319e:	f8d8 3008 	ldr.w	r3, [r8, #8]
 80031a2:	f8d8 1004 	ldr.w	r1, [r8, #4]
 80031a6:	eb07 0609 	add.w	r6, r7, r9
 80031aa:	42b3      	cmp	r3, r6
 80031ac:	bfb8      	it	lt
 80031ae:	3101      	addlt	r1, #1
 80031b0:	f7ff ff09 	bl	8002fc6 <_Balloc>
 80031b4:	f100 0514 	add.w	r5, r0, #20
 80031b8:	462b      	mov	r3, r5
 80031ba:	2200      	movs	r2, #0
 80031bc:	eb05 0e86 	add.w	lr, r5, r6, lsl #2
 80031c0:	4573      	cmp	r3, lr
 80031c2:	d316      	bcc.n	80031f2 <__multiply+0x72>
 80031c4:	f104 0214 	add.w	r2, r4, #20
 80031c8:	f108 0114 	add.w	r1, r8, #20
 80031cc:	eb02 0389 	add.w	r3, r2, r9, lsl #2
 80031d0:	eb01 0787 	add.w	r7, r1, r7, lsl #2
 80031d4:	9300      	str	r3, [sp, #0]
 80031d6:	9b00      	ldr	r3, [sp, #0]
 80031d8:	9201      	str	r2, [sp, #4]
 80031da:	4293      	cmp	r3, r2
 80031dc:	d80c      	bhi.n	80031f8 <__multiply+0x78>
 80031de:	2e00      	cmp	r6, #0
 80031e0:	dd03      	ble.n	80031ea <__multiply+0x6a>
 80031e2:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
 80031e6:	2b00      	cmp	r3, #0
 80031e8:	d05d      	beq.n	80032a6 <__multiply+0x126>
 80031ea:	6106      	str	r6, [r0, #16]
 80031ec:	b003      	add	sp, #12
 80031ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80031f2:	f843 2b04 	str.w	r2, [r3], #4
 80031f6:	e7e3      	b.n	80031c0 <__multiply+0x40>
 80031f8:	f8b2 b000 	ldrh.w	fp, [r2]
 80031fc:	f1bb 0f00 	cmp.w	fp, #0
 8003200:	d023      	beq.n	800324a <__multiply+0xca>
 8003202:	4689      	mov	r9, r1
 8003204:	46ac      	mov	ip, r5
 8003206:	f04f 0800 	mov.w	r8, #0
 800320a:	f859 4b04 	ldr.w	r4, [r9], #4
 800320e:	f8dc a000 	ldr.w	sl, [ip]
 8003212:	b2a3      	uxth	r3, r4
 8003214:	fa1f fa8a 	uxth.w	sl, sl
 8003218:	fb0b a303 	mla	r3, fp, r3, sl
 800321c:	ea4f 4a14 	mov.w	sl, r4, lsr #16
 8003220:	f8dc 4000 	ldr.w	r4, [ip]
 8003224:	4443      	add	r3, r8
 8003226:	ea4f 4814 	mov.w	r8, r4, lsr #16
 800322a:	fb0b 840a 	mla	r4, fp, sl, r8
 800322e:	46e2      	mov	sl, ip
 8003230:	eb04 4413 	add.w	r4, r4, r3, lsr #16
 8003234:	b29b      	uxth	r3, r3
 8003236:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 800323a:	454f      	cmp	r7, r9
 800323c:	ea4f 4814 	mov.w	r8, r4, lsr #16
 8003240:	f84a 3b04 	str.w	r3, [sl], #4
 8003244:	d82b      	bhi.n	800329e <__multiply+0x11e>
 8003246:	f8cc 8004 	str.w	r8, [ip, #4]
 800324a:	9b01      	ldr	r3, [sp, #4]
 800324c:	3204      	adds	r2, #4
 800324e:	f8b3 a002 	ldrh.w	sl, [r3, #2]
 8003252:	f1ba 0f00 	cmp.w	sl, #0
 8003256:	d020      	beq.n	800329a <__multiply+0x11a>
 8003258:	4689      	mov	r9, r1
 800325a:	46a8      	mov	r8, r5
 800325c:	f04f 0b00 	mov.w	fp, #0
 8003260:	682b      	ldr	r3, [r5, #0]
 8003262:	f8b9 c000 	ldrh.w	ip, [r9]
 8003266:	f8b8 4002 	ldrh.w	r4, [r8, #2]
 800326a:	b29b      	uxth	r3, r3
 800326c:	fb0a 440c 	mla	r4, sl, ip, r4
 8003270:	46c4      	mov	ip, r8
 8003272:	445c      	add	r4, fp
 8003274:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8003278:	f84c 3b04 	str.w	r3, [ip], #4
 800327c:	f859 3b04 	ldr.w	r3, [r9], #4
 8003280:	f8b8 b004 	ldrh.w	fp, [r8, #4]
 8003284:	0c1b      	lsrs	r3, r3, #16
 8003286:	fb0a b303 	mla	r3, sl, r3, fp
 800328a:	454f      	cmp	r7, r9
 800328c:	eb03 4314 	add.w	r3, r3, r4, lsr #16
 8003290:	ea4f 4b13 	mov.w	fp, r3, lsr #16
 8003294:	d805      	bhi.n	80032a2 <__multiply+0x122>
 8003296:	f8c8 3004 	str.w	r3, [r8, #4]
 800329a:	3504      	adds	r5, #4
 800329c:	e79b      	b.n	80031d6 <__multiply+0x56>
 800329e:	46d4      	mov	ip, sl
 80032a0:	e7b3      	b.n	800320a <__multiply+0x8a>
 80032a2:	46e0      	mov	r8, ip
 80032a4:	e7dd      	b.n	8003262 <__multiply+0xe2>
 80032a6:	3e01      	subs	r6, #1
 80032a8:	e799      	b.n	80031de <__multiply+0x5e>
	...

080032ac <__pow5mult>:
 80032ac:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80032b0:	4615      	mov	r5, r2
 80032b2:	f012 0203 	ands.w	r2, r2, #3
 80032b6:	4606      	mov	r6, r0
 80032b8:	460f      	mov	r7, r1
 80032ba:	d007      	beq.n	80032cc <__pow5mult+0x20>
 80032bc:	4c21      	ldr	r4, [pc, #132]	; (8003344 <__pow5mult+0x98>)
 80032be:	3a01      	subs	r2, #1
 80032c0:	2300      	movs	r3, #0
 80032c2:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 80032c6:	f7ff fec9 	bl	800305c <__multadd>
 80032ca:	4607      	mov	r7, r0
 80032cc:	10ad      	asrs	r5, r5, #2
 80032ce:	d035      	beq.n	800333c <__pow5mult+0x90>
 80032d0:	6a74      	ldr	r4, [r6, #36]	; 0x24
 80032d2:	b93c      	cbnz	r4, 80032e4 <__pow5mult+0x38>
 80032d4:	2010      	movs	r0, #16
 80032d6:	f7ff fe55 	bl	8002f84 <malloc>
 80032da:	6270      	str	r0, [r6, #36]	; 0x24
 80032dc:	e9c0 4401 	strd	r4, r4, [r0, #4]
 80032e0:	6004      	str	r4, [r0, #0]
 80032e2:	60c4      	str	r4, [r0, #12]
 80032e4:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 80032e8:	f8d8 4008 	ldr.w	r4, [r8, #8]
 80032ec:	b94c      	cbnz	r4, 8003302 <__pow5mult+0x56>
 80032ee:	f240 2171 	movw	r1, #625	; 0x271
 80032f2:	4630      	mov	r0, r6
 80032f4:	f7ff ff3b 	bl	800316e <__i2b>
 80032f8:	2300      	movs	r3, #0
 80032fa:	4604      	mov	r4, r0
 80032fc:	f8c8 0008 	str.w	r0, [r8, #8]
 8003300:	6003      	str	r3, [r0, #0]
 8003302:	f04f 0800 	mov.w	r8, #0
 8003306:	07eb      	lsls	r3, r5, #31
 8003308:	d50a      	bpl.n	8003320 <__pow5mult+0x74>
 800330a:	4639      	mov	r1, r7
 800330c:	4622      	mov	r2, r4
 800330e:	4630      	mov	r0, r6
 8003310:	f7ff ff36 	bl	8003180 <__multiply>
 8003314:	4681      	mov	r9, r0
 8003316:	4639      	mov	r1, r7
 8003318:	4630      	mov	r0, r6
 800331a:	f7ff fe88 	bl	800302e <_Bfree>
 800331e:	464f      	mov	r7, r9
 8003320:	106d      	asrs	r5, r5, #1
 8003322:	d00b      	beq.n	800333c <__pow5mult+0x90>
 8003324:	6820      	ldr	r0, [r4, #0]
 8003326:	b938      	cbnz	r0, 8003338 <__pow5mult+0x8c>
 8003328:	4622      	mov	r2, r4
 800332a:	4621      	mov	r1, r4
 800332c:	4630      	mov	r0, r6
 800332e:	f7ff ff27 	bl	8003180 <__multiply>
 8003332:	6020      	str	r0, [r4, #0]
 8003334:	f8c0 8000 	str.w	r8, [r0]
 8003338:	4604      	mov	r4, r0
 800333a:	e7e4      	b.n	8003306 <__pow5mult+0x5a>
 800333c:	4638      	mov	r0, r7
 800333e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003342:	bf00      	nop
 8003344:	08003c20 	.word	0x08003c20

08003348 <__lshift>:
 8003348:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800334c:	460c      	mov	r4, r1
 800334e:	4607      	mov	r7, r0
 8003350:	4616      	mov	r6, r2
 8003352:	6923      	ldr	r3, [r4, #16]
 8003354:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8003358:	eb0a 0903 	add.w	r9, sl, r3
 800335c:	6849      	ldr	r1, [r1, #4]
 800335e:	68a3      	ldr	r3, [r4, #8]
 8003360:	f109 0501 	add.w	r5, r9, #1
 8003364:	42ab      	cmp	r3, r5
 8003366:	db32      	blt.n	80033ce <__lshift+0x86>
 8003368:	4638      	mov	r0, r7
 800336a:	f7ff fe2c 	bl	8002fc6 <_Balloc>
 800336e:	2300      	movs	r3, #0
 8003370:	4680      	mov	r8, r0
 8003372:	461a      	mov	r2, r3
 8003374:	f100 0114 	add.w	r1, r0, #20
 8003378:	4553      	cmp	r3, sl
 800337a:	db2b      	blt.n	80033d4 <__lshift+0x8c>
 800337c:	6920      	ldr	r0, [r4, #16]
 800337e:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8003382:	f104 0314 	add.w	r3, r4, #20
 8003386:	f016 021f 	ands.w	r2, r6, #31
 800338a:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 800338e:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8003392:	d025      	beq.n	80033e0 <__lshift+0x98>
 8003394:	2000      	movs	r0, #0
 8003396:	f1c2 0e20 	rsb	lr, r2, #32
 800339a:	468a      	mov	sl, r1
 800339c:	681e      	ldr	r6, [r3, #0]
 800339e:	4096      	lsls	r6, r2
 80033a0:	4330      	orrs	r0, r6
 80033a2:	f84a 0b04 	str.w	r0, [sl], #4
 80033a6:	f853 0b04 	ldr.w	r0, [r3], #4
 80033aa:	459c      	cmp	ip, r3
 80033ac:	fa20 f00e 	lsr.w	r0, r0, lr
 80033b0:	d814      	bhi.n	80033dc <__lshift+0x94>
 80033b2:	6048      	str	r0, [r1, #4]
 80033b4:	b108      	cbz	r0, 80033ba <__lshift+0x72>
 80033b6:	f109 0502 	add.w	r5, r9, #2
 80033ba:	3d01      	subs	r5, #1
 80033bc:	4638      	mov	r0, r7
 80033be:	f8c8 5010 	str.w	r5, [r8, #16]
 80033c2:	4621      	mov	r1, r4
 80033c4:	f7ff fe33 	bl	800302e <_Bfree>
 80033c8:	4640      	mov	r0, r8
 80033ca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80033ce:	3101      	adds	r1, #1
 80033d0:	005b      	lsls	r3, r3, #1
 80033d2:	e7c7      	b.n	8003364 <__lshift+0x1c>
 80033d4:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80033d8:	3301      	adds	r3, #1
 80033da:	e7cd      	b.n	8003378 <__lshift+0x30>
 80033dc:	4651      	mov	r1, sl
 80033de:	e7dc      	b.n	800339a <__lshift+0x52>
 80033e0:	3904      	subs	r1, #4
 80033e2:	f853 2b04 	ldr.w	r2, [r3], #4
 80033e6:	459c      	cmp	ip, r3
 80033e8:	f841 2f04 	str.w	r2, [r1, #4]!
 80033ec:	d8f9      	bhi.n	80033e2 <__lshift+0x9a>
 80033ee:	e7e4      	b.n	80033ba <__lshift+0x72>

080033f0 <__mcmp>:
 80033f0:	6903      	ldr	r3, [r0, #16]
 80033f2:	690a      	ldr	r2, [r1, #16]
 80033f4:	b530      	push	{r4, r5, lr}
 80033f6:	1a9b      	subs	r3, r3, r2
 80033f8:	d10c      	bne.n	8003414 <__mcmp+0x24>
 80033fa:	0092      	lsls	r2, r2, #2
 80033fc:	3014      	adds	r0, #20
 80033fe:	3114      	adds	r1, #20
 8003400:	1884      	adds	r4, r0, r2
 8003402:	4411      	add	r1, r2
 8003404:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8003408:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 800340c:	4295      	cmp	r5, r2
 800340e:	d003      	beq.n	8003418 <__mcmp+0x28>
 8003410:	d305      	bcc.n	800341e <__mcmp+0x2e>
 8003412:	2301      	movs	r3, #1
 8003414:	4618      	mov	r0, r3
 8003416:	bd30      	pop	{r4, r5, pc}
 8003418:	42a0      	cmp	r0, r4
 800341a:	d3f3      	bcc.n	8003404 <__mcmp+0x14>
 800341c:	e7fa      	b.n	8003414 <__mcmp+0x24>
 800341e:	f04f 33ff 	mov.w	r3, #4294967295
 8003422:	e7f7      	b.n	8003414 <__mcmp+0x24>

08003424 <__mdiff>:
 8003424:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003428:	460d      	mov	r5, r1
 800342a:	4607      	mov	r7, r0
 800342c:	4611      	mov	r1, r2
 800342e:	4628      	mov	r0, r5
 8003430:	4614      	mov	r4, r2
 8003432:	f7ff ffdd 	bl	80033f0 <__mcmp>
 8003436:	1e06      	subs	r6, r0, #0
 8003438:	d108      	bne.n	800344c <__mdiff+0x28>
 800343a:	4631      	mov	r1, r6
 800343c:	4638      	mov	r0, r7
 800343e:	f7ff fdc2 	bl	8002fc6 <_Balloc>
 8003442:	2301      	movs	r3, #1
 8003444:	e9c0 3604 	strd	r3, r6, [r0, #16]
 8003448:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800344c:	bfa4      	itt	ge
 800344e:	4623      	movge	r3, r4
 8003450:	462c      	movge	r4, r5
 8003452:	4638      	mov	r0, r7
 8003454:	6861      	ldr	r1, [r4, #4]
 8003456:	bfa6      	itte	ge
 8003458:	461d      	movge	r5, r3
 800345a:	2600      	movge	r6, #0
 800345c:	2601      	movlt	r6, #1
 800345e:	f7ff fdb2 	bl	8002fc6 <_Balloc>
 8003462:	f04f 0e00 	mov.w	lr, #0
 8003466:	60c6      	str	r6, [r0, #12]
 8003468:	692b      	ldr	r3, [r5, #16]
 800346a:	6926      	ldr	r6, [r4, #16]
 800346c:	f104 0214 	add.w	r2, r4, #20
 8003470:	f105 0914 	add.w	r9, r5, #20
 8003474:	eb02 0786 	add.w	r7, r2, r6, lsl #2
 8003478:	eb09 0883 	add.w	r8, r9, r3, lsl #2
 800347c:	f100 0114 	add.w	r1, r0, #20
 8003480:	f852 ab04 	ldr.w	sl, [r2], #4
 8003484:	f859 5b04 	ldr.w	r5, [r9], #4
 8003488:	fa1f f38a 	uxth.w	r3, sl
 800348c:	4473      	add	r3, lr
 800348e:	b2ac      	uxth	r4, r5
 8003490:	1b1b      	subs	r3, r3, r4
 8003492:	0c2c      	lsrs	r4, r5, #16
 8003494:	ebc4 441a 	rsb	r4, r4, sl, lsr #16
 8003498:	eb04 4423 	add.w	r4, r4, r3, asr #16
 800349c:	b29b      	uxth	r3, r3
 800349e:	ea4f 4e24 	mov.w	lr, r4, asr #16
 80034a2:	45c8      	cmp	r8, r9
 80034a4:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
 80034a8:	4694      	mov	ip, r2
 80034aa:	f841 4b04 	str.w	r4, [r1], #4
 80034ae:	d8e7      	bhi.n	8003480 <__mdiff+0x5c>
 80034b0:	45bc      	cmp	ip, r7
 80034b2:	d304      	bcc.n	80034be <__mdiff+0x9a>
 80034b4:	f851 3d04 	ldr.w	r3, [r1, #-4]!
 80034b8:	b183      	cbz	r3, 80034dc <__mdiff+0xb8>
 80034ba:	6106      	str	r6, [r0, #16]
 80034bc:	e7c4      	b.n	8003448 <__mdiff+0x24>
 80034be:	f85c 4b04 	ldr.w	r4, [ip], #4
 80034c2:	b2a2      	uxth	r2, r4
 80034c4:	4472      	add	r2, lr
 80034c6:	1413      	asrs	r3, r2, #16
 80034c8:	eb03 4314 	add.w	r3, r3, r4, lsr #16
 80034cc:	b292      	uxth	r2, r2
 80034ce:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 80034d2:	ea4f 4e23 	mov.w	lr, r3, asr #16
 80034d6:	f841 2b04 	str.w	r2, [r1], #4
 80034da:	e7e9      	b.n	80034b0 <__mdiff+0x8c>
 80034dc:	3e01      	subs	r6, #1
 80034de:	e7e9      	b.n	80034b4 <__mdiff+0x90>

080034e0 <__d2b>:
 80034e0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80034e4:	461c      	mov	r4, r3
 80034e6:	e9dd 6508 	ldrd	r6, r5, [sp, #32]
 80034ea:	2101      	movs	r1, #1
 80034ec:	4690      	mov	r8, r2
 80034ee:	f7ff fd6a 	bl	8002fc6 <_Balloc>
 80034f2:	f3c4 0213 	ubfx	r2, r4, #0, #20
 80034f6:	f3c4 540a 	ubfx	r4, r4, #20, #11
 80034fa:	4607      	mov	r7, r0
 80034fc:	bb34      	cbnz	r4, 800354c <__d2b+0x6c>
 80034fe:	9201      	str	r2, [sp, #4]
 8003500:	f1b8 0200 	subs.w	r2, r8, #0
 8003504:	d027      	beq.n	8003556 <__d2b+0x76>
 8003506:	a802      	add	r0, sp, #8
 8003508:	f840 2d08 	str.w	r2, [r0, #-8]!
 800350c:	f7ff fe00 	bl	8003110 <__lo0bits>
 8003510:	9900      	ldr	r1, [sp, #0]
 8003512:	b1f0      	cbz	r0, 8003552 <__d2b+0x72>
 8003514:	9a01      	ldr	r2, [sp, #4]
 8003516:	f1c0 0320 	rsb	r3, r0, #32
 800351a:	fa02 f303 	lsl.w	r3, r2, r3
 800351e:	430b      	orrs	r3, r1
 8003520:	40c2      	lsrs	r2, r0
 8003522:	617b      	str	r3, [r7, #20]
 8003524:	9201      	str	r2, [sp, #4]
 8003526:	9b01      	ldr	r3, [sp, #4]
 8003528:	2b00      	cmp	r3, #0
 800352a:	bf14      	ite	ne
 800352c:	2102      	movne	r1, #2
 800352e:	2101      	moveq	r1, #1
 8003530:	61bb      	str	r3, [r7, #24]
 8003532:	6139      	str	r1, [r7, #16]
 8003534:	b1c4      	cbz	r4, 8003568 <__d2b+0x88>
 8003536:	f2a4 4433 	subw	r4, r4, #1075	; 0x433
 800353a:	4404      	add	r4, r0
 800353c:	6034      	str	r4, [r6, #0]
 800353e:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8003542:	6028      	str	r0, [r5, #0]
 8003544:	4638      	mov	r0, r7
 8003546:	b002      	add	sp, #8
 8003548:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800354c:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8003550:	e7d5      	b.n	80034fe <__d2b+0x1e>
 8003552:	6179      	str	r1, [r7, #20]
 8003554:	e7e7      	b.n	8003526 <__d2b+0x46>
 8003556:	a801      	add	r0, sp, #4
 8003558:	f7ff fdda 	bl	8003110 <__lo0bits>
 800355c:	2101      	movs	r1, #1
 800355e:	9b01      	ldr	r3, [sp, #4]
 8003560:	6139      	str	r1, [r7, #16]
 8003562:	617b      	str	r3, [r7, #20]
 8003564:	3020      	adds	r0, #32
 8003566:	e7e5      	b.n	8003534 <__d2b+0x54>
 8003568:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 800356c:	eb07 0381 	add.w	r3, r7, r1, lsl #2
 8003570:	6030      	str	r0, [r6, #0]
 8003572:	6918      	ldr	r0, [r3, #16]
 8003574:	f7ff fdad 	bl	80030d2 <__hi0bits>
 8003578:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
 800357c:	e7e1      	b.n	8003542 <__d2b+0x62>

0800357e <_calloc_r>:
 800357e:	b538      	push	{r3, r4, r5, lr}
 8003580:	fb02 f401 	mul.w	r4, r2, r1
 8003584:	4621      	mov	r1, r4
 8003586:	f000 f855 	bl	8003634 <_malloc_r>
 800358a:	4605      	mov	r5, r0
 800358c:	b118      	cbz	r0, 8003596 <_calloc_r+0x18>
 800358e:	4622      	mov	r2, r4
 8003590:	2100      	movs	r1, #0
 8003592:	f7fe fa2f 	bl	80019f4 <memset>
 8003596:	4628      	mov	r0, r5
 8003598:	bd38      	pop	{r3, r4, r5, pc}
	...

0800359c <_free_r>:
 800359c:	b538      	push	{r3, r4, r5, lr}
 800359e:	4605      	mov	r5, r0
 80035a0:	2900      	cmp	r1, #0
 80035a2:	d043      	beq.n	800362c <_free_r+0x90>
 80035a4:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80035a8:	1f0c      	subs	r4, r1, #4
 80035aa:	2b00      	cmp	r3, #0
 80035ac:	bfb8      	it	lt
 80035ae:	18e4      	addlt	r4, r4, r3
 80035b0:	f000 fa27 	bl	8003a02 <__malloc_lock>
 80035b4:	4a1e      	ldr	r2, [pc, #120]	; (8003630 <_free_r+0x94>)
 80035b6:	6813      	ldr	r3, [r2, #0]
 80035b8:	4610      	mov	r0, r2
 80035ba:	b933      	cbnz	r3, 80035ca <_free_r+0x2e>
 80035bc:	6063      	str	r3, [r4, #4]
 80035be:	6014      	str	r4, [r2, #0]
 80035c0:	4628      	mov	r0, r5
 80035c2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80035c6:	f000 ba1d 	b.w	8003a04 <__malloc_unlock>
 80035ca:	42a3      	cmp	r3, r4
 80035cc:	d90b      	bls.n	80035e6 <_free_r+0x4a>
 80035ce:	6821      	ldr	r1, [r4, #0]
 80035d0:	1862      	adds	r2, r4, r1
 80035d2:	4293      	cmp	r3, r2
 80035d4:	bf01      	itttt	eq
 80035d6:	681a      	ldreq	r2, [r3, #0]
 80035d8:	685b      	ldreq	r3, [r3, #4]
 80035da:	1852      	addeq	r2, r2, r1
 80035dc:	6022      	streq	r2, [r4, #0]
 80035de:	6063      	str	r3, [r4, #4]
 80035e0:	6004      	str	r4, [r0, #0]
 80035e2:	e7ed      	b.n	80035c0 <_free_r+0x24>
 80035e4:	4613      	mov	r3, r2
 80035e6:	685a      	ldr	r2, [r3, #4]
 80035e8:	b10a      	cbz	r2, 80035ee <_free_r+0x52>
 80035ea:	42a2      	cmp	r2, r4
 80035ec:	d9fa      	bls.n	80035e4 <_free_r+0x48>
 80035ee:	6819      	ldr	r1, [r3, #0]
 80035f0:	1858      	adds	r0, r3, r1
 80035f2:	42a0      	cmp	r0, r4
 80035f4:	d10b      	bne.n	800360e <_free_r+0x72>
 80035f6:	6820      	ldr	r0, [r4, #0]
 80035f8:	4401      	add	r1, r0
 80035fa:	1858      	adds	r0, r3, r1
 80035fc:	4282      	cmp	r2, r0
 80035fe:	6019      	str	r1, [r3, #0]
 8003600:	d1de      	bne.n	80035c0 <_free_r+0x24>
 8003602:	6810      	ldr	r0, [r2, #0]
 8003604:	6852      	ldr	r2, [r2, #4]
 8003606:	4401      	add	r1, r0
 8003608:	6019      	str	r1, [r3, #0]
 800360a:	605a      	str	r2, [r3, #4]
 800360c:	e7d8      	b.n	80035c0 <_free_r+0x24>
 800360e:	d902      	bls.n	8003616 <_free_r+0x7a>
 8003610:	230c      	movs	r3, #12
 8003612:	602b      	str	r3, [r5, #0]
 8003614:	e7d4      	b.n	80035c0 <_free_r+0x24>
 8003616:	6820      	ldr	r0, [r4, #0]
 8003618:	1821      	adds	r1, r4, r0
 800361a:	428a      	cmp	r2, r1
 800361c:	bf01      	itttt	eq
 800361e:	6811      	ldreq	r1, [r2, #0]
 8003620:	6852      	ldreq	r2, [r2, #4]
 8003622:	1809      	addeq	r1, r1, r0
 8003624:	6021      	streq	r1, [r4, #0]
 8003626:	6062      	str	r2, [r4, #4]
 8003628:	605c      	str	r4, [r3, #4]
 800362a:	e7c9      	b.n	80035c0 <_free_r+0x24>
 800362c:	bd38      	pop	{r3, r4, r5, pc}
 800362e:	bf00      	nop
 8003630:	200001f4 	.word	0x200001f4

08003634 <_malloc_r>:
 8003634:	b570      	push	{r4, r5, r6, lr}
 8003636:	1ccd      	adds	r5, r1, #3
 8003638:	f025 0503 	bic.w	r5, r5, #3
 800363c:	3508      	adds	r5, #8
 800363e:	2d0c      	cmp	r5, #12
 8003640:	bf38      	it	cc
 8003642:	250c      	movcc	r5, #12
 8003644:	2d00      	cmp	r5, #0
 8003646:	4606      	mov	r6, r0
 8003648:	db01      	blt.n	800364e <_malloc_r+0x1a>
 800364a:	42a9      	cmp	r1, r5
 800364c:	d903      	bls.n	8003656 <_malloc_r+0x22>
 800364e:	230c      	movs	r3, #12
 8003650:	6033      	str	r3, [r6, #0]
 8003652:	2000      	movs	r0, #0
 8003654:	bd70      	pop	{r4, r5, r6, pc}
 8003656:	f000 f9d4 	bl	8003a02 <__malloc_lock>
 800365a:	4a21      	ldr	r2, [pc, #132]	; (80036e0 <_malloc_r+0xac>)
 800365c:	6814      	ldr	r4, [r2, #0]
 800365e:	4621      	mov	r1, r4
 8003660:	b991      	cbnz	r1, 8003688 <_malloc_r+0x54>
 8003662:	4c20      	ldr	r4, [pc, #128]	; (80036e4 <_malloc_r+0xb0>)
 8003664:	6823      	ldr	r3, [r4, #0]
 8003666:	b91b      	cbnz	r3, 8003670 <_malloc_r+0x3c>
 8003668:	4630      	mov	r0, r6
 800366a:	f000 f98f 	bl	800398c <_sbrk_r>
 800366e:	6020      	str	r0, [r4, #0]
 8003670:	4629      	mov	r1, r5
 8003672:	4630      	mov	r0, r6
 8003674:	f000 f98a 	bl	800398c <_sbrk_r>
 8003678:	1c43      	adds	r3, r0, #1
 800367a:	d124      	bne.n	80036c6 <_malloc_r+0x92>
 800367c:	230c      	movs	r3, #12
 800367e:	4630      	mov	r0, r6
 8003680:	6033      	str	r3, [r6, #0]
 8003682:	f000 f9bf 	bl	8003a04 <__malloc_unlock>
 8003686:	e7e4      	b.n	8003652 <_malloc_r+0x1e>
 8003688:	680b      	ldr	r3, [r1, #0]
 800368a:	1b5b      	subs	r3, r3, r5
 800368c:	d418      	bmi.n	80036c0 <_malloc_r+0x8c>
 800368e:	2b0b      	cmp	r3, #11
 8003690:	d90f      	bls.n	80036b2 <_malloc_r+0x7e>
 8003692:	600b      	str	r3, [r1, #0]
 8003694:	18cc      	adds	r4, r1, r3
 8003696:	50cd      	str	r5, [r1, r3]
 8003698:	4630      	mov	r0, r6
 800369a:	f000 f9b3 	bl	8003a04 <__malloc_unlock>
 800369e:	f104 000b 	add.w	r0, r4, #11
 80036a2:	1d23      	adds	r3, r4, #4
 80036a4:	f020 0007 	bic.w	r0, r0, #7
 80036a8:	1ac3      	subs	r3, r0, r3
 80036aa:	d0d3      	beq.n	8003654 <_malloc_r+0x20>
 80036ac:	425a      	negs	r2, r3
 80036ae:	50e2      	str	r2, [r4, r3]
 80036b0:	e7d0      	b.n	8003654 <_malloc_r+0x20>
 80036b2:	684b      	ldr	r3, [r1, #4]
 80036b4:	428c      	cmp	r4, r1
 80036b6:	bf16      	itet	ne
 80036b8:	6063      	strne	r3, [r4, #4]
 80036ba:	6013      	streq	r3, [r2, #0]
 80036bc:	460c      	movne	r4, r1
 80036be:	e7eb      	b.n	8003698 <_malloc_r+0x64>
 80036c0:	460c      	mov	r4, r1
 80036c2:	6849      	ldr	r1, [r1, #4]
 80036c4:	e7cc      	b.n	8003660 <_malloc_r+0x2c>
 80036c6:	1cc4      	adds	r4, r0, #3
 80036c8:	f024 0403 	bic.w	r4, r4, #3
 80036cc:	42a0      	cmp	r0, r4
 80036ce:	d005      	beq.n	80036dc <_malloc_r+0xa8>
 80036d0:	1a21      	subs	r1, r4, r0
 80036d2:	4630      	mov	r0, r6
 80036d4:	f000 f95a 	bl	800398c <_sbrk_r>
 80036d8:	3001      	adds	r0, #1
 80036da:	d0cf      	beq.n	800367c <_malloc_r+0x48>
 80036dc:	6025      	str	r5, [r4, #0]
 80036de:	e7db      	b.n	8003698 <_malloc_r+0x64>
 80036e0:	200001f4 	.word	0x200001f4
 80036e4:	200001f8 	.word	0x200001f8

080036e8 <__ssputs_r>:
 80036e8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80036ec:	688e      	ldr	r6, [r1, #8]
 80036ee:	4682      	mov	sl, r0
 80036f0:	429e      	cmp	r6, r3
 80036f2:	460c      	mov	r4, r1
 80036f4:	4690      	mov	r8, r2
 80036f6:	4699      	mov	r9, r3
 80036f8:	d837      	bhi.n	800376a <__ssputs_r+0x82>
 80036fa:	898a      	ldrh	r2, [r1, #12]
 80036fc:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8003700:	d031      	beq.n	8003766 <__ssputs_r+0x7e>
 8003702:	2302      	movs	r3, #2
 8003704:	6825      	ldr	r5, [r4, #0]
 8003706:	6909      	ldr	r1, [r1, #16]
 8003708:	1a6f      	subs	r7, r5, r1
 800370a:	6965      	ldr	r5, [r4, #20]
 800370c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8003710:	fb95 f5f3 	sdiv	r5, r5, r3
 8003714:	f109 0301 	add.w	r3, r9, #1
 8003718:	443b      	add	r3, r7
 800371a:	429d      	cmp	r5, r3
 800371c:	bf38      	it	cc
 800371e:	461d      	movcc	r5, r3
 8003720:	0553      	lsls	r3, r2, #21
 8003722:	d530      	bpl.n	8003786 <__ssputs_r+0x9e>
 8003724:	4629      	mov	r1, r5
 8003726:	f7ff ff85 	bl	8003634 <_malloc_r>
 800372a:	4606      	mov	r6, r0
 800372c:	b950      	cbnz	r0, 8003744 <__ssputs_r+0x5c>
 800372e:	230c      	movs	r3, #12
 8003730:	f04f 30ff 	mov.w	r0, #4294967295
 8003734:	f8ca 3000 	str.w	r3, [sl]
 8003738:	89a3      	ldrh	r3, [r4, #12]
 800373a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800373e:	81a3      	strh	r3, [r4, #12]
 8003740:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003744:	463a      	mov	r2, r7
 8003746:	6921      	ldr	r1, [r4, #16]
 8003748:	f7ff fc32 	bl	8002fb0 <memcpy>
 800374c:	89a3      	ldrh	r3, [r4, #12]
 800374e:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8003752:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003756:	81a3      	strh	r3, [r4, #12]
 8003758:	6126      	str	r6, [r4, #16]
 800375a:	443e      	add	r6, r7
 800375c:	6026      	str	r6, [r4, #0]
 800375e:	464e      	mov	r6, r9
 8003760:	6165      	str	r5, [r4, #20]
 8003762:	1bed      	subs	r5, r5, r7
 8003764:	60a5      	str	r5, [r4, #8]
 8003766:	454e      	cmp	r6, r9
 8003768:	d900      	bls.n	800376c <__ssputs_r+0x84>
 800376a:	464e      	mov	r6, r9
 800376c:	4632      	mov	r2, r6
 800376e:	4641      	mov	r1, r8
 8003770:	6820      	ldr	r0, [r4, #0]
 8003772:	f000 f92d 	bl	80039d0 <memmove>
 8003776:	68a3      	ldr	r3, [r4, #8]
 8003778:	2000      	movs	r0, #0
 800377a:	1b9b      	subs	r3, r3, r6
 800377c:	60a3      	str	r3, [r4, #8]
 800377e:	6823      	ldr	r3, [r4, #0]
 8003780:	441e      	add	r6, r3
 8003782:	6026      	str	r6, [r4, #0]
 8003784:	e7dc      	b.n	8003740 <__ssputs_r+0x58>
 8003786:	462a      	mov	r2, r5
 8003788:	f000 f93d 	bl	8003a06 <_realloc_r>
 800378c:	4606      	mov	r6, r0
 800378e:	2800      	cmp	r0, #0
 8003790:	d1e2      	bne.n	8003758 <__ssputs_r+0x70>
 8003792:	6921      	ldr	r1, [r4, #16]
 8003794:	4650      	mov	r0, sl
 8003796:	f7ff ff01 	bl	800359c <_free_r>
 800379a:	e7c8      	b.n	800372e <__ssputs_r+0x46>

0800379c <_svfiprintf_r>:
 800379c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80037a0:	461d      	mov	r5, r3
 80037a2:	898b      	ldrh	r3, [r1, #12]
 80037a4:	b09d      	sub	sp, #116	; 0x74
 80037a6:	061f      	lsls	r7, r3, #24
 80037a8:	4680      	mov	r8, r0
 80037aa:	460c      	mov	r4, r1
 80037ac:	4616      	mov	r6, r2
 80037ae:	d50f      	bpl.n	80037d0 <_svfiprintf_r+0x34>
 80037b0:	690b      	ldr	r3, [r1, #16]
 80037b2:	b96b      	cbnz	r3, 80037d0 <_svfiprintf_r+0x34>
 80037b4:	2140      	movs	r1, #64	; 0x40
 80037b6:	f7ff ff3d 	bl	8003634 <_malloc_r>
 80037ba:	6020      	str	r0, [r4, #0]
 80037bc:	6120      	str	r0, [r4, #16]
 80037be:	b928      	cbnz	r0, 80037cc <_svfiprintf_r+0x30>
 80037c0:	230c      	movs	r3, #12
 80037c2:	f8c8 3000 	str.w	r3, [r8]
 80037c6:	f04f 30ff 	mov.w	r0, #4294967295
 80037ca:	e0c8      	b.n	800395e <_svfiprintf_r+0x1c2>
 80037cc:	2340      	movs	r3, #64	; 0x40
 80037ce:	6163      	str	r3, [r4, #20]
 80037d0:	2300      	movs	r3, #0
 80037d2:	9309      	str	r3, [sp, #36]	; 0x24
 80037d4:	2320      	movs	r3, #32
 80037d6:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80037da:	2330      	movs	r3, #48	; 0x30
 80037dc:	f04f 0b01 	mov.w	fp, #1
 80037e0:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80037e4:	9503      	str	r5, [sp, #12]
 80037e6:	4637      	mov	r7, r6
 80037e8:	463d      	mov	r5, r7
 80037ea:	f815 3b01 	ldrb.w	r3, [r5], #1
 80037ee:	b10b      	cbz	r3, 80037f4 <_svfiprintf_r+0x58>
 80037f0:	2b25      	cmp	r3, #37	; 0x25
 80037f2:	d13e      	bne.n	8003872 <_svfiprintf_r+0xd6>
 80037f4:	ebb7 0a06 	subs.w	sl, r7, r6
 80037f8:	d00b      	beq.n	8003812 <_svfiprintf_r+0x76>
 80037fa:	4653      	mov	r3, sl
 80037fc:	4632      	mov	r2, r6
 80037fe:	4621      	mov	r1, r4
 8003800:	4640      	mov	r0, r8
 8003802:	f7ff ff71 	bl	80036e8 <__ssputs_r>
 8003806:	3001      	adds	r0, #1
 8003808:	f000 80a4 	beq.w	8003954 <_svfiprintf_r+0x1b8>
 800380c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800380e:	4453      	add	r3, sl
 8003810:	9309      	str	r3, [sp, #36]	; 0x24
 8003812:	783b      	ldrb	r3, [r7, #0]
 8003814:	2b00      	cmp	r3, #0
 8003816:	f000 809d 	beq.w	8003954 <_svfiprintf_r+0x1b8>
 800381a:	2300      	movs	r3, #0
 800381c:	f04f 32ff 	mov.w	r2, #4294967295
 8003820:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8003824:	9304      	str	r3, [sp, #16]
 8003826:	9307      	str	r3, [sp, #28]
 8003828:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800382c:	931a      	str	r3, [sp, #104]	; 0x68
 800382e:	462f      	mov	r7, r5
 8003830:	2205      	movs	r2, #5
 8003832:	f817 1b01 	ldrb.w	r1, [r7], #1
 8003836:	4850      	ldr	r0, [pc, #320]	; (8003978 <_svfiprintf_r+0x1dc>)
 8003838:	f7ff fbac 	bl	8002f94 <memchr>
 800383c:	9b04      	ldr	r3, [sp, #16]
 800383e:	b9d0      	cbnz	r0, 8003876 <_svfiprintf_r+0xda>
 8003840:	06d9      	lsls	r1, r3, #27
 8003842:	bf44      	itt	mi
 8003844:	2220      	movmi	r2, #32
 8003846:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 800384a:	071a      	lsls	r2, r3, #28
 800384c:	bf44      	itt	mi
 800384e:	222b      	movmi	r2, #43	; 0x2b
 8003850:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8003854:	782a      	ldrb	r2, [r5, #0]
 8003856:	2a2a      	cmp	r2, #42	; 0x2a
 8003858:	d015      	beq.n	8003886 <_svfiprintf_r+0xea>
 800385a:	462f      	mov	r7, r5
 800385c:	2000      	movs	r0, #0
 800385e:	250a      	movs	r5, #10
 8003860:	9a07      	ldr	r2, [sp, #28]
 8003862:	4639      	mov	r1, r7
 8003864:	f811 3b01 	ldrb.w	r3, [r1], #1
 8003868:	3b30      	subs	r3, #48	; 0x30
 800386a:	2b09      	cmp	r3, #9
 800386c:	d94d      	bls.n	800390a <_svfiprintf_r+0x16e>
 800386e:	b1b8      	cbz	r0, 80038a0 <_svfiprintf_r+0x104>
 8003870:	e00f      	b.n	8003892 <_svfiprintf_r+0xf6>
 8003872:	462f      	mov	r7, r5
 8003874:	e7b8      	b.n	80037e8 <_svfiprintf_r+0x4c>
 8003876:	4a40      	ldr	r2, [pc, #256]	; (8003978 <_svfiprintf_r+0x1dc>)
 8003878:	463d      	mov	r5, r7
 800387a:	1a80      	subs	r0, r0, r2
 800387c:	fa0b f000 	lsl.w	r0, fp, r0
 8003880:	4318      	orrs	r0, r3
 8003882:	9004      	str	r0, [sp, #16]
 8003884:	e7d3      	b.n	800382e <_svfiprintf_r+0x92>
 8003886:	9a03      	ldr	r2, [sp, #12]
 8003888:	1d11      	adds	r1, r2, #4
 800388a:	6812      	ldr	r2, [r2, #0]
 800388c:	9103      	str	r1, [sp, #12]
 800388e:	2a00      	cmp	r2, #0
 8003890:	db01      	blt.n	8003896 <_svfiprintf_r+0xfa>
 8003892:	9207      	str	r2, [sp, #28]
 8003894:	e004      	b.n	80038a0 <_svfiprintf_r+0x104>
 8003896:	4252      	negs	r2, r2
 8003898:	f043 0302 	orr.w	r3, r3, #2
 800389c:	9207      	str	r2, [sp, #28]
 800389e:	9304      	str	r3, [sp, #16]
 80038a0:	783b      	ldrb	r3, [r7, #0]
 80038a2:	2b2e      	cmp	r3, #46	; 0x2e
 80038a4:	d10c      	bne.n	80038c0 <_svfiprintf_r+0x124>
 80038a6:	787b      	ldrb	r3, [r7, #1]
 80038a8:	2b2a      	cmp	r3, #42	; 0x2a
 80038aa:	d133      	bne.n	8003914 <_svfiprintf_r+0x178>
 80038ac:	9b03      	ldr	r3, [sp, #12]
 80038ae:	3702      	adds	r7, #2
 80038b0:	1d1a      	adds	r2, r3, #4
 80038b2:	681b      	ldr	r3, [r3, #0]
 80038b4:	9203      	str	r2, [sp, #12]
 80038b6:	2b00      	cmp	r3, #0
 80038b8:	bfb8      	it	lt
 80038ba:	f04f 33ff 	movlt.w	r3, #4294967295
 80038be:	9305      	str	r3, [sp, #20]
 80038c0:	4d2e      	ldr	r5, [pc, #184]	; (800397c <_svfiprintf_r+0x1e0>)
 80038c2:	2203      	movs	r2, #3
 80038c4:	7839      	ldrb	r1, [r7, #0]
 80038c6:	4628      	mov	r0, r5
 80038c8:	f7ff fb64 	bl	8002f94 <memchr>
 80038cc:	b138      	cbz	r0, 80038de <_svfiprintf_r+0x142>
 80038ce:	2340      	movs	r3, #64	; 0x40
 80038d0:	1b40      	subs	r0, r0, r5
 80038d2:	fa03 f000 	lsl.w	r0, r3, r0
 80038d6:	9b04      	ldr	r3, [sp, #16]
 80038d8:	3701      	adds	r7, #1
 80038da:	4303      	orrs	r3, r0
 80038dc:	9304      	str	r3, [sp, #16]
 80038de:	7839      	ldrb	r1, [r7, #0]
 80038e0:	2206      	movs	r2, #6
 80038e2:	4827      	ldr	r0, [pc, #156]	; (8003980 <_svfiprintf_r+0x1e4>)
 80038e4:	1c7e      	adds	r6, r7, #1
 80038e6:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80038ea:	f7ff fb53 	bl	8002f94 <memchr>
 80038ee:	2800      	cmp	r0, #0
 80038f0:	d038      	beq.n	8003964 <_svfiprintf_r+0x1c8>
 80038f2:	4b24      	ldr	r3, [pc, #144]	; (8003984 <_svfiprintf_r+0x1e8>)
 80038f4:	bb13      	cbnz	r3, 800393c <_svfiprintf_r+0x1a0>
 80038f6:	9b03      	ldr	r3, [sp, #12]
 80038f8:	3307      	adds	r3, #7
 80038fa:	f023 0307 	bic.w	r3, r3, #7
 80038fe:	3308      	adds	r3, #8
 8003900:	9303      	str	r3, [sp, #12]
 8003902:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003904:	444b      	add	r3, r9
 8003906:	9309      	str	r3, [sp, #36]	; 0x24
 8003908:	e76d      	b.n	80037e6 <_svfiprintf_r+0x4a>
 800390a:	fb05 3202 	mla	r2, r5, r2, r3
 800390e:	2001      	movs	r0, #1
 8003910:	460f      	mov	r7, r1
 8003912:	e7a6      	b.n	8003862 <_svfiprintf_r+0xc6>
 8003914:	2300      	movs	r3, #0
 8003916:	250a      	movs	r5, #10
 8003918:	4619      	mov	r1, r3
 800391a:	3701      	adds	r7, #1
 800391c:	9305      	str	r3, [sp, #20]
 800391e:	4638      	mov	r0, r7
 8003920:	f810 2b01 	ldrb.w	r2, [r0], #1
 8003924:	3a30      	subs	r2, #48	; 0x30
 8003926:	2a09      	cmp	r2, #9
 8003928:	d903      	bls.n	8003932 <_svfiprintf_r+0x196>
 800392a:	2b00      	cmp	r3, #0
 800392c:	d0c8      	beq.n	80038c0 <_svfiprintf_r+0x124>
 800392e:	9105      	str	r1, [sp, #20]
 8003930:	e7c6      	b.n	80038c0 <_svfiprintf_r+0x124>
 8003932:	fb05 2101 	mla	r1, r5, r1, r2
 8003936:	2301      	movs	r3, #1
 8003938:	4607      	mov	r7, r0
 800393a:	e7f0      	b.n	800391e <_svfiprintf_r+0x182>
 800393c:	ab03      	add	r3, sp, #12
 800393e:	9300      	str	r3, [sp, #0]
 8003940:	4622      	mov	r2, r4
 8003942:	4b11      	ldr	r3, [pc, #68]	; (8003988 <_svfiprintf_r+0x1ec>)
 8003944:	a904      	add	r1, sp, #16
 8003946:	4640      	mov	r0, r8
 8003948:	f7fe f8ee 	bl	8001b28 <_printf_float>
 800394c:	f1b0 3fff 	cmp.w	r0, #4294967295
 8003950:	4681      	mov	r9, r0
 8003952:	d1d6      	bne.n	8003902 <_svfiprintf_r+0x166>
 8003954:	89a3      	ldrh	r3, [r4, #12]
 8003956:	065b      	lsls	r3, r3, #25
 8003958:	f53f af35 	bmi.w	80037c6 <_svfiprintf_r+0x2a>
 800395c:	9809      	ldr	r0, [sp, #36]	; 0x24
 800395e:	b01d      	add	sp, #116	; 0x74
 8003960:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003964:	ab03      	add	r3, sp, #12
 8003966:	9300      	str	r3, [sp, #0]
 8003968:	4622      	mov	r2, r4
 800396a:	4b07      	ldr	r3, [pc, #28]	; (8003988 <_svfiprintf_r+0x1ec>)
 800396c:	a904      	add	r1, sp, #16
 800396e:	4640      	mov	r0, r8
 8003970:	f7fe fb86 	bl	8002080 <_printf_i>
 8003974:	e7ea      	b.n	800394c <_svfiprintf_r+0x1b0>
 8003976:	bf00      	nop
 8003978:	08003c2c 	.word	0x08003c2c
 800397c:	08003c32 	.word	0x08003c32
 8003980:	08003c36 	.word	0x08003c36
 8003984:	08001b29 	.word	0x08001b29
 8003988:	080036e9 	.word	0x080036e9

0800398c <_sbrk_r>:
 800398c:	b538      	push	{r3, r4, r5, lr}
 800398e:	2300      	movs	r3, #0
 8003990:	4c05      	ldr	r4, [pc, #20]	; (80039a8 <_sbrk_r+0x1c>)
 8003992:	4605      	mov	r5, r0
 8003994:	4608      	mov	r0, r1
 8003996:	6023      	str	r3, [r4, #0]
 8003998:	f000 f870 	bl	8003a7c <_sbrk>
 800399c:	1c43      	adds	r3, r0, #1
 800399e:	d102      	bne.n	80039a6 <_sbrk_r+0x1a>
 80039a0:	6823      	ldr	r3, [r4, #0]
 80039a2:	b103      	cbz	r3, 80039a6 <_sbrk_r+0x1a>
 80039a4:	602b      	str	r3, [r5, #0]
 80039a6:	bd38      	pop	{r3, r4, r5, pc}
 80039a8:	2000022c 	.word	0x2000022c

080039ac <__ascii_mbtowc>:
 80039ac:	b082      	sub	sp, #8
 80039ae:	b901      	cbnz	r1, 80039b2 <__ascii_mbtowc+0x6>
 80039b0:	a901      	add	r1, sp, #4
 80039b2:	b142      	cbz	r2, 80039c6 <__ascii_mbtowc+0x1a>
 80039b4:	b14b      	cbz	r3, 80039ca <__ascii_mbtowc+0x1e>
 80039b6:	7813      	ldrb	r3, [r2, #0]
 80039b8:	600b      	str	r3, [r1, #0]
 80039ba:	7812      	ldrb	r2, [r2, #0]
 80039bc:	1c10      	adds	r0, r2, #0
 80039be:	bf18      	it	ne
 80039c0:	2001      	movne	r0, #1
 80039c2:	b002      	add	sp, #8
 80039c4:	4770      	bx	lr
 80039c6:	4610      	mov	r0, r2
 80039c8:	e7fb      	b.n	80039c2 <__ascii_mbtowc+0x16>
 80039ca:	f06f 0001 	mvn.w	r0, #1
 80039ce:	e7f8      	b.n	80039c2 <__ascii_mbtowc+0x16>

080039d0 <memmove>:
 80039d0:	4288      	cmp	r0, r1
 80039d2:	b510      	push	{r4, lr}
 80039d4:	eb01 0302 	add.w	r3, r1, r2
 80039d8:	d807      	bhi.n	80039ea <memmove+0x1a>
 80039da:	1e42      	subs	r2, r0, #1
 80039dc:	4299      	cmp	r1, r3
 80039de:	d00a      	beq.n	80039f6 <memmove+0x26>
 80039e0:	f811 4b01 	ldrb.w	r4, [r1], #1
 80039e4:	f802 4f01 	strb.w	r4, [r2, #1]!
 80039e8:	e7f8      	b.n	80039dc <memmove+0xc>
 80039ea:	4283      	cmp	r3, r0
 80039ec:	d9f5      	bls.n	80039da <memmove+0xa>
 80039ee:	1881      	adds	r1, r0, r2
 80039f0:	1ad2      	subs	r2, r2, r3
 80039f2:	42d3      	cmn	r3, r2
 80039f4:	d100      	bne.n	80039f8 <memmove+0x28>
 80039f6:	bd10      	pop	{r4, pc}
 80039f8:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80039fc:	f801 4d01 	strb.w	r4, [r1, #-1]!
 8003a00:	e7f7      	b.n	80039f2 <memmove+0x22>

08003a02 <__malloc_lock>:
 8003a02:	4770      	bx	lr

08003a04 <__malloc_unlock>:
 8003a04:	4770      	bx	lr

08003a06 <_realloc_r>:
 8003a06:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003a08:	4607      	mov	r7, r0
 8003a0a:	4614      	mov	r4, r2
 8003a0c:	460e      	mov	r6, r1
 8003a0e:	b921      	cbnz	r1, 8003a1a <_realloc_r+0x14>
 8003a10:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8003a14:	4611      	mov	r1, r2
 8003a16:	f7ff be0d 	b.w	8003634 <_malloc_r>
 8003a1a:	b922      	cbnz	r2, 8003a26 <_realloc_r+0x20>
 8003a1c:	f7ff fdbe 	bl	800359c <_free_r>
 8003a20:	4625      	mov	r5, r4
 8003a22:	4628      	mov	r0, r5
 8003a24:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003a26:	f000 f821 	bl	8003a6c <_malloc_usable_size_r>
 8003a2a:	42a0      	cmp	r0, r4
 8003a2c:	d20f      	bcs.n	8003a4e <_realloc_r+0x48>
 8003a2e:	4621      	mov	r1, r4
 8003a30:	4638      	mov	r0, r7
 8003a32:	f7ff fdff 	bl	8003634 <_malloc_r>
 8003a36:	4605      	mov	r5, r0
 8003a38:	2800      	cmp	r0, #0
 8003a3a:	d0f2      	beq.n	8003a22 <_realloc_r+0x1c>
 8003a3c:	4631      	mov	r1, r6
 8003a3e:	4622      	mov	r2, r4
 8003a40:	f7ff fab6 	bl	8002fb0 <memcpy>
 8003a44:	4631      	mov	r1, r6
 8003a46:	4638      	mov	r0, r7
 8003a48:	f7ff fda8 	bl	800359c <_free_r>
 8003a4c:	e7e9      	b.n	8003a22 <_realloc_r+0x1c>
 8003a4e:	4635      	mov	r5, r6
 8003a50:	e7e7      	b.n	8003a22 <_realloc_r+0x1c>

08003a52 <__ascii_wctomb>:
 8003a52:	b149      	cbz	r1, 8003a68 <__ascii_wctomb+0x16>
 8003a54:	2aff      	cmp	r2, #255	; 0xff
 8003a56:	bf8b      	itete	hi
 8003a58:	238a      	movhi	r3, #138	; 0x8a
 8003a5a:	700a      	strbls	r2, [r1, #0]
 8003a5c:	6003      	strhi	r3, [r0, #0]
 8003a5e:	2001      	movls	r0, #1
 8003a60:	bf88      	it	hi
 8003a62:	f04f 30ff 	movhi.w	r0, #4294967295
 8003a66:	4770      	bx	lr
 8003a68:	4608      	mov	r0, r1
 8003a6a:	4770      	bx	lr

08003a6c <_malloc_usable_size_r>:
 8003a6c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8003a70:	1f18      	subs	r0, r3, #4
 8003a72:	2b00      	cmp	r3, #0
 8003a74:	bfbc      	itt	lt
 8003a76:	580b      	ldrlt	r3, [r1, r0]
 8003a78:	18c0      	addlt	r0, r0, r3
 8003a7a:	4770      	bx	lr

08003a7c <_sbrk>:
 8003a7c:	4b04      	ldr	r3, [pc, #16]	; (8003a90 <_sbrk+0x14>)
 8003a7e:	4602      	mov	r2, r0
 8003a80:	6819      	ldr	r1, [r3, #0]
 8003a82:	b909      	cbnz	r1, 8003a88 <_sbrk+0xc>
 8003a84:	4903      	ldr	r1, [pc, #12]	; (8003a94 <_sbrk+0x18>)
 8003a86:	6019      	str	r1, [r3, #0]
 8003a88:	6818      	ldr	r0, [r3, #0]
 8003a8a:	4402      	add	r2, r0
 8003a8c:	601a      	str	r2, [r3, #0]
 8003a8e:	4770      	bx	lr
 8003a90:	200001fc 	.word	0x200001fc
 8003a94:	20000230 	.word	0x20000230

08003a98 <_init>:
 8003a98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003a9a:	bf00      	nop
 8003a9c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8003a9e:	bc08      	pop	{r3}
 8003aa0:	469e      	mov	lr, r3
 8003aa2:	4770      	bx	lr

08003aa4 <_fini>:
 8003aa4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003aa6:	bf00      	nop
 8003aa8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8003aaa:	bc08      	pop	{r3}
 8003aac:	469e      	mov	lr, r3
 8003aae:	4770      	bx	lr
